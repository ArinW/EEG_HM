{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"collapsed_sections":["ujeckLVCbcsy","hasR26AsbGCD","feAS1HIJbJY5","nUx4qFWCYUAl","r9BgUIcSSPVY"]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"CZ06X9wMV-8I","executionInfo":{"status":"ok","timestamp":1713401431604,"user_tz":240,"elapsed":1475,"user":{"displayName":"Grace Xiao","userId":"17822519317399742953"}},"outputId":"c659ca5f-851a-4bb0-aa45-4866c043cb9c"},"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"]}],"source":["from google.colab import drive\n","drive.mount('/content/drive')"]},{"cell_type":"code","source":["import pandas as pd\n","import numpy as np\n","from scipy.signal import find_peaks, welch\n","from statsmodels.tsa.ar_model import AutoReg\n","import os\n","import statsmodels.api as sm"],"metadata":{"id":"bj4QRXrWWPLw"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## Features:\n","### Statistical Features\n","Mean: The average amplitude of the EEG signal.\n","\n","Standard Deviation: The variability of the EEG signal amplitude.\n","\n","Variance: The square of the standard deviation.\n","\n","Median: The middle value of the EEG signal amplitude.\n","\n","Min/Max: The minimum and maximum amplitudes.\n","\n","### Hjorth Parameters:\n","Activity: The signal variance.\n","\n","Mobility: The signal's mean frequency.\n","\n","Complexity: A measure of the signal's bandwidth.\n","\n","### Signal Magnitude Area (SMA)\n","\n","Represents the cumulative sum of the magnitude of the signal.\n","\n","### Root Mean Square (RMS)\n","\n","Root Mean Square (RMS)\n","\n","### Autocorrelation\n","\n","Measures the correlation between a signal and a lagged version of itself.\n","\n","### Derivatives\n","\n","Provide information about the rate of change of the signal.\n","\n","### Signal Magnitude Vector (SMV)\n","\n","Represents the magnitude of the vector formed by the three-dimensional signal.\n","\n","### Autoregressive (AR) Coefficients:\n","These coefficients describe the EEG signal using a linear time-series model."],"metadata":{"id":"0Lc6NAqcdvvp"}},{"cell_type":"markdown","source":["###Sample data"],"metadata":{"id":"ujeckLVCbcsy"}},{"cell_type":"code","source":["hand_test0_1=pd.read_csv('/content/drive/MyDrive/MLMA_Data/BS-HMS-Dataset/Emotiv hand movement lefthand/HM_Test0_watchLeft_0_one_acc.csv')\n","hand_test0_1.iloc[0:250]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"IusviJPiWagJ","executionInfo":{"status":"ok","timestamp":1713383603427,"user_tz":240,"elapsed":4493,"user":{"displayName":"Grace Xiao","userId":"17822519317399742953"}},"outputId":"43c14713-2d93-4873-d510-42480505684d"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         Timestamp         X         Y         Z  Relative_timestamp  \\\n","0    1566152175528  6.036760 -4.792068  7.061238       1566152180378   \n","1    1566152175529  6.180379 -4.667598  6.678256       1566152180378   \n","2    1566152175531  6.228251 -4.696322  6.678256       1566152180382   \n","3    1566152175532  6.237826 -4.744195  6.716554       1566152180382   \n","4    1566152175533  6.199528 -4.725046  6.678256       1566152180382   \n","..             ...       ...       ...       ...                 ...   \n","245  1566152176472  6.189953 -5.586756  5.998462       1566152181335   \n","246  1566152176476  6.180379 -5.634629  6.008037       1566152181335   \n","247  1566152176480  6.170804 -5.644203  5.960164       1566152181335   \n","248  1566152176484  6.151655 -5.663352  5.960164       1566152181335   \n","249  1566152176488  6.122931 -5.653778  5.969738       1566152181335   \n","\n","     Timestamp_scaled  Relative_timestamp_scaled  \n","0               0.000                          0  \n","1               0.001                          0  \n","2               0.003                          4  \n","3               0.004                          4  \n","4               0.005                          4  \n","..                ...                        ...  \n","245             0.944                        957  \n","246             0.948                        957  \n","247             0.952                        957  \n","248             0.956                        957  \n","249             0.960                        957  \n","\n","[250 rows x 7 columns]"],"text/html":["\n","  <div id=\"df-e3af3fcf-8e64-4fa8-8954-9043c0fefec2\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Timestamp</th>\n","      <th>X</th>\n","      <th>Y</th>\n","      <th>Z</th>\n","      <th>Relative_timestamp</th>\n","      <th>Timestamp_scaled</th>\n","      <th>Relative_timestamp_scaled</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1566152175528</td>\n","      <td>6.036760</td>\n","      <td>-4.792068</td>\n","      <td>7.061238</td>\n","      <td>1566152180378</td>\n","      <td>0.000</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1566152175529</td>\n","      <td>6.180379</td>\n","      <td>-4.667598</td>\n","      <td>6.678256</td>\n","      <td>1566152180378</td>\n","      <td>0.001</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1566152175531</td>\n","      <td>6.228251</td>\n","      <td>-4.696322</td>\n","      <td>6.678256</td>\n","      <td>1566152180382</td>\n","      <td>0.003</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1566152175532</td>\n","      <td>6.237826</td>\n","      <td>-4.744195</td>\n","      <td>6.716554</td>\n","      <td>1566152180382</td>\n","      <td>0.004</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1566152175533</td>\n","      <td>6.199528</td>\n","      <td>-4.725046</td>\n","      <td>6.678256</td>\n","      <td>1566152180382</td>\n","      <td>0.005</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>245</th>\n","      <td>1566152176472</td>\n","      <td>6.189953</td>\n","      <td>-5.586756</td>\n","      <td>5.998462</td>\n","      <td>1566152181335</td>\n","      <td>0.944</td>\n","      <td>957</td>\n","    </tr>\n","    <tr>\n","      <th>246</th>\n","      <td>1566152176476</td>\n","      <td>6.180379</td>\n","      <td>-5.634629</td>\n","      <td>6.008037</td>\n","      <td>1566152181335</td>\n","      <td>0.948</td>\n","      <td>957</td>\n","    </tr>\n","    <tr>\n","      <th>247</th>\n","      <td>1566152176480</td>\n","      <td>6.170804</td>\n","      <td>-5.644203</td>\n","      <td>5.960164</td>\n","      <td>1566152181335</td>\n","      <td>0.952</td>\n","      <td>957</td>\n","    </tr>\n","    <tr>\n","      <th>248</th>\n","      <td>1566152176484</td>\n","      <td>6.151655</td>\n","      <td>-5.663352</td>\n","      <td>5.960164</td>\n","      <td>1566152181335</td>\n","      <td>0.956</td>\n","      <td>957</td>\n","    </tr>\n","    <tr>\n","      <th>249</th>\n","      <td>1566152176488</td>\n","      <td>6.122931</td>\n","      <td>-5.653778</td>\n","      <td>5.969738</td>\n","      <td>1566152181335</td>\n","      <td>0.960</td>\n","      <td>957</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>250 rows Ã— 7 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e3af3fcf-8e64-4fa8-8954-9043c0fefec2')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e3af3fcf-8e64-4fa8-8954-9043c0fefec2 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e3af3fcf-8e64-4fa8-8954-9043c0fefec2');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-77d6b5c6-24f0-44b3-94ba-eb6d209543da\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-77d6b5c6-24f0-44b3-94ba-eb6d209543da')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-77d6b5c6-24f0-44b3-94ba-eb6d209543da button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"hand_test0_1\",\n  \"rows\": 250,\n  \"fields\": [\n    {\n      \"column\": \"Timestamp\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 285,\n        \"min\": 1566152175528,\n        \"max\": 1566152176488,\n        \"num_unique_values\": 250,\n        \"samples\": [\n          1566152176060,\n          1566152175537,\n          1566152175881\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"X\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.11824529792943471,\n        \"min\": 6.0367603302,\n        \"max\": 6.6208086014,\n        \"num_unique_values\": 53,\n        \"samples\": [\n          6.2665495872,\n          6.5537867546,\n          6.3239970207\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Y\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.4208001272588167,\n        \"min\": -5.8548436165,\n        \"max\": -4.2750411034,\n        \"num_unique_values\": 115,\n        \"samples\": [\n          -5.3952646255,\n          -4.725045681,\n          -4.878238678\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Z\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.29125721507478197,\n        \"min\": 5.759098053,\n        \"max\": 7.0612382889,\n        \"num_unique_values\": 78,\n        \"samples\": [\n          6.4580411911,\n          7.0612382889,\n          6.3814444542\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Relative_timestamp\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 299,\n        \"min\": 1566152180378,\n        \"max\": 1566152181335,\n        \"num_unique_values\": 16,\n        \"samples\": [\n          1566152180378,\n          1566152180382,\n          1566152180498\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Timestamp_scaled\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.2853203428713503,\n        \"min\": 0.0,\n        \"max\": 0.96,\n        \"num_unique_values\": 250,\n        \"samples\": [\n          0.532,\n          0.009,\n          0.353\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Relative_timestamp_scaled\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 299,\n        \"min\": 0,\n        \"max\": 957,\n        \"num_unique_values\": 16,\n        \"samples\": [\n          0,\n          4,\n          120\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":3}]},{"cell_type":"code","source":["hand_test0_1_waves=hand_test0_1[['X','Y','Z']]\n","hand_test0_1_waves"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"BBcTi08SX4RU","executionInfo":{"status":"ok","timestamp":1713383606978,"user_tz":240,"elapsed":139,"user":{"displayName":"Grace Xiao","userId":"17822519317399742953"}},"outputId":"af0a7101-1bc4-4093-87bf-fda72cdd01ed"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["              X         Y         Z\n","0      6.036760 -4.792068  7.061238\n","1      6.180379 -4.667598  6.678256\n","2      6.228251 -4.696322  6.678256\n","3      6.237826 -4.744195  6.716554\n","4      6.199528 -4.725046  6.678256\n","...         ...       ...       ...\n","58735 -0.703730  3.384607  9.225089\n","58736 -0.837774  3.365458  9.071896\n","58737 -0.847349  3.240989  9.004874\n","58738 -0.780327  3.173967  8.985725\n","58739 -0.780327  3.202690  9.024023\n","\n","[58740 rows x 3 columns]"],"text/html":["\n","  <div id=\"df-b2ac71b5-9109-4709-b76c-ee2441754f05\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>X</th>\n","      <th>Y</th>\n","      <th>Z</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>6.036760</td>\n","      <td>-4.792068</td>\n","      <td>7.061238</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>6.180379</td>\n","      <td>-4.667598</td>\n","      <td>6.678256</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>6.228251</td>\n","      <td>-4.696322</td>\n","      <td>6.678256</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>6.237826</td>\n","      <td>-4.744195</td>\n","      <td>6.716554</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>6.199528</td>\n","      <td>-4.725046</td>\n","      <td>6.678256</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>58735</th>\n","      <td>-0.703730</td>\n","      <td>3.384607</td>\n","      <td>9.225089</td>\n","    </tr>\n","    <tr>\n","      <th>58736</th>\n","      <td>-0.837774</td>\n","      <td>3.365458</td>\n","      <td>9.071896</td>\n","    </tr>\n","    <tr>\n","      <th>58737</th>\n","      <td>-0.847349</td>\n","      <td>3.240989</td>\n","      <td>9.004874</td>\n","    </tr>\n","    <tr>\n","      <th>58738</th>\n","      <td>-0.780327</td>\n","      <td>3.173967</td>\n","      <td>8.985725</td>\n","    </tr>\n","    <tr>\n","      <th>58739</th>\n","      <td>-0.780327</td>\n","      <td>3.202690</td>\n","      <td>9.024023</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>58740 rows Ã— 3 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b2ac71b5-9109-4709-b76c-ee2441754f05')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-b2ac71b5-9109-4709-b76c-ee2441754f05 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-b2ac71b5-9109-4709-b76c-ee2441754f05');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-ab7b15ad-c9db-47f2-8f5c-155a0a17662e\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ab7b15ad-c9db-47f2-8f5c-155a0a17662e')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-ab7b15ad-c9db-47f2-8f5c-155a0a17662e button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_80614e47-6ffc-41e5-b43b-1e6c41ee15fe\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('hand_test0_1_waves')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_80614e47-6ffc-41e5-b43b-1e6c41ee15fe button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('hand_test0_1_waves');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"hand_test0_1_waves","summary":"{\n  \"name\": \"hand_test0_1_waves\",\n  \"rows\": 58740,\n  \"fields\": [\n    {\n      \"column\": \"X\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.371919681761364,\n        \"min\": -3.6909930706,\n        \"max\": 9.5123262405,\n        \"num_unique_values\": 868,\n        \"samples\": [\n          3.6239712238,\n          5.8931417465,\n          0.6462828517\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Y\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.234446740958467,\n        \"min\": -8.6697645187,\n        \"max\": 4.418659687,\n        \"num_unique_values\": 920,\n        \"samples\": [\n          -6.7165541649,\n          -5.8356947899,\n          -1.776080966\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Z\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.6749042000468961,\n        \"min\": 1.4218221903,\n        \"max\": 11.2357463837,\n        \"num_unique_values\": 661,\n        \"samples\": [\n          10.3644618988,\n          5.2324972153,\n          7.3580498695\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":4}]},{"cell_type":"markdown","source":["### Sample"],"metadata":{"id":"hasR26AsbGCD"}},{"cell_type":"code","source":["# Functions:\n","\n","# Calculate Hjorth parameters\n","def hjorth_params(signal):\n","    diff_input = np.diff(signal)\n","    diff_diff_input = np.diff(diff_input)\n","\n","    activity = np.var(signal)\n","    mobility = np.sqrt(np.var(diff_input)/activity)\n","    complexity = np.sqrt(np.var(diff_diff_input)/np.var(diff_input)) / mobility\n","\n","    return activity, mobility, complexity\n","\n","# Calculate AR coefficients\n","def autoreg_coeffs(signal, order=5):\n","    model = AutoReg(signal, lags=order, old_names=False, trend='n', seasonal=False)\n","    model_fit = model.fit()\n","    return model_fit.params\n","\n","# Calculate signal magnitude area (SMA)\n","def signal_magnitude_area(signal):\n","    return np.sum(np.abs(signal)) / len(signal)\n","\n","# Calculate root mean square (RMS)\n","def root_mean_square(signal):\n","    return np.sqrt(np.mean(np.square(signal)))\n","\n","# Calculate autocorrelation ACF\n","def calculate_acf(series, nlags, olags):\n","    acf_result = sm.tsa.acf(series, nlags=nlags, fft=True)\n","    return acf_result[olags]\n","\n","# Calculate mean SMV\n","def calculate_smv(data):\n","    smv = np.sqrt(np.square(data).sum(axis=1))\n","    return np.mean(smv)\n","\n","# Calculate Shannon entropy\n","def shannon_entropy(data):\n","    unique_values, value_counts = np.unique(data, return_counts=True)\n","    probabilities = value_counts / len(data)\n","    entropy = -np.sum(probabilities * np.log2(probabilities))\n","    return entropy\n","\n","all_features = {}\n","\n","for column in hand_test0_1_waves.columns:\n","    if column == 'Timestamp':\n","        continue\n","\n","    # Statistical features\n","    all_features[f'{column}_mean'] = np.mean(hand_test0_1_waves[column])\n","    all_features[f'{column}_std'] = np.std(hand_test0_1_waves[column])\n","    all_features[f'{column}_var'] = np.var(hand_test0_1_waves[column])\n","    all_features[f'{column}_median'] = np.median(hand_test0_1_waves[column])\n","    all_features[f'{column}_min'] = np.min(hand_test0_1_waves[column])\n","    all_features[f'{column}_max'] = np.max(hand_test0_1_waves[column])\n","\n","    # Hjorth parameters\n","    activity, mobility, complexity = hjorth_params(hand_test0_1_waves[column])\n","    all_features[f'{column}_activity'] = activity\n","    all_features[f'{column}_mobility'] = mobility\n","    all_features[f'{column}_complexity'] = complexity\n","\n","    # AR coefficients\n","    ar_coeffs = autoreg_coeffs(hand_test0_1_waves[column].dropna(), order=5)\n","    for i, coeff in enumerate(ar_coeffs):\n","        all_features[f'{column}_ar_coeff_{i}'] = coeff\n","\n","    # SMA, RMS\n","    all_features[f'{column}_SMA'] = signal_magnitude_area(hand_test0_1_waves[column])\n","    all_features[f'{column}_RMS'] = root_mean_square(hand_test0_1_waves[column])\n","\n","    # Autocorrelation\n","    all_features[f'{column}_ACF1'] = calculate_acf(hand_test0_1_waves[column], 501, 250)\n","    all_features[f'{column}_ACF2'] = calculate_acf(hand_test0_1_waves[column], 501, 500)\n","\n","    # Gradient\n","    all_features[f'{column}_Grad1mean'] = np.mean(np.gradient(hand_test0_1_waves[column]))\n","    all_features[f'{column}_Grad1std'] = np.std(np.gradient(hand_test0_1_waves[column]))\n","    all_features[f'{column}_Grad1var'] = np.var(np.gradient(hand_test0_1_waves[column]))\n","    all_features[f'{column}_Grad2mean'] = np.var(np.gradient(np.gradient(hand_test0_1_waves[column])))\n","    all_features[f'{column}_Grad2std'] = np.std(np.gradient(np.gradient(hand_test0_1_waves[column])))\n","    all_features[f'{column}_Grad2var'] = np.var(np.gradient(np.gradient(hand_test0_1_waves[column])))\n","\n","    # Shannon entropy\n","    all_features[f'{column}_SEntropy'] = shannon_entropy(hand_test0_1_waves[column])\n","\n","# SMV\n","all_features[f'All_SMV'] = calculate_smv(hand_test0_1_waves)\n","\n","features_df = pd.DataFrame([all_features])\n","\n","features_df.head()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":130},"id":"YeEtnPJYZPNK","executionInfo":{"status":"ok","timestamp":1713385118233,"user_tz":240,"elapsed":620,"user":{"displayName":"Grace Xiao","userId":"17822519317399742953"}},"outputId":"06883367-5f87-4691-921f-ed9cae38a2a3"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     X_mean     X_std     X_var  X_median     X_min     X_max  X_activity  \\\n","0  5.948121  1.371908  1.882132  6.304848 -3.690993  9.512326    1.882132   \n","\n","   X_mobility  X_complexity  X_ar_coeff_0  ...    Z_ACF1    Z_ACF2  \\\n","0    0.022159      62.94546      1.020043  ...  0.828145  0.773077   \n","\n","   Z_Grad1mean  Z_Grad1std  Z_Grad1var  Z_Grad2mean  Z_Grad2std  Z_Grad2var  \\\n","0      0.00003    0.025809    0.000666     0.000255    0.015981    0.000255   \n","\n","   Z_SEntropy    All_SMV  \n","0    6.176966  10.192685  \n","\n","[1 rows x 76 columns]"],"text/html":["\n","  <div id=\"df-cf7b258a-3c09-4284-8b6c-29d85b21e81c\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>X_mean</th>\n","      <th>X_std</th>\n","      <th>X_var</th>\n","      <th>X_median</th>\n","      <th>X_min</th>\n","      <th>X_max</th>\n","      <th>X_activity</th>\n","      <th>X_mobility</th>\n","      <th>X_complexity</th>\n","      <th>X_ar_coeff_0</th>\n","      <th>...</th>\n","      <th>Z_ACF1</th>\n","      <th>Z_ACF2</th>\n","      <th>Z_Grad1mean</th>\n","      <th>Z_Grad1std</th>\n","      <th>Z_Grad1var</th>\n","      <th>Z_Grad2mean</th>\n","      <th>Z_Grad2std</th>\n","      <th>Z_Grad2var</th>\n","      <th>Z_SEntropy</th>\n","      <th>All_SMV</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>5.948121</td>\n","      <td>1.371908</td>\n","      <td>1.882132</td>\n","      <td>6.304848</td>\n","      <td>-3.690993</td>\n","      <td>9.512326</td>\n","      <td>1.882132</td>\n","      <td>0.022159</td>\n","      <td>62.94546</td>\n","      <td>1.020043</td>\n","      <td>...</td>\n","      <td>0.828145</td>\n","      <td>0.773077</td>\n","      <td>0.00003</td>\n","      <td>0.025809</td>\n","      <td>0.000666</td>\n","      <td>0.000255</td>\n","      <td>0.015981</td>\n","      <td>0.000255</td>\n","      <td>6.176966</td>\n","      <td>10.192685</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1 rows Ã— 76 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-cf7b258a-3c09-4284-8b6c-29d85b21e81c')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-cf7b258a-3c09-4284-8b6c-29d85b21e81c button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-cf7b258a-3c09-4284-8b6c-29d85b21e81c');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"features_df"}},"metadata":{},"execution_count":21}]},{"cell_type":"markdown","source":["### Accelerometer data"],"metadata":{"id":"feAS1HIJbJY5"}},{"cell_type":"code","source":["# Functions\n","root_folder = '/content/drive/MyDrive/MLMA_Data/BS-HMS-Dataset/Emotiv hand movement righthand'\n","\n","# Calculate Hjorth parameters\n","def hjorth_params(signal):\n","    diff_input = np.diff(signal)\n","    diff_diff_input = np.diff(diff_input)\n","\n","    activity = np.var(signal)\n","    mobility = np.sqrt(np.var(diff_input)/activity)\n","    complexity = np.sqrt(np.var(diff_diff_input)/np.var(diff_input)) / mobility\n","\n","    return activity, mobility, complexity\n","\n","# Calculate AR coefficients\n","def autoreg_coeffs(signal, order=5):\n","    model = AutoReg(signal, lags=order, old_names=False, trend='n', seasonal=False)\n","    model_fit = model.fit()\n","    return model_fit.params\n","\n","# Calculate signal magnitude area (SMA)\n","def signal_magnitude_area(signal):\n","    return np.sum(np.abs(signal)) / len(signal)\n","\n","# Calculate root mean square (RMS)\n","def root_mean_square(signal):\n","    mean_square = np.mean(np.square(signal))\n","    if mean_square >= 0:\n","        return np.sqrt(mean_square)\n","    else:\n","      return 0\n","\n","# Calculate autocorrelation\n","def calculate_acf(series, nlags, olags):\n","    acf_result = sm.tsa.acf(series.dropna(), nlags=nlags, fft=True)\n","    return acf_result[olags]\n","\n","# Calculate mean SMV\n","def calculate_smv(data):\n","    smv = np.sqrt(np.square(data).sum(axis=1))\n","    return np.mean(smv)\n","\n","# Calculate Shannon entropy\n","def shannon_entropy(data):\n","    unique_values, value_counts = np.unique(data.dropna(), return_counts=True)\n","    probabilities = value_counts / len(data.dropna())\n","    entropy = -np.sum(probabilities * np.log2(probabilities))\n","    return entropy\n","\n","def extract_parts(filename):\n","    parts = filename.split('_')\n","    test_part = int(parts[1].replace('Test', ''))\n","    third_part = int(parts[3])\n","    fourth_part = parts[4]\n","    return test_part, third_part, fourth_part\n","\n","def sort_key(filename):\n","    test_part, third_part, fourth_part = extract_parts(filename)\n","    return test_part, third_part, fourth_part\n"],"metadata":{"id":"stTj0Ky-ukDQ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["features_df = pd.DataFrame()\n","for filename in sorted(os.listdir(root_folder), key=sort_key):\n","    if filename.endswith('_acc.csv'):\n","        file_path = os.path.join(root_folder, filename)\n","\n","        df1 = pd.read_csv(file_path)\n","        df = df1[['X','Y','Z']]\n","\n","        all_features = {}\n","        filename_part = file_path.split('/')[-1]\n","        filename_part2 = filename_part.split('.')[0]\n","        all_features['Filename_Part'] = str(filename_part2)\n","\n","        for column in df.columns:\n","\n","            # Statistical features\n","            all_features[f'{column}_mean'] = np.mean(df[column])\n","            all_features[f'{column}_std'] = np.std(df[column])\n","            all_features[f'{column}_var'] = np.var(df[column])\n","            all_features[f'{column}_median'] = np.median(df[column])\n","            all_features[f'{column}_min'] = np.min(df[column])\n","            all_features[f'{column}_max'] = np.max(df[column])\n","\n","            # Hjorth parameters\n","            activity, mobility, complexity = hjorth_params(df[column])\n","            all_features[f'{column}_activity'] = activity\n","            all_features[f'{column}_mobility'] = mobility\n","            all_features[f'{column}_complexity'] = complexity\n","\n","            # AR coefficients\n","            ar_coeffs = autoreg_coeffs(df[column].dropna(), order=5)\n","            for i, coeff in enumerate(ar_coeffs):\n","                all_features[f'{column}_ar_coeff_{i}'] = coeff\n","\n","            # SMA, RMS\n","            all_features[f'{column}_SMA'] = signal_magnitude_area(df[column])\n","            all_features[f'{column}_RMS'] = root_mean_square(df[column])\n","\n","            # Autocorrelation\n","            all_features[f'{column}_ACF1'] = calculate_acf(df[column], 501, 250)\n","            all_features[f'{column}_ACF2'] = calculate_acf(df[column], 501, 500)\n","\n","            # Gradient\n","            all_features[f'{column}_Grad1mean'] = np.mean(np.gradient(df[column]))\n","            all_features[f'{column}_Grad1std'] = np.std(np.gradient(df[column]))\n","            all_features[f'{column}_Grad1var'] = np.var(np.gradient(df[column]))\n","            all_features[f'{column}_Grad2mean'] = np.mean(np.gradient(np.gradient(df[column])))\n","            all_features[f'{column}_Grad2std'] = np.std(np.gradient(np.gradient(df[column])))\n","            all_features[f'{column}_Grad2var'] = np.var(np.gradient(np.gradient(df[column])))\n","\n","            # Shannon Entropy\n","            all_features[f'{column}_SEntropy'] = shannon_entropy(df[column])\n","\n","        # SMV\n","        all_features[f'All_SMV'] = calculate_smv(df)\n","\n","        all_feature = pd.DataFrame([all_features])\n","\n","    features_df = pd.concat([features_df, all_feature], ignore_index=True)\n"],"metadata":{"id":"WxcletewyK9n"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["features_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":444},"id":"G-jLsXK65ojl","executionInfo":{"status":"ok","timestamp":1713390660438,"user_tz":240,"elapsed":26,"user":{"displayName":"Grace Xiao","userId":"17822519317399742953"}},"outputId":"58042903-f36c-4347-f3e5-d998aecafbc8"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                         Filename_Part    X_mean     X_std     X_var  \\\n","0        HM_Test0_watchRight_0_one_acc -6.846076  1.127397  1.271024   \n","1        HM_Test0_watchRight_0_one_acc -6.846076  1.127397  1.271024   \n","2        HM_Test0_watchRight_2_two_acc  2.378614  0.445303  0.198294   \n","3        HM_Test0_watchRight_2_two_acc  2.378614  0.445303  0.198294   \n","4      HM_Test0_watchRight_4_three_acc -4.600323  1.208001  1.459265   \n","..                                 ...       ...       ...       ...   \n","427    HM_Test26_watchRight_10_two_acc  1.761846  0.449221  0.201799   \n","428  HM_Test26_watchRight_12_three_acc -0.530926  1.917458  3.676647   \n","429  HM_Test26_watchRight_12_three_acc -0.530926  1.917458  3.676647   \n","430   HM_Test26_watchRight_14_four_acc  0.666244  0.960139  0.921866   \n","431   HM_Test26_watchRight_14_four_acc  0.666244  0.960139  0.921866   \n","\n","     X_median      X_min      X_max  X_activity  X_mobility  X_complexity  \\\n","0   -7.291028  -9.866585   3.020774    1.271024    0.033221     41.360217   \n","1   -7.291028  -9.866585   3.020774    1.271024    0.033221     41.360217   \n","2    2.427151 -15.984729  19.594337    0.198294    0.283186      3.950224   \n","3    2.427151 -15.984729  19.594337    0.198294    0.283186      3.950224   \n","4   -4.332489  -8.411251   2.436726    1.459265    0.029166     48.092388   \n","..        ...        ...        ...         ...         ...           ...   \n","427  1.766506  -3.710142   6.534637    0.201799    0.241573      5.045190   \n","428 -0.694156 -11.762347  10.220843    3.676647    0.049494     22.914340   \n","429 -0.694156 -11.762347  10.220843    3.676647    0.049494     22.914340   \n","430  1.144160  -5.213348   5.682502    0.921866    0.092335     12.092435   \n","431  1.144160  -5.213348   5.682502    0.921866    0.092335     12.092435   \n","\n","     ...    Z_ACF1    Z_ACF2   Z_Grad1mean  Z_Grad1std  Z_Grad1var  \\\n","0    ...  0.390646  0.125221  7.026386e-07    0.049981    0.002498   \n","1    ...  0.390646  0.125221  7.026386e-07    0.049981    0.002498   \n","2    ...  0.140737  0.146411  7.041009e-06    0.087384    0.007636   \n","3    ...  0.140737  0.146411  7.041009e-06    0.087384    0.007636   \n","4    ...  0.899396  0.815295  1.089242e-05    0.030551    0.000933   \n","..   ...       ...       ...           ...         ...         ...   \n","427  ...  0.467383  0.367624  3.055628e-06    0.104178    0.010853   \n","428  ...  0.752586  0.582738  3.289031e-06    0.102302    0.010466   \n","429  ...  0.752586  0.582738  3.289031e-06    0.102302    0.010466   \n","430  ...  0.107596  0.069174  7.681170e-05    0.120011    0.014403   \n","431  ...  0.107596  0.069174  7.681170e-05    0.120011    0.014403   \n","\n","      Z_Grad2mean  Z_Grad2std  Z_Grad2var  Z_SEntropy   All_SMV  \n","0    3.357095e-06    0.036302    0.001318    6.456350  9.716979  \n","1    3.357095e-06    0.036302    0.001318    6.456350  9.716979  \n","2    6.930233e-07    0.071911    0.005171    6.182602  9.672179  \n","3    6.930233e-07    0.071911    0.005171    6.182602  9.672179  \n","4   -1.309409e-05    0.020679    0.000428    7.492911  9.655747  \n","..            ...         ...         ...         ...       ...  \n","427  4.722331e-07    0.073893    0.005460    7.985971  9.814957  \n","428  1.370432e-06    0.071896    0.005169    9.160203  9.812053  \n","429  1.370432e-06    0.071896    0.005169    9.160203  9.812053  \n","430  4.365641e-06    0.082890    0.006871    7.579814  9.769583  \n","431  4.365641e-06    0.082890    0.006871    7.579814  9.769583  \n","\n","[432 rows x 77 columns]"],"text/html":["\n","  <div id=\"df-7d6c982d-efc0-4642-9a0b-fda0a4181b38\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Filename_Part</th>\n","      <th>X_mean</th>\n","      <th>X_std</th>\n","      <th>X_var</th>\n","      <th>X_median</th>\n","      <th>X_min</th>\n","      <th>X_max</th>\n","      <th>X_activity</th>\n","      <th>X_mobility</th>\n","      <th>X_complexity</th>\n","      <th>...</th>\n","      <th>Z_ACF1</th>\n","      <th>Z_ACF2</th>\n","      <th>Z_Grad1mean</th>\n","      <th>Z_Grad1std</th>\n","      <th>Z_Grad1var</th>\n","      <th>Z_Grad2mean</th>\n","      <th>Z_Grad2std</th>\n","      <th>Z_Grad2var</th>\n","      <th>Z_SEntropy</th>\n","      <th>All_SMV</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>HM_Test0_watchRight_0_one_acc</td>\n","      <td>-6.846076</td>\n","      <td>1.127397</td>\n","      <td>1.271024</td>\n","      <td>-7.291028</td>\n","      <td>-9.866585</td>\n","      <td>3.020774</td>\n","      <td>1.271024</td>\n","      <td>0.033221</td>\n","      <td>41.360217</td>\n","      <td>...</td>\n","      <td>0.390646</td>\n","      <td>0.125221</td>\n","      <td>7.026386e-07</td>\n","      <td>0.049981</td>\n","      <td>0.002498</td>\n","      <td>3.357095e-06</td>\n","      <td>0.036302</td>\n","      <td>0.001318</td>\n","      <td>6.456350</td>\n","      <td>9.716979</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>HM_Test0_watchRight_0_one_acc</td>\n","      <td>-6.846076</td>\n","      <td>1.127397</td>\n","      <td>1.271024</td>\n","      <td>-7.291028</td>\n","      <td>-9.866585</td>\n","      <td>3.020774</td>\n","      <td>1.271024</td>\n","      <td>0.033221</td>\n","      <td>41.360217</td>\n","      <td>...</td>\n","      <td>0.390646</td>\n","      <td>0.125221</td>\n","      <td>7.026386e-07</td>\n","      <td>0.049981</td>\n","      <td>0.002498</td>\n","      <td>3.357095e-06</td>\n","      <td>0.036302</td>\n","      <td>0.001318</td>\n","      <td>6.456350</td>\n","      <td>9.716979</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>HM_Test0_watchRight_2_two_acc</td>\n","      <td>2.378614</td>\n","      <td>0.445303</td>\n","      <td>0.198294</td>\n","      <td>2.427151</td>\n","      <td>-15.984729</td>\n","      <td>19.594337</td>\n","      <td>0.198294</td>\n","      <td>0.283186</td>\n","      <td>3.950224</td>\n","      <td>...</td>\n","      <td>0.140737</td>\n","      <td>0.146411</td>\n","      <td>7.041009e-06</td>\n","      <td>0.087384</td>\n","      <td>0.007636</td>\n","      <td>6.930233e-07</td>\n","      <td>0.071911</td>\n","      <td>0.005171</td>\n","      <td>6.182602</td>\n","      <td>9.672179</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>HM_Test0_watchRight_2_two_acc</td>\n","      <td>2.378614</td>\n","      <td>0.445303</td>\n","      <td>0.198294</td>\n","      <td>2.427151</td>\n","      <td>-15.984729</td>\n","      <td>19.594337</td>\n","      <td>0.198294</td>\n","      <td>0.283186</td>\n","      <td>3.950224</td>\n","      <td>...</td>\n","      <td>0.140737</td>\n","      <td>0.146411</td>\n","      <td>7.041009e-06</td>\n","      <td>0.087384</td>\n","      <td>0.007636</td>\n","      <td>6.930233e-07</td>\n","      <td>0.071911</td>\n","      <td>0.005171</td>\n","      <td>6.182602</td>\n","      <td>9.672179</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>HM_Test0_watchRight_4_three_acc</td>\n","      <td>-4.600323</td>\n","      <td>1.208001</td>\n","      <td>1.459265</td>\n","      <td>-4.332489</td>\n","      <td>-8.411251</td>\n","      <td>2.436726</td>\n","      <td>1.459265</td>\n","      <td>0.029166</td>\n","      <td>48.092388</td>\n","      <td>...</td>\n","      <td>0.899396</td>\n","      <td>0.815295</td>\n","      <td>1.089242e-05</td>\n","      <td>0.030551</td>\n","      <td>0.000933</td>\n","      <td>-1.309409e-05</td>\n","      <td>0.020679</td>\n","      <td>0.000428</td>\n","      <td>7.492911</td>\n","      <td>9.655747</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>427</th>\n","      <td>HM_Test26_watchRight_10_two_acc</td>\n","      <td>1.761846</td>\n","      <td>0.449221</td>\n","      <td>0.201799</td>\n","      <td>1.766506</td>\n","      <td>-3.710142</td>\n","      <td>6.534637</td>\n","      <td>0.201799</td>\n","      <td>0.241573</td>\n","      <td>5.045190</td>\n","      <td>...</td>\n","      <td>0.467383</td>\n","      <td>0.367624</td>\n","      <td>3.055628e-06</td>\n","      <td>0.104178</td>\n","      <td>0.010853</td>\n","      <td>4.722331e-07</td>\n","      <td>0.073893</td>\n","      <td>0.005460</td>\n","      <td>7.985971</td>\n","      <td>9.814957</td>\n","    </tr>\n","    <tr>\n","      <th>428</th>\n","      <td>HM_Test26_watchRight_12_three_acc</td>\n","      <td>-0.530926</td>\n","      <td>1.917458</td>\n","      <td>3.676647</td>\n","      <td>-0.694156</td>\n","      <td>-11.762347</td>\n","      <td>10.220843</td>\n","      <td>3.676647</td>\n","      <td>0.049494</td>\n","      <td>22.914340</td>\n","      <td>...</td>\n","      <td>0.752586</td>\n","      <td>0.582738</td>\n","      <td>3.289031e-06</td>\n","      <td>0.102302</td>\n","      <td>0.010466</td>\n","      <td>1.370432e-06</td>\n","      <td>0.071896</td>\n","      <td>0.005169</td>\n","      <td>9.160203</td>\n","      <td>9.812053</td>\n","    </tr>\n","    <tr>\n","      <th>429</th>\n","      <td>HM_Test26_watchRight_12_three_acc</td>\n","      <td>-0.530926</td>\n","      <td>1.917458</td>\n","      <td>3.676647</td>\n","      <td>-0.694156</td>\n","      <td>-11.762347</td>\n","      <td>10.220843</td>\n","      <td>3.676647</td>\n","      <td>0.049494</td>\n","      <td>22.914340</td>\n","      <td>...</td>\n","      <td>0.752586</td>\n","      <td>0.582738</td>\n","      <td>3.289031e-06</td>\n","      <td>0.102302</td>\n","      <td>0.010466</td>\n","      <td>1.370432e-06</td>\n","      <td>0.071896</td>\n","      <td>0.005169</td>\n","      <td>9.160203</td>\n","      <td>9.812053</td>\n","    </tr>\n","    <tr>\n","      <th>430</th>\n","      <td>HM_Test26_watchRight_14_four_acc</td>\n","      <td>0.666244</td>\n","      <td>0.960139</td>\n","      <td>0.921866</td>\n","      <td>1.144160</td>\n","      <td>-5.213348</td>\n","      <td>5.682502</td>\n","      <td>0.921866</td>\n","      <td>0.092335</td>\n","      <td>12.092435</td>\n","      <td>...</td>\n","      <td>0.107596</td>\n","      <td>0.069174</td>\n","      <td>7.681170e-05</td>\n","      <td>0.120011</td>\n","      <td>0.014403</td>\n","      <td>4.365641e-06</td>\n","      <td>0.082890</td>\n","      <td>0.006871</td>\n","      <td>7.579814</td>\n","      <td>9.769583</td>\n","    </tr>\n","    <tr>\n","      <th>431</th>\n","      <td>HM_Test26_watchRight_14_four_acc</td>\n","      <td>0.666244</td>\n","      <td>0.960139</td>\n","      <td>0.921866</td>\n","      <td>1.144160</td>\n","      <td>-5.213348</td>\n","      <td>5.682502</td>\n","      <td>0.921866</td>\n","      <td>0.092335</td>\n","      <td>12.092435</td>\n","      <td>...</td>\n","      <td>0.107596</td>\n","      <td>0.069174</td>\n","      <td>7.681170e-05</td>\n","      <td>0.120011</td>\n","      <td>0.014403</td>\n","      <td>4.365641e-06</td>\n","      <td>0.082890</td>\n","      <td>0.006871</td>\n","      <td>7.579814</td>\n","      <td>9.769583</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>432 rows Ã— 77 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7d6c982d-efc0-4642-9a0b-fda0a4181b38')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-7d6c982d-efc0-4642-9a0b-fda0a4181b38 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-7d6c982d-efc0-4642-9a0b-fda0a4181b38');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-cc3c6248-968f-46b2-a24a-5a47da9502b3\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-cc3c6248-968f-46b2-a24a-5a47da9502b3')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-cc3c6248-968f-46b2-a24a-5a47da9502b3 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_b3965aff-23af-4263-b4f2-b642daf37007\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('features_df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_b3965aff-23af-4263-b4f2-b642daf37007 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('features_df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"features_df"}},"metadata":{},"execution_count":87}]},{"cell_type":"code","source":["# Drop user 21 and 22\n","features_df = features_df.drop_duplicates(subset=['Filename_Part'])\n","filtered_features_df = features_df[~features_df['Filename_Part'].str.contains('Test21|Test22')]\n","filtered_features_df.reset_index(drop=True, inplace=True)\n","filtered_features_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":444},"id":"XWdkgqd_BH6Y","executionInfo":{"status":"ok","timestamp":1713390660438,"user_tz":240,"elapsed":8,"user":{"displayName":"Grace Xiao","userId":"17822519317399742953"}},"outputId":"b56cf3e7-c8f9-4dad-a6bc-ed7e66ec3622"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                         Filename_Part    X_mean     X_std     X_var  \\\n","0        HM_Test0_watchRight_0_one_acc -6.846076  1.127397  1.271024   \n","1        HM_Test0_watchRight_2_two_acc  2.378614  0.445303  0.198294   \n","2      HM_Test0_watchRight_4_three_acc -4.600323  1.208001  1.459265   \n","3       HM_Test0_watchRight_6_four_acc  2.307475  0.842399  0.709637   \n","4        HM_Test0_watchRight_8_one_acc -0.876954  0.603183  0.363829   \n","..                                 ...       ...       ...       ...   \n","195    HM_Test26_watchRight_6_four_acc -1.026608  0.673073  0.453027   \n","196     HM_Test26_watchRight_8_one_acc  0.855077  0.705780  0.498126   \n","197    HM_Test26_watchRight_10_two_acc  1.761846  0.449221  0.201799   \n","198  HM_Test26_watchRight_12_three_acc -0.530926  1.917458  3.676647   \n","199   HM_Test26_watchRight_14_four_acc  0.666244  0.960139  0.921866   \n","\n","     X_median      X_min      X_max  X_activity  X_mobility  X_complexity  \\\n","0   -7.291028  -9.866585   3.020774    1.271024    0.033221     41.360217   \n","1    2.427151 -15.984729  19.594337    0.198294    0.283186      3.950224   \n","2   -4.332489  -8.411251   2.436726    1.459265    0.029166     48.092388   \n","3    2.494173  -5.548458   6.352721    0.709637    0.108667     10.930011   \n","4   -1.010116  -5.711226   2.800559    0.363829    0.072352     16.832129   \n","..        ...        ...        ...         ...         ...           ...   \n","195 -0.895221  -7.166558   4.294190    0.453027    0.190876      6.090877   \n","196  0.684581  -2.963326  16.674097    0.498126    0.117301     10.614548   \n","197  1.766506  -3.710142   6.534637    0.201799    0.241573      5.045190   \n","198 -0.694156 -11.762347  10.220843    3.676647    0.049494     22.914340   \n","199  1.144160  -5.213348   5.682502    0.921866    0.092335     12.092435   \n","\n","     ...    Z_ACF1    Z_ACF2   Z_Grad1mean  Z_Grad1std  Z_Grad1var  \\\n","0    ...  0.390646  0.125221  7.026386e-07    0.049981    0.002498   \n","1    ...  0.140737  0.146411  7.041009e-06    0.087384    0.007636   \n","2    ...  0.899396  0.815295  1.089242e-05    0.030551    0.000933   \n","3    ...  0.300788  0.292854 -5.668574e-05    0.085040    0.007232   \n","4    ...  0.570074  0.432248  7.453782e-06    0.038864    0.001510   \n","..   ...       ...       ...           ...         ...         ...   \n","195  ...  0.091267  0.073122  2.857308e-06    0.113091    0.012789   \n","196  ...  0.735229  0.562408  7.595556e-06    0.062310    0.003882   \n","197  ...  0.467383  0.367624  3.055628e-06    0.104178    0.010853   \n","198  ...  0.752586  0.582738  3.289031e-06    0.102302    0.010466   \n","199  ...  0.107596  0.069174  7.681170e-05    0.120011    0.014403   \n","\n","      Z_Grad2mean  Z_Grad2std  Z_Grad2var  Z_SEntropy   All_SMV  \n","0    3.357095e-06    0.036302    0.001318    6.456350  9.716979  \n","1    6.930233e-07    0.071911    0.005171    6.182602  9.672179  \n","2   -1.309409e-05    0.020679    0.000428    7.492911  9.655747  \n","3    4.661906e-05    0.064663    0.004181    6.851243  9.701036  \n","4   -4.407199e-06    0.023470    0.000551    6.610753  9.659964  \n","..            ...         ...         ...         ...       ...  \n","195  1.980047e-06    0.072940    0.005320    7.499330  9.624961  \n","196 -7.846620e-07    0.043070    0.001855    7.126755  9.855008  \n","197  4.722331e-07    0.073893    0.005460    7.985971  9.814957  \n","198  1.370432e-06    0.071896    0.005169    9.160203  9.812053  \n","199  4.365641e-06    0.082890    0.006871    7.579814  9.769583  \n","\n","[200 rows x 77 columns]"],"text/html":["\n","  <div id=\"df-d24c8b04-ce98-4030-97bc-f8e074123bf7\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Filename_Part</th>\n","      <th>X_mean</th>\n","      <th>X_std</th>\n","      <th>X_var</th>\n","      <th>X_median</th>\n","      <th>X_min</th>\n","      <th>X_max</th>\n","      <th>X_activity</th>\n","      <th>X_mobility</th>\n","      <th>X_complexity</th>\n","      <th>...</th>\n","      <th>Z_ACF1</th>\n","      <th>Z_ACF2</th>\n","      <th>Z_Grad1mean</th>\n","      <th>Z_Grad1std</th>\n","      <th>Z_Grad1var</th>\n","      <th>Z_Grad2mean</th>\n","      <th>Z_Grad2std</th>\n","      <th>Z_Grad2var</th>\n","      <th>Z_SEntropy</th>\n","      <th>All_SMV</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>HM_Test0_watchRight_0_one_acc</td>\n","      <td>-6.846076</td>\n","      <td>1.127397</td>\n","      <td>1.271024</td>\n","      <td>-7.291028</td>\n","      <td>-9.866585</td>\n","      <td>3.020774</td>\n","      <td>1.271024</td>\n","      <td>0.033221</td>\n","      <td>41.360217</td>\n","      <td>...</td>\n","      <td>0.390646</td>\n","      <td>0.125221</td>\n","      <td>7.026386e-07</td>\n","      <td>0.049981</td>\n","      <td>0.002498</td>\n","      <td>3.357095e-06</td>\n","      <td>0.036302</td>\n","      <td>0.001318</td>\n","      <td>6.456350</td>\n","      <td>9.716979</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>HM_Test0_watchRight_2_two_acc</td>\n","      <td>2.378614</td>\n","      <td>0.445303</td>\n","      <td>0.198294</td>\n","      <td>2.427151</td>\n","      <td>-15.984729</td>\n","      <td>19.594337</td>\n","      <td>0.198294</td>\n","      <td>0.283186</td>\n","      <td>3.950224</td>\n","      <td>...</td>\n","      <td>0.140737</td>\n","      <td>0.146411</td>\n","      <td>7.041009e-06</td>\n","      <td>0.087384</td>\n","      <td>0.007636</td>\n","      <td>6.930233e-07</td>\n","      <td>0.071911</td>\n","      <td>0.005171</td>\n","      <td>6.182602</td>\n","      <td>9.672179</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>HM_Test0_watchRight_4_three_acc</td>\n","      <td>-4.600323</td>\n","      <td>1.208001</td>\n","      <td>1.459265</td>\n","      <td>-4.332489</td>\n","      <td>-8.411251</td>\n","      <td>2.436726</td>\n","      <td>1.459265</td>\n","      <td>0.029166</td>\n","      <td>48.092388</td>\n","      <td>...</td>\n","      <td>0.899396</td>\n","      <td>0.815295</td>\n","      <td>1.089242e-05</td>\n","      <td>0.030551</td>\n","      <td>0.000933</td>\n","      <td>-1.309409e-05</td>\n","      <td>0.020679</td>\n","      <td>0.000428</td>\n","      <td>7.492911</td>\n","      <td>9.655747</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>HM_Test0_watchRight_6_four_acc</td>\n","      <td>2.307475</td>\n","      <td>0.842399</td>\n","      <td>0.709637</td>\n","      <td>2.494173</td>\n","      <td>-5.548458</td>\n","      <td>6.352721</td>\n","      <td>0.709637</td>\n","      <td>0.108667</td>\n","      <td>10.930011</td>\n","      <td>...</td>\n","      <td>0.300788</td>\n","      <td>0.292854</td>\n","      <td>-5.668574e-05</td>\n","      <td>0.085040</td>\n","      <td>0.007232</td>\n","      <td>4.661906e-05</td>\n","      <td>0.064663</td>\n","      <td>0.004181</td>\n","      <td>6.851243</td>\n","      <td>9.701036</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>HM_Test0_watchRight_8_one_acc</td>\n","      <td>-0.876954</td>\n","      <td>0.603183</td>\n","      <td>0.363829</td>\n","      <td>-1.010116</td>\n","      <td>-5.711226</td>\n","      <td>2.800559</td>\n","      <td>0.363829</td>\n","      <td>0.072352</td>\n","      <td>16.832129</td>\n","      <td>...</td>\n","      <td>0.570074</td>\n","      <td>0.432248</td>\n","      <td>7.453782e-06</td>\n","      <td>0.038864</td>\n","      <td>0.001510</td>\n","      <td>-4.407199e-06</td>\n","      <td>0.023470</td>\n","      <td>0.000551</td>\n","      <td>6.610753</td>\n","      <td>9.659964</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>195</th>\n","      <td>HM_Test26_watchRight_6_four_acc</td>\n","      <td>-1.026608</td>\n","      <td>0.673073</td>\n","      <td>0.453027</td>\n","      <td>-0.895221</td>\n","      <td>-7.166558</td>\n","      <td>4.294190</td>\n","      <td>0.453027</td>\n","      <td>0.190876</td>\n","      <td>6.090877</td>\n","      <td>...</td>\n","      <td>0.091267</td>\n","      <td>0.073122</td>\n","      <td>2.857308e-06</td>\n","      <td>0.113091</td>\n","      <td>0.012789</td>\n","      <td>1.980047e-06</td>\n","      <td>0.072940</td>\n","      <td>0.005320</td>\n","      <td>7.499330</td>\n","      <td>9.624961</td>\n","    </tr>\n","    <tr>\n","      <th>196</th>\n","      <td>HM_Test26_watchRight_8_one_acc</td>\n","      <td>0.855077</td>\n","      <td>0.705780</td>\n","      <td>0.498126</td>\n","      <td>0.684581</td>\n","      <td>-2.963326</td>\n","      <td>16.674097</td>\n","      <td>0.498126</td>\n","      <td>0.117301</td>\n","      <td>10.614548</td>\n","      <td>...</td>\n","      <td>0.735229</td>\n","      <td>0.562408</td>\n","      <td>7.595556e-06</td>\n","      <td>0.062310</td>\n","      <td>0.003882</td>\n","      <td>-7.846620e-07</td>\n","      <td>0.043070</td>\n","      <td>0.001855</td>\n","      <td>7.126755</td>\n","      <td>9.855008</td>\n","    </tr>\n","    <tr>\n","      <th>197</th>\n","      <td>HM_Test26_watchRight_10_two_acc</td>\n","      <td>1.761846</td>\n","      <td>0.449221</td>\n","      <td>0.201799</td>\n","      <td>1.766506</td>\n","      <td>-3.710142</td>\n","      <td>6.534637</td>\n","      <td>0.201799</td>\n","      <td>0.241573</td>\n","      <td>5.045190</td>\n","      <td>...</td>\n","      <td>0.467383</td>\n","      <td>0.367624</td>\n","      <td>3.055628e-06</td>\n","      <td>0.104178</td>\n","      <td>0.010853</td>\n","      <td>4.722331e-07</td>\n","      <td>0.073893</td>\n","      <td>0.005460</td>\n","      <td>7.985971</td>\n","      <td>9.814957</td>\n","    </tr>\n","    <tr>\n","      <th>198</th>\n","      <td>HM_Test26_watchRight_12_three_acc</td>\n","      <td>-0.530926</td>\n","      <td>1.917458</td>\n","      <td>3.676647</td>\n","      <td>-0.694156</td>\n","      <td>-11.762347</td>\n","      <td>10.220843</td>\n","      <td>3.676647</td>\n","      <td>0.049494</td>\n","      <td>22.914340</td>\n","      <td>...</td>\n","      <td>0.752586</td>\n","      <td>0.582738</td>\n","      <td>3.289031e-06</td>\n","      <td>0.102302</td>\n","      <td>0.010466</td>\n","      <td>1.370432e-06</td>\n","      <td>0.071896</td>\n","      <td>0.005169</td>\n","      <td>9.160203</td>\n","      <td>9.812053</td>\n","    </tr>\n","    <tr>\n","      <th>199</th>\n","      <td>HM_Test26_watchRight_14_four_acc</td>\n","      <td>0.666244</td>\n","      <td>0.960139</td>\n","      <td>0.921866</td>\n","      <td>1.144160</td>\n","      <td>-5.213348</td>\n","      <td>5.682502</td>\n","      <td>0.921866</td>\n","      <td>0.092335</td>\n","      <td>12.092435</td>\n","      <td>...</td>\n","      <td>0.107596</td>\n","      <td>0.069174</td>\n","      <td>7.681170e-05</td>\n","      <td>0.120011</td>\n","      <td>0.014403</td>\n","      <td>4.365641e-06</td>\n","      <td>0.082890</td>\n","      <td>0.006871</td>\n","      <td>7.579814</td>\n","      <td>9.769583</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>200 rows Ã— 77 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d24c8b04-ce98-4030-97bc-f8e074123bf7')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-d24c8b04-ce98-4030-97bc-f8e074123bf7 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-d24c8b04-ce98-4030-97bc-f8e074123bf7');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-885da776-cec6-488b-a487-b3462bc6e4f0\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-885da776-cec6-488b-a487-b3462bc6e4f0')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-885da776-cec6-488b-a487-b3462bc6e4f0 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_37bac888-a6af-4cfb-bac3-5a8ab827e99e\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('filtered_features_df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_37bac888-a6af-4cfb-bac3-5a8ab827e99e button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('filtered_features_df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"filtered_features_df"}},"metadata":{},"execution_count":88}]},{"cell_type":"code","source":["filtered_features_df.to_csv('Emotiv_Right_acc.csv', index=False)\n","\n","# Download the CSV file\n","from google.colab import files\n","files.download('Emotiv_Right_acc.csv')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":17},"id":"DaGEXNODCxXh","executionInfo":{"status":"ok","timestamp":1713390745185,"user_tz":240,"elapsed":213,"user":{"displayName":"Grace Xiao","userId":"17822519317399742953"}},"outputId":"6a94a81b-118e-4d4e-d08a-413c9cee5b95"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.Javascript object>"],"application/javascript":["\n","    async function download(id, filename, size) {\n","      if (!google.colab.kernel.accessAllowed) {\n","        return;\n","      }\n","      const div = document.createElement('div');\n","      const label = document.createElement('label');\n","      label.textContent = `Downloading \"${filename}\": `;\n","      div.appendChild(label);\n","      const progress = document.createElement('progress');\n","      progress.max = size;\n","      div.appendChild(progress);\n","      document.body.appendChild(div);\n","\n","      const buffers = [];\n","      let downloaded = 0;\n","\n","      const channel = await google.colab.kernel.comms.open(id);\n","      // Send a message to notify the kernel that we're ready.\n","      channel.send({})\n","\n","      for await (const message of channel.messages) {\n","        // Send a message to notify the kernel that we're ready.\n","        channel.send({})\n","        if (message.buffers) {\n","          for (const buffer of message.buffers) {\n","            buffers.push(buffer);\n","            downloaded += buffer.byteLength;\n","            progress.value = downloaded;\n","          }\n","        }\n","      }\n","      const blob = new Blob(buffers, {type: 'application/binary'});\n","      const a = document.createElement('a');\n","      a.href = window.URL.createObjectURL(blob);\n","      a.download = filename;\n","      div.appendChild(a);\n","      a.click();\n","      div.remove();\n","    }\n","  "]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.Javascript object>"],"application/javascript":["download(\"download_b6ee2fc7-034b-4f97-85b1-8109e22ca0ba\", \"Emotiv_Right_acc.csv\", 296688)"]},"metadata":{}}]},{"cell_type":"markdown","source":["### Gyroscope Data"],"metadata":{"id":"nUx4qFWCYUAl"}},{"cell_type":"code","source":["features2_df = pd.DataFrame()\n","for filename in sorted(os.listdir(root_folder), key=sort_key):\n","    if filename.endswith('_gyro.csv'):\n","        file_path = os.path.join(root_folder, filename)\n","\n","        df1 = pd.read_csv(file_path)\n","        df = df1[['X','Y','Z']]\n","\n","        all_features = {}\n","        filename_part = file_path.split('/')[-1]\n","        filename_part2 = filename_part.split('.')[0]\n","        all_features['Filename_Part'] = str(filename_part2)\n","\n","        for column in df.columns:\n","\n","            # Statistical features\n","            all_features[f'{column}_mean'] = np.mean(df[column])\n","            all_features[f'{column}_std'] = np.std(df[column])\n","            all_features[f'{column}_var'] = np.var(df[column])\n","            all_features[f'{column}_median'] = np.median(df[column])\n","            all_features[f'{column}_min'] = np.min(df[column])\n","            all_features[f'{column}_max'] = np.max(df[column])\n","\n","            # Hjorth parameters\n","            activity, mobility, complexity = hjorth_params(df[column])\n","            all_features[f'{column}_activity'] = activity\n","            all_features[f'{column}_mobility'] = mobility\n","            all_features[f'{column}_complexity'] = complexity\n","\n","            # AR coefficients\n","            ar_coeffs = autoreg_coeffs(df[column].dropna(), order=5)\n","            for i, coeff in enumerate(ar_coeffs):\n","                all_features[f'{column}_ar_coeff_{i}'] = coeff\n","\n","            # SMA, RMS\n","            all_features[f'{column}_SMA'] = signal_magnitude_area(df[column])\n","            all_features[f'{column}_RMS'] = root_mean_square(df[column])\n","\n","            # Autocorrelation\n","            all_features[f'{column}_ACF1'] = calculate_acf(df[column], 501, 250)\n","            all_features[f'{column}_ACF2'] = calculate_acf(df[column], 501, 500)\n","\n","            # Gradient\n","            all_features[f'{column}_Grad1mean'] = np.mean(np.gradient(df[column]))\n","            all_features[f'{column}_Grad1std'] = np.std(np.gradient(df[column]))\n","            all_features[f'{column}_Grad1var'] = np.var(np.gradient(df[column]))\n","            all_features[f'{column}_Grad2mean'] = np.mean(np.gradient(np.gradient(df[column])))\n","            all_features[f'{column}_Grad2std'] = np.std(np.gradient(np.gradient(df[column])))\n","            all_features[f'{column}_Grad2var'] = np.var(np.gradient(np.gradient(df[column])))\n","\n","            # Shannon Entropy\n","            all_features[f'{column}_SEntropy'] = shannon_entropy(df[column])\n","\n","        # SMV\n","        all_features[f'All_SMV'] = calculate_smv(df)\n","\n","        all_feature = pd.DataFrame([all_features])\n","\n","    features2_df = pd.concat([features2_df, all_feature], ignore_index=True)\n"],"metadata":{"id":"2Oe4B2NGr5k5"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["features2_df = features2_df.drop_duplicates(subset=['Filename_Part'])\n","filtered_features_df2 = features2_df[~features2_df['Filename_Part'].str.contains('Test21|Test22')]\n","filtered_features_df2.reset_index(drop=True, inplace=True)\n","filtered_features_df2"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":444},"id":"MlnywdIwsDpP","executionInfo":{"status":"ok","timestamp":1713401827308,"user_tz":240,"elapsed":10,"user":{"displayName":"Grace Xiao","userId":"17822519317399742953"}},"outputId":"10faab64-a5e5-486b-deee-e220843dca41"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                          Filename_Part    X_mean     X_std     X_var  \\\n","0     HM_Test26_watchRight_15_four_gyro -0.001403  0.338176  0.114363   \n","1        HM_Test0_watchRight_1_one_gyro  0.001607  0.260157  0.067681   \n","2        HM_Test0_watchRight_3_two_gyro  0.002963  0.190770  0.036393   \n","3      HM_Test0_watchRight_5_three_gyro  0.003272  0.080315  0.006451   \n","4       HM_Test0_watchRight_7_four_gyro  0.002472  0.215988  0.046651   \n","..                                  ...       ...       ...       ...   \n","195   HM_Test26_watchRight_5_three_gyro  0.005053  0.438546  0.192322   \n","196    HM_Test26_watchRight_7_four_gyro  0.002367  0.362788  0.131615   \n","197     HM_Test26_watchRight_9_one_gyro  0.002305  0.318483  0.101431   \n","198    HM_Test26_watchRight_11_two_gyro  0.002467  0.292631  0.085633   \n","199  HM_Test26_watchRight_13_three_gyro -0.000201  0.581372  0.337993   \n","\n","     X_median      X_min     X_max  X_activity  X_mobility  X_complexity  ...  \\\n","0    0.007990  -5.593082  2.865789    0.114363    0.132617      5.765035  ...   \n","1    0.000000  -4.112247  6.810244    0.067681    0.070913     11.022582  ...   \n","2    0.000000  -1.800440  3.523642    0.036393    0.163308      4.630067  ...   \n","3    0.000000  -1.155904  1.382290    0.006451    0.138448      5.409588  ...   \n","4    0.000000  -2.309144  3.094839    0.046651    0.156288      4.574221  ...   \n","..        ...        ...       ...         ...         ...           ...  ...   \n","195  0.000000  -5.441270  5.358706    0.192322    0.087660      9.407032  ...   \n","196  0.000000  -6.405411  9.138031    0.131615    0.136926      5.896235  ...   \n","197  0.000000  -9.311151  7.843632    0.101431    0.080000      9.567558  ...   \n","198  0.002663  -3.483691  3.523642    0.085633    0.153498      5.261906  ...   \n","199  0.000000 -13.375457  8.919635    0.337993    0.089421      9.561830  ...   \n","\n","       Z_ACF1    Z_ACF2   Z_Grad1mean  Z_Grad1std  Z_Grad1var   Z_Grad2mean  \\\n","0    0.037645 -0.022263 -1.425811e-06    0.014292    0.000204  3.830537e-07   \n","1   -0.282172  0.049478  1.317114e-06    0.006302    0.000040 -2.942488e-07   \n","2    0.006878 -0.021570 -3.791419e-07    0.018311    0.000335  9.977444e-09   \n","3    0.027719 -0.066030  2.087315e-07    0.003741    0.000014  2.087315e-07   \n","4    0.021337 -0.182476  5.823871e-08    0.011482    0.000132  1.164774e-07   \n","..        ...       ...           ...         ...         ...           ...   \n","195 -0.118707 -0.002970  1.452221e-06    0.013855    0.000192  1.599905e-07   \n","196 -0.101010  0.004093  2.519509e-06    0.021359    0.000456 -1.619685e-07   \n","197 -0.012828 -0.038737 -9.003508e-08    0.011652    0.000136 -4.951929e-07   \n","198 -0.001342  0.045436  3.601153e-07    0.012731    0.000162  4.801537e-07   \n","199 -0.031774 -0.098687  4.529143e-07    0.015796    0.000250 -1.171670e-06   \n","\n","     Z_Grad2std  Z_Grad2var  Z_SEntropy   All_SMV  \n","0      0.007510    0.000056    6.435570  0.218638  \n","1      0.002580    0.000007    3.901216  0.067171  \n","2      0.008738    0.000076    5.299957  0.135881  \n","3      0.001756    0.000003    3.767423  0.039921  \n","4      0.005286    0.000028    5.899198  0.157682  \n","..          ...         ...         ...       ...  \n","195    0.005765    0.000033    6.213815  0.196274  \n","196    0.009887    0.000098    6.740643  0.214154  \n","197    0.005225    0.000027    3.689207  0.062542  \n","198    0.006654    0.000044    6.276326  0.194280  \n","199    0.007516    0.000056    5.348136  0.188279  \n","\n","[200 rows x 77 columns]"],"text/html":["\n","  <div id=\"df-6535911a-5789-43ff-aa59-3648b325ebef\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Filename_Part</th>\n","      <th>X_mean</th>\n","      <th>X_std</th>\n","      <th>X_var</th>\n","      <th>X_median</th>\n","      <th>X_min</th>\n","      <th>X_max</th>\n","      <th>X_activity</th>\n","      <th>X_mobility</th>\n","      <th>X_complexity</th>\n","      <th>...</th>\n","      <th>Z_ACF1</th>\n","      <th>Z_ACF2</th>\n","      <th>Z_Grad1mean</th>\n","      <th>Z_Grad1std</th>\n","      <th>Z_Grad1var</th>\n","      <th>Z_Grad2mean</th>\n","      <th>Z_Grad2std</th>\n","      <th>Z_Grad2var</th>\n","      <th>Z_SEntropy</th>\n","      <th>All_SMV</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>HM_Test26_watchRight_15_four_gyro</td>\n","      <td>-0.001403</td>\n","      <td>0.338176</td>\n","      <td>0.114363</td>\n","      <td>0.007990</td>\n","      <td>-5.593082</td>\n","      <td>2.865789</td>\n","      <td>0.114363</td>\n","      <td>0.132617</td>\n","      <td>5.765035</td>\n","      <td>...</td>\n","      <td>0.037645</td>\n","      <td>-0.022263</td>\n","      <td>-1.425811e-06</td>\n","      <td>0.014292</td>\n","      <td>0.000204</td>\n","      <td>3.830537e-07</td>\n","      <td>0.007510</td>\n","      <td>0.000056</td>\n","      <td>6.435570</td>\n","      <td>0.218638</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>HM_Test0_watchRight_1_one_gyro</td>\n","      <td>0.001607</td>\n","      <td>0.260157</td>\n","      <td>0.067681</td>\n","      <td>0.000000</td>\n","      <td>-4.112247</td>\n","      <td>6.810244</td>\n","      <td>0.067681</td>\n","      <td>0.070913</td>\n","      <td>11.022582</td>\n","      <td>...</td>\n","      <td>-0.282172</td>\n","      <td>0.049478</td>\n","      <td>1.317114e-06</td>\n","      <td>0.006302</td>\n","      <td>0.000040</td>\n","      <td>-2.942488e-07</td>\n","      <td>0.002580</td>\n","      <td>0.000007</td>\n","      <td>3.901216</td>\n","      <td>0.067171</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>HM_Test0_watchRight_3_two_gyro</td>\n","      <td>0.002963</td>\n","      <td>0.190770</td>\n","      <td>0.036393</td>\n","      <td>0.000000</td>\n","      <td>-1.800440</td>\n","      <td>3.523642</td>\n","      <td>0.036393</td>\n","      <td>0.163308</td>\n","      <td>4.630067</td>\n","      <td>...</td>\n","      <td>0.006878</td>\n","      <td>-0.021570</td>\n","      <td>-3.791419e-07</td>\n","      <td>0.018311</td>\n","      <td>0.000335</td>\n","      <td>9.977444e-09</td>\n","      <td>0.008738</td>\n","      <td>0.000076</td>\n","      <td>5.299957</td>\n","      <td>0.135881</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>HM_Test0_watchRight_5_three_gyro</td>\n","      <td>0.003272</td>\n","      <td>0.080315</td>\n","      <td>0.006451</td>\n","      <td>0.000000</td>\n","      <td>-1.155904</td>\n","      <td>1.382290</td>\n","      <td>0.006451</td>\n","      <td>0.138448</td>\n","      <td>5.409588</td>\n","      <td>...</td>\n","      <td>0.027719</td>\n","      <td>-0.066030</td>\n","      <td>2.087315e-07</td>\n","      <td>0.003741</td>\n","      <td>0.000014</td>\n","      <td>2.087315e-07</td>\n","      <td>0.001756</td>\n","      <td>0.000003</td>\n","      <td>3.767423</td>\n","      <td>0.039921</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>HM_Test0_watchRight_7_four_gyro</td>\n","      <td>0.002472</td>\n","      <td>0.215988</td>\n","      <td>0.046651</td>\n","      <td>0.000000</td>\n","      <td>-2.309144</td>\n","      <td>3.094839</td>\n","      <td>0.046651</td>\n","      <td>0.156288</td>\n","      <td>4.574221</td>\n","      <td>...</td>\n","      <td>0.021337</td>\n","      <td>-0.182476</td>\n","      <td>5.823871e-08</td>\n","      <td>0.011482</td>\n","      <td>0.000132</td>\n","      <td>1.164774e-07</td>\n","      <td>0.005286</td>\n","      <td>0.000028</td>\n","      <td>5.899198</td>\n","      <td>0.157682</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>195</th>\n","      <td>HM_Test26_watchRight_5_three_gyro</td>\n","      <td>0.005053</td>\n","      <td>0.438546</td>\n","      <td>0.192322</td>\n","      <td>0.000000</td>\n","      <td>-5.441270</td>\n","      <td>5.358706</td>\n","      <td>0.192322</td>\n","      <td>0.087660</td>\n","      <td>9.407032</td>\n","      <td>...</td>\n","      <td>-0.118707</td>\n","      <td>-0.002970</td>\n","      <td>1.452221e-06</td>\n","      <td>0.013855</td>\n","      <td>0.000192</td>\n","      <td>1.599905e-07</td>\n","      <td>0.005765</td>\n","      <td>0.000033</td>\n","      <td>6.213815</td>\n","      <td>0.196274</td>\n","    </tr>\n","    <tr>\n","      <th>196</th>\n","      <td>HM_Test26_watchRight_7_four_gyro</td>\n","      <td>0.002367</td>\n","      <td>0.362788</td>\n","      <td>0.131615</td>\n","      <td>0.000000</td>\n","      <td>-6.405411</td>\n","      <td>9.138031</td>\n","      <td>0.131615</td>\n","      <td>0.136926</td>\n","      <td>5.896235</td>\n","      <td>...</td>\n","      <td>-0.101010</td>\n","      <td>0.004093</td>\n","      <td>2.519509e-06</td>\n","      <td>0.021359</td>\n","      <td>0.000456</td>\n","      <td>-1.619685e-07</td>\n","      <td>0.009887</td>\n","      <td>0.000098</td>\n","      <td>6.740643</td>\n","      <td>0.214154</td>\n","    </tr>\n","    <tr>\n","      <th>197</th>\n","      <td>HM_Test26_watchRight_9_one_gyro</td>\n","      <td>0.002305</td>\n","      <td>0.318483</td>\n","      <td>0.101431</td>\n","      <td>0.000000</td>\n","      <td>-9.311151</td>\n","      <td>7.843632</td>\n","      <td>0.101431</td>\n","      <td>0.080000</td>\n","      <td>9.567558</td>\n","      <td>...</td>\n","      <td>-0.012828</td>\n","      <td>-0.038737</td>\n","      <td>-9.003508e-08</td>\n","      <td>0.011652</td>\n","      <td>0.000136</td>\n","      <td>-4.951929e-07</td>\n","      <td>0.005225</td>\n","      <td>0.000027</td>\n","      <td>3.689207</td>\n","      <td>0.062542</td>\n","    </tr>\n","    <tr>\n","      <th>198</th>\n","      <td>HM_Test26_watchRight_11_two_gyro</td>\n","      <td>0.002467</td>\n","      <td>0.292631</td>\n","      <td>0.085633</td>\n","      <td>0.002663</td>\n","      <td>-3.483691</td>\n","      <td>3.523642</td>\n","      <td>0.085633</td>\n","      <td>0.153498</td>\n","      <td>5.261906</td>\n","      <td>...</td>\n","      <td>-0.001342</td>\n","      <td>0.045436</td>\n","      <td>3.601153e-07</td>\n","      <td>0.012731</td>\n","      <td>0.000162</td>\n","      <td>4.801537e-07</td>\n","      <td>0.006654</td>\n","      <td>0.000044</td>\n","      <td>6.276326</td>\n","      <td>0.194280</td>\n","    </tr>\n","    <tr>\n","      <th>199</th>\n","      <td>HM_Test26_watchRight_13_three_gyro</td>\n","      <td>-0.000201</td>\n","      <td>0.581372</td>\n","      <td>0.337993</td>\n","      <td>0.000000</td>\n","      <td>-13.375457</td>\n","      <td>8.919635</td>\n","      <td>0.337993</td>\n","      <td>0.089421</td>\n","      <td>9.561830</td>\n","      <td>...</td>\n","      <td>-0.031774</td>\n","      <td>-0.098687</td>\n","      <td>4.529143e-07</td>\n","      <td>0.015796</td>\n","      <td>0.000250</td>\n","      <td>-1.171670e-06</td>\n","      <td>0.007516</td>\n","      <td>0.000056</td>\n","      <td>5.348136</td>\n","      <td>0.188279</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>200 rows Ã— 77 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6535911a-5789-43ff-aa59-3648b325ebef')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-6535911a-5789-43ff-aa59-3648b325ebef button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-6535911a-5789-43ff-aa59-3648b325ebef');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-1ca82c78-e852-4625-b207-3ddabd1cd035\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-1ca82c78-e852-4625-b207-3ddabd1cd035')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-1ca82c78-e852-4625-b207-3ddabd1cd035 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_c1495acf-c806-45ef-8d27-568a4d817d9b\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('filtered_features_df2')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_c1495acf-c806-45ef-8d27-568a4d817d9b button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('filtered_features_df2');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"filtered_features_df2"}},"metadata":{},"execution_count":98}]},{"cell_type":"code","source":["first_row_df = pd.DataFrame(filtered_features_df2.iloc[0]).T\n","\n","filtered_features_df2 = pd.concat([filtered_features_df2.iloc[1:], first_row_df], ignore_index=True)\n","filtered_features_df2"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":444},"id":"ehyaFuEBtaX2","executionInfo":{"status":"ok","timestamp":1713402047228,"user_tz":240,"elapsed":237,"user":{"displayName":"Grace Xiao","userId":"17822519317399742953"}},"outputId":"d6603ccc-bc00-4100-a85b-83021c96c6dc"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                          Filename_Part    X_mean     X_std     X_var  \\\n","0        HM_Test0_watchRight_1_one_gyro  0.001607  0.260157  0.067681   \n","1        HM_Test0_watchRight_3_two_gyro  0.002963   0.19077  0.036393   \n","2      HM_Test0_watchRight_5_three_gyro  0.003272  0.080315  0.006451   \n","3       HM_Test0_watchRight_7_four_gyro  0.002472  0.215988  0.046651   \n","4        HM_Test0_watchRight_9_one_gyro  0.002084  0.129437  0.016754   \n","..                                  ...       ...       ...       ...   \n","195    HM_Test26_watchRight_7_four_gyro  0.002367  0.362788  0.131615   \n","196     HM_Test26_watchRight_9_one_gyro  0.002305  0.318483  0.101431   \n","197    HM_Test26_watchRight_11_two_gyro  0.002467  0.292631  0.085633   \n","198  HM_Test26_watchRight_13_three_gyro -0.000201  0.581372  0.337993   \n","199   HM_Test26_watchRight_15_four_gyro -0.001403  0.338176  0.114363   \n","\n","     X_median      X_min     X_max X_activity X_mobility X_complexity  ...  \\\n","0         0.0  -4.112247  6.810244   0.067681   0.070913    11.022582  ...   \n","1         0.0   -1.80044  3.523642   0.036393   0.163308     4.630067  ...   \n","2         0.0  -1.155904   1.38229   0.006451   0.138448     5.409588  ...   \n","3         0.0  -2.309144  3.094839   0.046651   0.156288     4.574221  ...   \n","4         0.0  -4.604971  2.293164   0.016754   0.128519     5.819786  ...   \n","..        ...        ...       ...        ...        ...          ...  ...   \n","195       0.0  -6.405411  9.138031   0.131615   0.136926     5.896235  ...   \n","196       0.0  -9.311151  7.843632   0.101431       0.08     9.567558  ...   \n","197  0.002663  -3.483691  3.523642   0.085633   0.153498     5.261906  ...   \n","198       0.0 -13.375457  8.919635   0.337993   0.089421      9.56183  ...   \n","199   0.00799  -5.593082  2.865789   0.114363   0.132617     5.765035  ...   \n","\n","       Z_ACF1    Z_ACF2 Z_Grad1mean Z_Grad1std Z_Grad1var Z_Grad2mean  \\\n","0   -0.282172  0.049478    0.000001   0.006302    0.00004        -0.0   \n","1    0.006878  -0.02157        -0.0   0.018311   0.000335         0.0   \n","2    0.027719  -0.06603         0.0   0.003741   0.000014         0.0   \n","3    0.021337 -0.182476         0.0   0.011482   0.000132         0.0   \n","4    0.000851  0.008886   -0.000002   0.006216   0.000039    0.000001   \n","..        ...       ...         ...        ...        ...         ...   \n","195  -0.10101  0.004093    0.000003   0.021359   0.000456        -0.0   \n","196 -0.012828 -0.038737        -0.0   0.011652   0.000136        -0.0   \n","197 -0.001342  0.045436         0.0   0.012731   0.000162         0.0   \n","198 -0.031774 -0.098687         0.0   0.015796    0.00025   -0.000001   \n","199  0.037645 -0.022263   -0.000001   0.014292   0.000204         0.0   \n","\n","    Z_Grad2std Z_Grad2var Z_SEntropy   All_SMV  \n","0      0.00258   0.000007   3.901216  0.067171  \n","1     0.008738   0.000076   5.299957  0.135881  \n","2     0.001756   0.000003   3.767423  0.039921  \n","3     0.005286   0.000028   5.899198  0.157682  \n","4     0.002682   0.000007   2.802608  0.047825  \n","..         ...        ...        ...       ...  \n","195   0.009887   0.000098   6.740643  0.214154  \n","196   0.005225   0.000027   3.689207  0.062542  \n","197   0.006654   0.000044   6.276326   0.19428  \n","198   0.007516   0.000056   5.348136  0.188279  \n","199    0.00751   0.000056    6.43557  0.218638  \n","\n","[200 rows x 77 columns]"],"text/html":["\n","  <div id=\"df-d0769430-38ae-45ef-9df4-b710682ba6b5\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Filename_Part</th>\n","      <th>X_mean</th>\n","      <th>X_std</th>\n","      <th>X_var</th>\n","      <th>X_median</th>\n","      <th>X_min</th>\n","      <th>X_max</th>\n","      <th>X_activity</th>\n","      <th>X_mobility</th>\n","      <th>X_complexity</th>\n","      <th>...</th>\n","      <th>Z_ACF1</th>\n","      <th>Z_ACF2</th>\n","      <th>Z_Grad1mean</th>\n","      <th>Z_Grad1std</th>\n","      <th>Z_Grad1var</th>\n","      <th>Z_Grad2mean</th>\n","      <th>Z_Grad2std</th>\n","      <th>Z_Grad2var</th>\n","      <th>Z_SEntropy</th>\n","      <th>All_SMV</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>HM_Test0_watchRight_1_one_gyro</td>\n","      <td>0.001607</td>\n","      <td>0.260157</td>\n","      <td>0.067681</td>\n","      <td>0.0</td>\n","      <td>-4.112247</td>\n","      <td>6.810244</td>\n","      <td>0.067681</td>\n","      <td>0.070913</td>\n","      <td>11.022582</td>\n","      <td>...</td>\n","      <td>-0.282172</td>\n","      <td>0.049478</td>\n","      <td>0.000001</td>\n","      <td>0.006302</td>\n","      <td>0.00004</td>\n","      <td>-0.0</td>\n","      <td>0.00258</td>\n","      <td>0.000007</td>\n","      <td>3.901216</td>\n","      <td>0.067171</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>HM_Test0_watchRight_3_two_gyro</td>\n","      <td>0.002963</td>\n","      <td>0.19077</td>\n","      <td>0.036393</td>\n","      <td>0.0</td>\n","      <td>-1.80044</td>\n","      <td>3.523642</td>\n","      <td>0.036393</td>\n","      <td>0.163308</td>\n","      <td>4.630067</td>\n","      <td>...</td>\n","      <td>0.006878</td>\n","      <td>-0.02157</td>\n","      <td>-0.0</td>\n","      <td>0.018311</td>\n","      <td>0.000335</td>\n","      <td>0.0</td>\n","      <td>0.008738</td>\n","      <td>0.000076</td>\n","      <td>5.299957</td>\n","      <td>0.135881</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>HM_Test0_watchRight_5_three_gyro</td>\n","      <td>0.003272</td>\n","      <td>0.080315</td>\n","      <td>0.006451</td>\n","      <td>0.0</td>\n","      <td>-1.155904</td>\n","      <td>1.38229</td>\n","      <td>0.006451</td>\n","      <td>0.138448</td>\n","      <td>5.409588</td>\n","      <td>...</td>\n","      <td>0.027719</td>\n","      <td>-0.06603</td>\n","      <td>0.0</td>\n","      <td>0.003741</td>\n","      <td>0.000014</td>\n","      <td>0.0</td>\n","      <td>0.001756</td>\n","      <td>0.000003</td>\n","      <td>3.767423</td>\n","      <td>0.039921</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>HM_Test0_watchRight_7_four_gyro</td>\n","      <td>0.002472</td>\n","      <td>0.215988</td>\n","      <td>0.046651</td>\n","      <td>0.0</td>\n","      <td>-2.309144</td>\n","      <td>3.094839</td>\n","      <td>0.046651</td>\n","      <td>0.156288</td>\n","      <td>4.574221</td>\n","      <td>...</td>\n","      <td>0.021337</td>\n","      <td>-0.182476</td>\n","      <td>0.0</td>\n","      <td>0.011482</td>\n","      <td>0.000132</td>\n","      <td>0.0</td>\n","      <td>0.005286</td>\n","      <td>0.000028</td>\n","      <td>5.899198</td>\n","      <td>0.157682</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>HM_Test0_watchRight_9_one_gyro</td>\n","      <td>0.002084</td>\n","      <td>0.129437</td>\n","      <td>0.016754</td>\n","      <td>0.0</td>\n","      <td>-4.604971</td>\n","      <td>2.293164</td>\n","      <td>0.016754</td>\n","      <td>0.128519</td>\n","      <td>5.819786</td>\n","      <td>...</td>\n","      <td>0.000851</td>\n","      <td>0.008886</td>\n","      <td>-0.000002</td>\n","      <td>0.006216</td>\n","      <td>0.000039</td>\n","      <td>0.000001</td>\n","      <td>0.002682</td>\n","      <td>0.000007</td>\n","      <td>2.802608</td>\n","      <td>0.047825</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>195</th>\n","      <td>HM_Test26_watchRight_7_four_gyro</td>\n","      <td>0.002367</td>\n","      <td>0.362788</td>\n","      <td>0.131615</td>\n","      <td>0.0</td>\n","      <td>-6.405411</td>\n","      <td>9.138031</td>\n","      <td>0.131615</td>\n","      <td>0.136926</td>\n","      <td>5.896235</td>\n","      <td>...</td>\n","      <td>-0.10101</td>\n","      <td>0.004093</td>\n","      <td>0.000003</td>\n","      <td>0.021359</td>\n","      <td>0.000456</td>\n","      <td>-0.0</td>\n","      <td>0.009887</td>\n","      <td>0.000098</td>\n","      <td>6.740643</td>\n","      <td>0.214154</td>\n","    </tr>\n","    <tr>\n","      <th>196</th>\n","      <td>HM_Test26_watchRight_9_one_gyro</td>\n","      <td>0.002305</td>\n","      <td>0.318483</td>\n","      <td>0.101431</td>\n","      <td>0.0</td>\n","      <td>-9.311151</td>\n","      <td>7.843632</td>\n","      <td>0.101431</td>\n","      <td>0.08</td>\n","      <td>9.567558</td>\n","      <td>...</td>\n","      <td>-0.012828</td>\n","      <td>-0.038737</td>\n","      <td>-0.0</td>\n","      <td>0.011652</td>\n","      <td>0.000136</td>\n","      <td>-0.0</td>\n","      <td>0.005225</td>\n","      <td>0.000027</td>\n","      <td>3.689207</td>\n","      <td>0.062542</td>\n","    </tr>\n","    <tr>\n","      <th>197</th>\n","      <td>HM_Test26_watchRight_11_two_gyro</td>\n","      <td>0.002467</td>\n","      <td>0.292631</td>\n","      <td>0.085633</td>\n","      <td>0.002663</td>\n","      <td>-3.483691</td>\n","      <td>3.523642</td>\n","      <td>0.085633</td>\n","      <td>0.153498</td>\n","      <td>5.261906</td>\n","      <td>...</td>\n","      <td>-0.001342</td>\n","      <td>0.045436</td>\n","      <td>0.0</td>\n","      <td>0.012731</td>\n","      <td>0.000162</td>\n","      <td>0.0</td>\n","      <td>0.006654</td>\n","      <td>0.000044</td>\n","      <td>6.276326</td>\n","      <td>0.19428</td>\n","    </tr>\n","    <tr>\n","      <th>198</th>\n","      <td>HM_Test26_watchRight_13_three_gyro</td>\n","      <td>-0.000201</td>\n","      <td>0.581372</td>\n","      <td>0.337993</td>\n","      <td>0.0</td>\n","      <td>-13.375457</td>\n","      <td>8.919635</td>\n","      <td>0.337993</td>\n","      <td>0.089421</td>\n","      <td>9.56183</td>\n","      <td>...</td>\n","      <td>-0.031774</td>\n","      <td>-0.098687</td>\n","      <td>0.0</td>\n","      <td>0.015796</td>\n","      <td>0.00025</td>\n","      <td>-0.000001</td>\n","      <td>0.007516</td>\n","      <td>0.000056</td>\n","      <td>5.348136</td>\n","      <td>0.188279</td>\n","    </tr>\n","    <tr>\n","      <th>199</th>\n","      <td>HM_Test26_watchRight_15_four_gyro</td>\n","      <td>-0.001403</td>\n","      <td>0.338176</td>\n","      <td>0.114363</td>\n","      <td>0.00799</td>\n","      <td>-5.593082</td>\n","      <td>2.865789</td>\n","      <td>0.114363</td>\n","      <td>0.132617</td>\n","      <td>5.765035</td>\n","      <td>...</td>\n","      <td>0.037645</td>\n","      <td>-0.022263</td>\n","      <td>-0.000001</td>\n","      <td>0.014292</td>\n","      <td>0.000204</td>\n","      <td>0.0</td>\n","      <td>0.00751</td>\n","      <td>0.000056</td>\n","      <td>6.43557</td>\n","      <td>0.218638</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>200 rows Ã— 77 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d0769430-38ae-45ef-9df4-b710682ba6b5')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-d0769430-38ae-45ef-9df4-b710682ba6b5 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-d0769430-38ae-45ef-9df4-b710682ba6b5');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-6585cc91-95d9-456a-96c3-58d018b230f2\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-6585cc91-95d9-456a-96c3-58d018b230f2')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-6585cc91-95d9-456a-96c3-58d018b230f2 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_11409880-0f61-4af1-91f9-0485b176133f\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('filtered_features_df2')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_11409880-0f61-4af1-91f9-0485b176133f button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('filtered_features_df2');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"filtered_features_df2"}},"metadata":{},"execution_count":101}]},{"cell_type":"markdown","source":["### Export"],"metadata":{"id":"r9BgUIcSSPVY"}},{"cell_type":"code","source":["filtered_features_df2.to_csv('Emotiv_Right_gyro.csv', index=False)\n","\n","# Download the CSV file\n","from google.colab import files\n","files.download('Emotiv_Right_gyro.csv')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":17},"id":"iCOEB1nZscUT","executionInfo":{"status":"ok","timestamp":1713402084402,"user_tz":240,"elapsed":281,"user":{"displayName":"Grace Xiao","userId":"17822519317399742953"}},"outputId":"c8a1c264-e80f-4db9-97ef-6452c73d308f"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.Javascript object>"],"application/javascript":["\n","    async function download(id, filename, size) {\n","      if (!google.colab.kernel.accessAllowed) {\n","        return;\n","      }\n","      const div = document.createElement('div');\n","      const label = document.createElement('label');\n","      label.textContent = `Downloading \"${filename}\": `;\n","      div.appendChild(label);\n","      const progress = document.createElement('progress');\n","      progress.max = size;\n","      div.appendChild(progress);\n","      document.body.appendChild(div);\n","\n","      const buffers = [];\n","      let downloaded = 0;\n","\n","      const channel = await google.colab.kernel.comms.open(id);\n","      // Send a message to notify the kernel that we're ready.\n","      channel.send({})\n","\n","      for await (const message of channel.messages) {\n","        // Send a message to notify the kernel that we're ready.\n","        channel.send({})\n","        if (message.buffers) {\n","          for (const buffer of message.buffers) {\n","            buffers.push(buffer);\n","            downloaded += buffer.byteLength;\n","            progress.value = downloaded;\n","          }\n","        }\n","      }\n","      const blob = new Blob(buffers, {type: 'application/binary'});\n","      const a = document.createElement('a');\n","      a.href = window.URL.createObjectURL(blob);\n","      a.download = filename;\n","      div.appendChild(a);\n","      a.click();\n","      div.remove();\n","    }\n","  "]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.Javascript object>"],"application/javascript":["download(\"download_8201012b-d200-4824-bc86-6c8b411175da\", \"Emotiv_Right_gyro.csv\", 303599)"]},"metadata":{}}]}]}