{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"collapsed_sections":["dPyQvA3d9Cqn","sCvlTL6N9QO_","eH5eSZ58-nMC","rWfzCo3i9osr"]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"id":"Ma1h3Y1DoSl2","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1713879623913,"user_tz":240,"elapsed":63790,"user":{"displayName":"Wang","userId":"06822780026042244845"}},"outputId":"b0bf51db-0364-40de-d825-3791deda5832"},"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}],"source":["from google.colab import drive\n","drive.mount('/content/drive')"]},{"cell_type":"code","source":["\n","import pandas as pd\n","import numpy as np"],"metadata":{"id":"r4AOB6Zvoaug","executionInfo":{"status":"ok","timestamp":1713879623913,"user_tz":240,"elapsed":49,"user":{"displayName":"Wang","userId":"06822780026042244845"}}},"execution_count":2,"outputs":[]},{"cell_type":"markdown","source":["# Time Domain EEG Feature + HM Features"],"metadata":{"id":"5TfBr573x27p"}},{"cell_type":"markdown","source":["## Load Data"],"metadata":{"id":"dPyQvA3d9Cqn"}},{"cell_type":"code","source":["df_time=pd.read_csv(\"/content/drive/MyDrive/JHU/MLMA/MLMA Project/BS-HMS-Dataset/time_domain_features\")"],"metadata":{"id":"X55kdfKYpdmA","executionInfo":{"status":"ok","timestamp":1713879623913,"user_tz":240,"elapsed":42,"user":{"displayName":"Wang","userId":"06822780026042244845"}}},"execution_count":3,"outputs":[]},{"cell_type":"code","source":["df_time"],"metadata":{"id":"obmgOg6aqkRn","colab":{"base_uri":"https://localhost:8080/","height":0},"executionInfo":{"status":"ok","timestamp":1713879623914,"user_tz":240,"elapsed":40,"user":{"displayName":"Wang","userId":"06822780026042244845"}},"outputId":"029ac220-0a6f-4a61-84fb-6ff61c8afc69"},"execution_count":4,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Unnamed: 0     AF3_mean    AF3_std      AF3_var   AF3_median  \\\n","0             0  4233.422687  43.471805  1889.797801  4231.794922   \n","1             1  4231.008787  44.189663  1952.726344  4229.743652   \n","2             2  4235.494381  25.175706   633.816192  4233.846191   \n","3             3  4237.481215  86.477155  7478.298389  4236.922852   \n","4             4  4233.419821  34.626376  1198.985906  4230.769043   \n","..          ...          ...        ...          ...          ...   \n","211         211  4239.671983  97.882280  9580.940701  4237.948730   \n","212         212  4229.912101  50.426474  2542.829266  4228.205078   \n","213         213  4234.076193  32.293637  1042.878960  4234.871582   \n","214         214  4236.514296  21.179939   448.589826  4236.410156   \n","215         215  4237.631749  19.933718   397.353096  4237.436035   \n","\n","         AF3_min      AF3_max  AF3_activity  AF3_mobility  AF3_complexity  \\\n","0    3241.025635  4429.230469   1889.797801      0.212561        5.546035   \n","1    3387.692139  5505.127930   1952.726344      0.269354        4.519996   \n","2    3968.205078  4438.974121    633.816192      0.379098        3.379011   \n","3    3529.743408  5739.486816   7478.298389      0.111843       11.086097   \n","4    3809.230713  4543.589844   1198.985906      0.264964        4.459335   \n","..           ...          ...           ...           ...             ...   \n","211   759.487183  4835.384277   9580.940701      0.106721       10.789804   \n","212  3890.256348  4543.076660   2542.829266      0.105597       11.185909   \n","213  4091.281982  4401.025391   1042.878960      0.171739        7.219231   \n","214  4070.769043  4437.435547    448.589826      0.276163        4.529806   \n","215  4154.871582  4365.641113    397.353096      0.257500        4.828735   \n","\n","     ...      AF4_max  AF4_activity  AF4_mobility  AF4_complexity  \\\n","0    ...  4798.461426   1955.207164      0.201175        5.853881   \n","1    ...  5405.641113   4047.042955      0.181730        6.655339   \n","2    ...  4456.922852    788.581256      0.362081        3.528739   \n","3    ...  7725.640625  30770.363380      0.065568       16.047249   \n","4    ...  5711.794922   9459.787110      0.097349       11.212047   \n","..   ...          ...           ...           ...             ...   \n","211  ...  4534.358887   1341.930166      0.288382        4.671318   \n","212  ...  4649.230469   2125.336360      0.194158        6.114867   \n","213  ...  5397.948730   4823.841089      0.127178        9.549253   \n","214  ...  4794.358887   1804.680486      0.212828        5.879350   \n","215  ...  4411.281738    778.759752      0.278193        4.402478   \n","\n","     AF4_ar_coeff_0  AF4_ar_coeff_1  AF4_ar_coeff_2  AF4_ar_coeff_3  \\\n","0          1.888919       -1.916397        1.774889       -1.162047   \n","1          1.869903       -1.917447        1.803922       -1.177878   \n","2          1.719312       -1.716449        1.651069       -1.060818   \n","3          2.014694       -1.962541        1.826205       -1.251982   \n","4          1.916121       -1.784461        1.639423       -1.070856   \n","..              ...             ...             ...             ...   \n","211        1.619370       -1.575834        1.591902       -1.013965   \n","212        1.799081       -1.684543        1.536058       -0.908229   \n","213        1.850852       -1.822298        1.738571       -1.141967   \n","214        1.683692       -1.604122        1.484709       -0.874587   \n","215        1.824404       -1.814688        1.714828       -1.095232   \n","\n","     AF4_ar_coeff_4          Test  \n","0          0.414635   EEG_Test0_1  \n","1          0.421499   EEG_Test0_2  \n","2          0.406884   EEG_Test0_3  \n","3          0.373620   EEG_Test0_4  \n","4          0.299771   EEG_Test0_5  \n","..              ...           ...  \n","211        0.378527  EEG_Test26_4  \n","212        0.257632  EEG_Test26_5  \n","213        0.374842  EEG_Test26_6  \n","214        0.310306  EEG_Test26_7  \n","215        0.370687  EEG_Test26_8  \n","\n","[216 rows x 198 columns]"],"text/html":["\n","  <div id=\"df-3a508f47-2592-4ba1-b18f-14ccfb835a10\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>AF3_mean</th>\n","      <th>AF3_std</th>\n","      <th>AF3_var</th>\n","      <th>AF3_median</th>\n","      <th>AF3_min</th>\n","      <th>AF3_max</th>\n","      <th>AF3_activity</th>\n","      <th>AF3_mobility</th>\n","      <th>AF3_complexity</th>\n","      <th>...</th>\n","      <th>AF4_max</th>\n","      <th>AF4_activity</th>\n","      <th>AF4_mobility</th>\n","      <th>AF4_complexity</th>\n","      <th>AF4_ar_coeff_0</th>\n","      <th>AF4_ar_coeff_1</th>\n","      <th>AF4_ar_coeff_2</th>\n","      <th>AF4_ar_coeff_3</th>\n","      <th>AF4_ar_coeff_4</th>\n","      <th>Test</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>4233.422687</td>\n","      <td>43.471805</td>\n","      <td>1889.797801</td>\n","      <td>4231.794922</td>\n","      <td>3241.025635</td>\n","      <td>4429.230469</td>\n","      <td>1889.797801</td>\n","      <td>0.212561</td>\n","      <td>5.546035</td>\n","      <td>...</td>\n","      <td>4798.461426</td>\n","      <td>1955.207164</td>\n","      <td>0.201175</td>\n","      <td>5.853881</td>\n","      <td>1.888919</td>\n","      <td>-1.916397</td>\n","      <td>1.774889</td>\n","      <td>-1.162047</td>\n","      <td>0.414635</td>\n","      <td>EEG_Test0_1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>4231.008787</td>\n","      <td>44.189663</td>\n","      <td>1952.726344</td>\n","      <td>4229.743652</td>\n","      <td>3387.692139</td>\n","      <td>5505.127930</td>\n","      <td>1952.726344</td>\n","      <td>0.269354</td>\n","      <td>4.519996</td>\n","      <td>...</td>\n","      <td>5405.641113</td>\n","      <td>4047.042955</td>\n","      <td>0.181730</td>\n","      <td>6.655339</td>\n","      <td>1.869903</td>\n","      <td>-1.917447</td>\n","      <td>1.803922</td>\n","      <td>-1.177878</td>\n","      <td>0.421499</td>\n","      <td>EEG_Test0_2</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>4235.494381</td>\n","      <td>25.175706</td>\n","      <td>633.816192</td>\n","      <td>4233.846191</td>\n","      <td>3968.205078</td>\n","      <td>4438.974121</td>\n","      <td>633.816192</td>\n","      <td>0.379098</td>\n","      <td>3.379011</td>\n","      <td>...</td>\n","      <td>4456.922852</td>\n","      <td>788.581256</td>\n","      <td>0.362081</td>\n","      <td>3.528739</td>\n","      <td>1.719312</td>\n","      <td>-1.716449</td>\n","      <td>1.651069</td>\n","      <td>-1.060818</td>\n","      <td>0.406884</td>\n","      <td>EEG_Test0_3</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>4237.481215</td>\n","      <td>86.477155</td>\n","      <td>7478.298389</td>\n","      <td>4236.922852</td>\n","      <td>3529.743408</td>\n","      <td>5739.486816</td>\n","      <td>7478.298389</td>\n","      <td>0.111843</td>\n","      <td>11.086097</td>\n","      <td>...</td>\n","      <td>7725.640625</td>\n","      <td>30770.363380</td>\n","      <td>0.065568</td>\n","      <td>16.047249</td>\n","      <td>2.014694</td>\n","      <td>-1.962541</td>\n","      <td>1.826205</td>\n","      <td>-1.251982</td>\n","      <td>0.373620</td>\n","      <td>EEG_Test0_4</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>4233.419821</td>\n","      <td>34.626376</td>\n","      <td>1198.985906</td>\n","      <td>4230.769043</td>\n","      <td>3809.230713</td>\n","      <td>4543.589844</td>\n","      <td>1198.985906</td>\n","      <td>0.264964</td>\n","      <td>4.459335</td>\n","      <td>...</td>\n","      <td>5711.794922</td>\n","      <td>9459.787110</td>\n","      <td>0.097349</td>\n","      <td>11.212047</td>\n","      <td>1.916121</td>\n","      <td>-1.784461</td>\n","      <td>1.639423</td>\n","      <td>-1.070856</td>\n","      <td>0.299771</td>\n","      <td>EEG_Test0_5</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>211</th>\n","      <td>211</td>\n","      <td>4239.671983</td>\n","      <td>97.882280</td>\n","      <td>9580.940701</td>\n","      <td>4237.948730</td>\n","      <td>759.487183</td>\n","      <td>4835.384277</td>\n","      <td>9580.940701</td>\n","      <td>0.106721</td>\n","      <td>10.789804</td>\n","      <td>...</td>\n","      <td>4534.358887</td>\n","      <td>1341.930166</td>\n","      <td>0.288382</td>\n","      <td>4.671318</td>\n","      <td>1.619370</td>\n","      <td>-1.575834</td>\n","      <td>1.591902</td>\n","      <td>-1.013965</td>\n","      <td>0.378527</td>\n","      <td>EEG_Test26_4</td>\n","    </tr>\n","    <tr>\n","      <th>212</th>\n","      <td>212</td>\n","      <td>4229.912101</td>\n","      <td>50.426474</td>\n","      <td>2542.829266</td>\n","      <td>4228.205078</td>\n","      <td>3890.256348</td>\n","      <td>4543.076660</td>\n","      <td>2542.829266</td>\n","      <td>0.105597</td>\n","      <td>11.185909</td>\n","      <td>...</td>\n","      <td>4649.230469</td>\n","      <td>2125.336360</td>\n","      <td>0.194158</td>\n","      <td>6.114867</td>\n","      <td>1.799081</td>\n","      <td>-1.684543</td>\n","      <td>1.536058</td>\n","      <td>-0.908229</td>\n","      <td>0.257632</td>\n","      <td>EEG_Test26_5</td>\n","    </tr>\n","    <tr>\n","      <th>213</th>\n","      <td>213</td>\n","      <td>4234.076193</td>\n","      <td>32.293637</td>\n","      <td>1042.878960</td>\n","      <td>4234.871582</td>\n","      <td>4091.281982</td>\n","      <td>4401.025391</td>\n","      <td>1042.878960</td>\n","      <td>0.171739</td>\n","      <td>7.219231</td>\n","      <td>...</td>\n","      <td>5397.948730</td>\n","      <td>4823.841089</td>\n","      <td>0.127178</td>\n","      <td>9.549253</td>\n","      <td>1.850852</td>\n","      <td>-1.822298</td>\n","      <td>1.738571</td>\n","      <td>-1.141967</td>\n","      <td>0.374842</td>\n","      <td>EEG_Test26_6</td>\n","    </tr>\n","    <tr>\n","      <th>214</th>\n","      <td>214</td>\n","      <td>4236.514296</td>\n","      <td>21.179939</td>\n","      <td>448.589826</td>\n","      <td>4236.410156</td>\n","      <td>4070.769043</td>\n","      <td>4437.435547</td>\n","      <td>448.589826</td>\n","      <td>0.276163</td>\n","      <td>4.529806</td>\n","      <td>...</td>\n","      <td>4794.358887</td>\n","      <td>1804.680486</td>\n","      <td>0.212828</td>\n","      <td>5.879350</td>\n","      <td>1.683692</td>\n","      <td>-1.604122</td>\n","      <td>1.484709</td>\n","      <td>-0.874587</td>\n","      <td>0.310306</td>\n","      <td>EEG_Test26_7</td>\n","    </tr>\n","    <tr>\n","      <th>215</th>\n","      <td>215</td>\n","      <td>4237.631749</td>\n","      <td>19.933718</td>\n","      <td>397.353096</td>\n","      <td>4237.436035</td>\n","      <td>4154.871582</td>\n","      <td>4365.641113</td>\n","      <td>397.353096</td>\n","      <td>0.257500</td>\n","      <td>4.828735</td>\n","      <td>...</td>\n","      <td>4411.281738</td>\n","      <td>778.759752</td>\n","      <td>0.278193</td>\n","      <td>4.402478</td>\n","      <td>1.824404</td>\n","      <td>-1.814688</td>\n","      <td>1.714828</td>\n","      <td>-1.095232</td>\n","      <td>0.370687</td>\n","      <td>EEG_Test26_8</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>216 rows × 198 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3a508f47-2592-4ba1-b18f-14ccfb835a10')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-3a508f47-2592-4ba1-b18f-14ccfb835a10 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-3a508f47-2592-4ba1-b18f-14ccfb835a10');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-352d0d33-4830-4053-bd42-663c385a7be4\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-352d0d33-4830-4053-bd42-663c385a7be4')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-352d0d33-4830-4053-bd42-663c385a7be4 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_15664baf-2121-487d-b4ba-00c6ee116488\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df_time')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_15664baf-2121-487d-b4ba-00c6ee116488 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df_time');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_time"}},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["rows_to_drop = ['Test20', 'Test21', 'Test27']\n","df_time_filtered = df_time[~df_time['Test'].str.contains('|'.join(rows_to_drop))]\n","df_time_filtered"],"metadata":{"id":"n9vteu-dujn5","colab":{"base_uri":"https://localhost:8080/","height":0},"executionInfo":{"status":"ok","timestamp":1713879623914,"user_tz":240,"elapsed":36,"user":{"displayName":"Wang","userId":"06822780026042244845"}},"outputId":"84d89bf6-a266-4fa4-c1eb-dadf262be9d6"},"execution_count":5,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Unnamed: 0     AF3_mean    AF3_std      AF3_var   AF3_median  \\\n","0             0  4233.422687  43.471805  1889.797801  4231.794922   \n","1             1  4231.008787  44.189663  1952.726344  4229.743652   \n","2             2  4235.494381  25.175706   633.816192  4233.846191   \n","3             3  4237.481215  86.477155  7478.298389  4236.922852   \n","4             4  4233.419821  34.626376  1198.985906  4230.769043   \n","..          ...          ...        ...          ...          ...   \n","211         211  4239.671983  97.882280  9580.940701  4237.948730   \n","212         212  4229.912101  50.426474  2542.829266  4228.205078   \n","213         213  4234.076193  32.293637  1042.878960  4234.871582   \n","214         214  4236.514296  21.179939   448.589826  4236.410156   \n","215         215  4237.631749  19.933718   397.353096  4237.436035   \n","\n","         AF3_min      AF3_max  AF3_activity  AF3_mobility  AF3_complexity  \\\n","0    3241.025635  4429.230469   1889.797801      0.212561        5.546035   \n","1    3387.692139  5505.127930   1952.726344      0.269354        4.519996   \n","2    3968.205078  4438.974121    633.816192      0.379098        3.379011   \n","3    3529.743408  5739.486816   7478.298389      0.111843       11.086097   \n","4    3809.230713  4543.589844   1198.985906      0.264964        4.459335   \n","..           ...          ...           ...           ...             ...   \n","211   759.487183  4835.384277   9580.940701      0.106721       10.789804   \n","212  3890.256348  4543.076660   2542.829266      0.105597       11.185909   \n","213  4091.281982  4401.025391   1042.878960      0.171739        7.219231   \n","214  4070.769043  4437.435547    448.589826      0.276163        4.529806   \n","215  4154.871582  4365.641113    397.353096      0.257500        4.828735   \n","\n","     ...      AF4_max  AF4_activity  AF4_mobility  AF4_complexity  \\\n","0    ...  4798.461426   1955.207164      0.201175        5.853881   \n","1    ...  5405.641113   4047.042955      0.181730        6.655339   \n","2    ...  4456.922852    788.581256      0.362081        3.528739   \n","3    ...  7725.640625  30770.363380      0.065568       16.047249   \n","4    ...  5711.794922   9459.787110      0.097349       11.212047   \n","..   ...          ...           ...           ...             ...   \n","211  ...  4534.358887   1341.930166      0.288382        4.671318   \n","212  ...  4649.230469   2125.336360      0.194158        6.114867   \n","213  ...  5397.948730   4823.841089      0.127178        9.549253   \n","214  ...  4794.358887   1804.680486      0.212828        5.879350   \n","215  ...  4411.281738    778.759752      0.278193        4.402478   \n","\n","     AF4_ar_coeff_0  AF4_ar_coeff_1  AF4_ar_coeff_2  AF4_ar_coeff_3  \\\n","0          1.888919       -1.916397        1.774889       -1.162047   \n","1          1.869903       -1.917447        1.803922       -1.177878   \n","2          1.719312       -1.716449        1.651069       -1.060818   \n","3          2.014694       -1.962541        1.826205       -1.251982   \n","4          1.916121       -1.784461        1.639423       -1.070856   \n","..              ...             ...             ...             ...   \n","211        1.619370       -1.575834        1.591902       -1.013965   \n","212        1.799081       -1.684543        1.536058       -0.908229   \n","213        1.850852       -1.822298        1.738571       -1.141967   \n","214        1.683692       -1.604122        1.484709       -0.874587   \n","215        1.824404       -1.814688        1.714828       -1.095232   \n","\n","     AF4_ar_coeff_4          Test  \n","0          0.414635   EEG_Test0_1  \n","1          0.421499   EEG_Test0_2  \n","2          0.406884   EEG_Test0_3  \n","3          0.373620   EEG_Test0_4  \n","4          0.299771   EEG_Test0_5  \n","..              ...           ...  \n","211        0.378527  EEG_Test26_4  \n","212        0.257632  EEG_Test26_5  \n","213        0.374842  EEG_Test26_6  \n","214        0.310306  EEG_Test26_7  \n","215        0.370687  EEG_Test26_8  \n","\n","[200 rows x 198 columns]"],"text/html":["\n","  <div id=\"df-86f32a47-d12d-4933-a43b-a28a28245387\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>AF3_mean</th>\n","      <th>AF3_std</th>\n","      <th>AF3_var</th>\n","      <th>AF3_median</th>\n","      <th>AF3_min</th>\n","      <th>AF3_max</th>\n","      <th>AF3_activity</th>\n","      <th>AF3_mobility</th>\n","      <th>AF3_complexity</th>\n","      <th>...</th>\n","      <th>AF4_max</th>\n","      <th>AF4_activity</th>\n","      <th>AF4_mobility</th>\n","      <th>AF4_complexity</th>\n","      <th>AF4_ar_coeff_0</th>\n","      <th>AF4_ar_coeff_1</th>\n","      <th>AF4_ar_coeff_2</th>\n","      <th>AF4_ar_coeff_3</th>\n","      <th>AF4_ar_coeff_4</th>\n","      <th>Test</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>4233.422687</td>\n","      <td>43.471805</td>\n","      <td>1889.797801</td>\n","      <td>4231.794922</td>\n","      <td>3241.025635</td>\n","      <td>4429.230469</td>\n","      <td>1889.797801</td>\n","      <td>0.212561</td>\n","      <td>5.546035</td>\n","      <td>...</td>\n","      <td>4798.461426</td>\n","      <td>1955.207164</td>\n","      <td>0.201175</td>\n","      <td>5.853881</td>\n","      <td>1.888919</td>\n","      <td>-1.916397</td>\n","      <td>1.774889</td>\n","      <td>-1.162047</td>\n","      <td>0.414635</td>\n","      <td>EEG_Test0_1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>4231.008787</td>\n","      <td>44.189663</td>\n","      <td>1952.726344</td>\n","      <td>4229.743652</td>\n","      <td>3387.692139</td>\n","      <td>5505.127930</td>\n","      <td>1952.726344</td>\n","      <td>0.269354</td>\n","      <td>4.519996</td>\n","      <td>...</td>\n","      <td>5405.641113</td>\n","      <td>4047.042955</td>\n","      <td>0.181730</td>\n","      <td>6.655339</td>\n","      <td>1.869903</td>\n","      <td>-1.917447</td>\n","      <td>1.803922</td>\n","      <td>-1.177878</td>\n","      <td>0.421499</td>\n","      <td>EEG_Test0_2</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>4235.494381</td>\n","      <td>25.175706</td>\n","      <td>633.816192</td>\n","      <td>4233.846191</td>\n","      <td>3968.205078</td>\n","      <td>4438.974121</td>\n","      <td>633.816192</td>\n","      <td>0.379098</td>\n","      <td>3.379011</td>\n","      <td>...</td>\n","      <td>4456.922852</td>\n","      <td>788.581256</td>\n","      <td>0.362081</td>\n","      <td>3.528739</td>\n","      <td>1.719312</td>\n","      <td>-1.716449</td>\n","      <td>1.651069</td>\n","      <td>-1.060818</td>\n","      <td>0.406884</td>\n","      <td>EEG_Test0_3</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>4237.481215</td>\n","      <td>86.477155</td>\n","      <td>7478.298389</td>\n","      <td>4236.922852</td>\n","      <td>3529.743408</td>\n","      <td>5739.486816</td>\n","      <td>7478.298389</td>\n","      <td>0.111843</td>\n","      <td>11.086097</td>\n","      <td>...</td>\n","      <td>7725.640625</td>\n","      <td>30770.363380</td>\n","      <td>0.065568</td>\n","      <td>16.047249</td>\n","      <td>2.014694</td>\n","      <td>-1.962541</td>\n","      <td>1.826205</td>\n","      <td>-1.251982</td>\n","      <td>0.373620</td>\n","      <td>EEG_Test0_4</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>4233.419821</td>\n","      <td>34.626376</td>\n","      <td>1198.985906</td>\n","      <td>4230.769043</td>\n","      <td>3809.230713</td>\n","      <td>4543.589844</td>\n","      <td>1198.985906</td>\n","      <td>0.264964</td>\n","      <td>4.459335</td>\n","      <td>...</td>\n","      <td>5711.794922</td>\n","      <td>9459.787110</td>\n","      <td>0.097349</td>\n","      <td>11.212047</td>\n","      <td>1.916121</td>\n","      <td>-1.784461</td>\n","      <td>1.639423</td>\n","      <td>-1.070856</td>\n","      <td>0.299771</td>\n","      <td>EEG_Test0_5</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>211</th>\n","      <td>211</td>\n","      <td>4239.671983</td>\n","      <td>97.882280</td>\n","      <td>9580.940701</td>\n","      <td>4237.948730</td>\n","      <td>759.487183</td>\n","      <td>4835.384277</td>\n","      <td>9580.940701</td>\n","      <td>0.106721</td>\n","      <td>10.789804</td>\n","      <td>...</td>\n","      <td>4534.358887</td>\n","      <td>1341.930166</td>\n","      <td>0.288382</td>\n","      <td>4.671318</td>\n","      <td>1.619370</td>\n","      <td>-1.575834</td>\n","      <td>1.591902</td>\n","      <td>-1.013965</td>\n","      <td>0.378527</td>\n","      <td>EEG_Test26_4</td>\n","    </tr>\n","    <tr>\n","      <th>212</th>\n","      <td>212</td>\n","      <td>4229.912101</td>\n","      <td>50.426474</td>\n","      <td>2542.829266</td>\n","      <td>4228.205078</td>\n","      <td>3890.256348</td>\n","      <td>4543.076660</td>\n","      <td>2542.829266</td>\n","      <td>0.105597</td>\n","      <td>11.185909</td>\n","      <td>...</td>\n","      <td>4649.230469</td>\n","      <td>2125.336360</td>\n","      <td>0.194158</td>\n","      <td>6.114867</td>\n","      <td>1.799081</td>\n","      <td>-1.684543</td>\n","      <td>1.536058</td>\n","      <td>-0.908229</td>\n","      <td>0.257632</td>\n","      <td>EEG_Test26_5</td>\n","    </tr>\n","    <tr>\n","      <th>213</th>\n","      <td>213</td>\n","      <td>4234.076193</td>\n","      <td>32.293637</td>\n","      <td>1042.878960</td>\n","      <td>4234.871582</td>\n","      <td>4091.281982</td>\n","      <td>4401.025391</td>\n","      <td>1042.878960</td>\n","      <td>0.171739</td>\n","      <td>7.219231</td>\n","      <td>...</td>\n","      <td>5397.948730</td>\n","      <td>4823.841089</td>\n","      <td>0.127178</td>\n","      <td>9.549253</td>\n","      <td>1.850852</td>\n","      <td>-1.822298</td>\n","      <td>1.738571</td>\n","      <td>-1.141967</td>\n","      <td>0.374842</td>\n","      <td>EEG_Test26_6</td>\n","    </tr>\n","    <tr>\n","      <th>214</th>\n","      <td>214</td>\n","      <td>4236.514296</td>\n","      <td>21.179939</td>\n","      <td>448.589826</td>\n","      <td>4236.410156</td>\n","      <td>4070.769043</td>\n","      <td>4437.435547</td>\n","      <td>448.589826</td>\n","      <td>0.276163</td>\n","      <td>4.529806</td>\n","      <td>...</td>\n","      <td>4794.358887</td>\n","      <td>1804.680486</td>\n","      <td>0.212828</td>\n","      <td>5.879350</td>\n","      <td>1.683692</td>\n","      <td>-1.604122</td>\n","      <td>1.484709</td>\n","      <td>-0.874587</td>\n","      <td>0.310306</td>\n","      <td>EEG_Test26_7</td>\n","    </tr>\n","    <tr>\n","      <th>215</th>\n","      <td>215</td>\n","      <td>4237.631749</td>\n","      <td>19.933718</td>\n","      <td>397.353096</td>\n","      <td>4237.436035</td>\n","      <td>4154.871582</td>\n","      <td>4365.641113</td>\n","      <td>397.353096</td>\n","      <td>0.257500</td>\n","      <td>4.828735</td>\n","      <td>...</td>\n","      <td>4411.281738</td>\n","      <td>778.759752</td>\n","      <td>0.278193</td>\n","      <td>4.402478</td>\n","      <td>1.824404</td>\n","      <td>-1.814688</td>\n","      <td>1.714828</td>\n","      <td>-1.095232</td>\n","      <td>0.370687</td>\n","      <td>EEG_Test26_8</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>200 rows × 198 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-86f32a47-d12d-4933-a43b-a28a28245387')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-86f32a47-d12d-4933-a43b-a28a28245387 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-86f32a47-d12d-4933-a43b-a28a28245387');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-512ba879-2451-45f7-8e4b-3be2ab8fc8d6\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-512ba879-2451-45f7-8e4b-3be2ab8fc8d6')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-512ba879-2451-45f7-8e4b-3be2ab8fc8d6 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_a7364f3d-f064-4ac3-b7ea-88ab02fae727\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df_time_filtered')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_a7364f3d-f064-4ac3-b7ea-88ab02fae727 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df_time_filtered');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_time_filtered"}},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["metadata=pd.read_excel(\"/content/drive/MyDrive/JHU/MLMA/MLMA Project/BS-HMS-Dataset/Emotiv-based-Data/Demographic Details of Participants.xlsx\")\n","metadata.columns=[\n","    \"User ID\", \"Age\", \"Gender\", \"Dominant Hand\", \"Date / Time\",\n","    \"Video ID 1\", \"Video ID 2\", \"Date / Time\", \"Video ID 3\", \"Video ID 4\"]\n","metadata.head()"],"metadata":{"id":"1KBh-AYiq5J6","colab":{"base_uri":"https://localhost:8080/","height":0},"executionInfo":{"status":"ok","timestamp":1713879623914,"user_tz":240,"elapsed":35,"user":{"displayName":"Wang","userId":"06822780026042244845"}},"outputId":"b17b3366-cd47-482d-eeaa-63ad10f34b09"},"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  User ID  Age  Gender Dominant Hand            Date / Time  Video ID 1  \\\n","0   Test0   27    Male         Right  08/18/2019/2:00:00 PM          15   \n","1   Test1   24    Male         Right  08/18/2019/3:20:00 PM           5   \n","2   test2   30  Female         Right  08/19/2019/4:20:00 PM           8   \n","3   test3   25    Male         Right  08/20/2019/1:28:00 PM          14   \n","4   test4   24    Male          Left  08/21/2019/3:20:00 PM          12   \n","\n","   Video ID 2            Date / Time  Video ID 3  Video ID 4  \n","0           8  08/23/2019/3:40:00 PM         2.0        11.0  \n","1           5  08/22/2019/4:30:00 PM         9.0         5.0  \n","2          11  08/20/2019/4:40:00 PM         5.0         2.0  \n","3           7  08/28/2019/3:15:00 PM        15.0         1.0  \n","4           6  08/30/2019/5:10:00 PM        15.0        19.0  "],"text/html":["\n","  <div id=\"df-00441080-b413-492b-85de-f2ad92100345\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>User ID</th>\n","      <th>Age</th>\n","      <th>Gender</th>\n","      <th>Dominant Hand</th>\n","      <th>Date / Time</th>\n","      <th>Video ID 1</th>\n","      <th>Video ID 2</th>\n","      <th>Date / Time</th>\n","      <th>Video ID 3</th>\n","      <th>Video ID 4</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Test0</td>\n","      <td>27</td>\n","      <td>Male</td>\n","      <td>Right</td>\n","      <td>08/18/2019/2:00:00 PM</td>\n","      <td>15</td>\n","      <td>8</td>\n","      <td>08/23/2019/3:40:00 PM</td>\n","      <td>2.0</td>\n","      <td>11.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Test1</td>\n","      <td>24</td>\n","      <td>Male</td>\n","      <td>Right</td>\n","      <td>08/18/2019/3:20:00 PM</td>\n","      <td>5</td>\n","      <td>5</td>\n","      <td>08/22/2019/4:30:00 PM</td>\n","      <td>9.0</td>\n","      <td>5.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>test2</td>\n","      <td>30</td>\n","      <td>Female</td>\n","      <td>Right</td>\n","      <td>08/19/2019/4:20:00 PM</td>\n","      <td>8</td>\n","      <td>11</td>\n","      <td>08/20/2019/4:40:00 PM</td>\n","      <td>5.0</td>\n","      <td>2.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>test3</td>\n","      <td>25</td>\n","      <td>Male</td>\n","      <td>Right</td>\n","      <td>08/20/2019/1:28:00 PM</td>\n","      <td>14</td>\n","      <td>7</td>\n","      <td>08/28/2019/3:15:00 PM</td>\n","      <td>15.0</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>test4</td>\n","      <td>24</td>\n","      <td>Male</td>\n","      <td>Left</td>\n","      <td>08/21/2019/3:20:00 PM</td>\n","      <td>12</td>\n","      <td>6</td>\n","      <td>08/30/2019/5:10:00 PM</td>\n","      <td>15.0</td>\n","      <td>19.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-00441080-b413-492b-85de-f2ad92100345')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-00441080-b413-492b-85de-f2ad92100345 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-00441080-b413-492b-85de-f2ad92100345');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-678aed35-22fd-493a-b1f3-fd08dcf79092\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-678aed35-22fd-493a-b1f3-fd08dcf79092')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-678aed35-22fd-493a-b1f3-fd08dcf79092 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"metadata","summary":"{\n  \"name\": \"metadata\",\n  \"rows\": 28,\n  \"fields\": [\n    {\n      \"column\": \"User ID\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 28,\n        \"samples\": [\n          \"test9\",\n          \"test25\",\n          \"test8\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3,\n        \"min\": 19,\n        \"max\": 31,\n        \"num_unique_values\": 11,\n        \"samples\": [\n          19,\n          27,\n          23\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Gender\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Female\",\n          \"Male\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Dominant Hand\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Left\",\n          \"Right\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Date / Time\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 28,\n        \"samples\": [\n          \"08/28/2019/2:00:00 PM\",\n          \"09/25/2019/3:35:00 PM\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Video ID 1\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3,\n        \"min\": 1,\n        \"max\": 15,\n        \"num_unique_values\": 13,\n        \"samples\": [\n          3,\n          10\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Video ID 2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5,\n        \"min\": 1,\n        \"max\": 18,\n        \"num_unique_values\": 14,\n        \"samples\": [\n          1,\n          18\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Date / Time\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 25,\n        \"samples\": [\n          \"09.25/2019/4:45:00 PM\",\n          \"09/17/2019/8:05:00 PM\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Video ID 3\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4.648655719667784,\n        \"min\": 1.0,\n        \"max\": 15.0,\n        \"num_unique_values\": 13,\n        \"samples\": [\n          4.0,\n          3.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Video ID 4\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5.882743124314256,\n        \"min\": 1.0,\n        \"max\": 19.0,\n        \"num_unique_values\": 15,\n        \"samples\": [\n          15.0,\n          17.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["metadata_video_id=metadata[[\"User ID\",\"Video ID 1\", \"Video ID 2\", \"Video ID 3\", \"Video ID 4\"]]\n","metadata_video_id=metadata_video_id.dropna()\n","metadata_video_id.head()"],"metadata":{"id":"yYFBOP20rO_M","colab":{"base_uri":"https://localhost:8080/","height":0},"executionInfo":{"status":"ok","timestamp":1713879623914,"user_tz":240,"elapsed":34,"user":{"displayName":"Wang","userId":"06822780026042244845"}},"outputId":"a5054e8d-240e-472c-9956-fe8cedc4686c"},"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  User ID  Video ID 1  Video ID 2  Video ID 3  Video ID 4\n","0   Test0          15           8         2.0        11.0\n","1   Test1           5           5         9.0         5.0\n","2   test2           8          11         5.0         2.0\n","3   test3          14           7        15.0         1.0\n","4   test4          12           6        15.0        19.0"],"text/html":["\n","  <div id=\"df-d720b1e9-b0ac-419b-8100-3d94762fdca3\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>User ID</th>\n","      <th>Video ID 1</th>\n","      <th>Video ID 2</th>\n","      <th>Video ID 3</th>\n","      <th>Video ID 4</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Test0</td>\n","      <td>15</td>\n","      <td>8</td>\n","      <td>2.0</td>\n","      <td>11.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Test1</td>\n","      <td>5</td>\n","      <td>5</td>\n","      <td>9.0</td>\n","      <td>5.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>test2</td>\n","      <td>8</td>\n","      <td>11</td>\n","      <td>5.0</td>\n","      <td>2.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>test3</td>\n","      <td>14</td>\n","      <td>7</td>\n","      <td>15.0</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>test4</td>\n","      <td>12</td>\n","      <td>6</td>\n","      <td>15.0</td>\n","      <td>19.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d720b1e9-b0ac-419b-8100-3d94762fdca3')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-d720b1e9-b0ac-419b-8100-3d94762fdca3 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-d720b1e9-b0ac-419b-8100-3d94762fdca3');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-55601af1-0506-4267-9b75-70af1c958b0b\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-55601af1-0506-4267-9b75-70af1c958b0b')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-55601af1-0506-4267-9b75-70af1c958b0b button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"metadata_video_id","summary":"{\n  \"name\": \"metadata_video_id\",\n  \"rows\": 25,\n  \"fields\": [\n    {\n      \"column\": \"User ID\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 25,\n        \"samples\": [\n          \"test8\",\n          \"test16\",\n          \"Test0\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Video ID 1\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4,\n        \"min\": 1,\n        \"max\": 15,\n        \"num_unique_values\": 12,\n        \"samples\": [\n          13,\n          10,\n          15\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Video ID 2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5,\n        \"min\": 1,\n        \"max\": 18,\n        \"num_unique_values\": 14,\n        \"samples\": [\n          1,\n          18,\n          8\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Video ID 3\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4.648655719667784,\n        \"min\": 1.0,\n        \"max\": 15.0,\n        \"num_unique_values\": 13,\n        \"samples\": [\n          4.0,\n          3.0,\n          2.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Video ID 4\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5.882743124314256,\n        \"min\": 1.0,\n        \"max\": 19.0,\n        \"num_unique_values\": 15,\n        \"samples\": [\n          15.0,\n          17.0,\n          11.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["# add Emotion column\n","metadata_video_id_list = metadata_video_id.drop('User ID', axis=1).values.flatten().tolist()\n","metadata_video_id_list = [int(item) for item in metadata_video_id_list for _ in range(2)] #to int and double the time\n","metadata_video_id_list = [1 if item in [1,2,5,6,13,14,15,16,17,18] else 0 for item in metadata_video_id_list] #map\n","df_time_filtered[\"Emotion\"]=metadata_video_id_list\n","# len(metadata_video_id_list)\n","# metadata_video_id_list"],"metadata":{"id":"V8FlGgG1txp-","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1713879623914,"user_tz":240,"elapsed":33,"user":{"displayName":"Wang","userId":"06822780026042244845"}},"outputId":"ec394ec0-5d9d-47e6-889f-368591339ce5"},"execution_count":8,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-8-00e5abdab353>:5: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  df_time_filtered[\"Emotion\"]=metadata_video_id_list\n"]}]},{"cell_type":"code","source":["# metadata_video_id_list"],"metadata":{"id":"xV9T1cMerrw4","executionInfo":{"status":"ok","timestamp":1713879623914,"user_tz":240,"elapsed":30,"user":{"displayName":"Wang","userId":"06822780026042244845"}}},"execution_count":9,"outputs":[]},{"cell_type":"code","source":["# Drop \"Unnamed: 0\",\"Test\" columns\n","df_time_filtered=df_time_filtered.drop(columns=[\"Unnamed: 0\",\"Test\"])\n","df_time_filtered"],"metadata":{"id":"I_O0ca9vvdgL","colab":{"base_uri":"https://localhost:8080/","height":0},"executionInfo":{"status":"ok","timestamp":1713879623914,"user_tz":240,"elapsed":30,"user":{"displayName":"Wang","userId":"06822780026042244845"}},"outputId":"b171fef1-5d96-4306-da4f-63f7c32827bb"},"execution_count":10,"outputs":[{"output_type":"execute_result","data":{"text/plain":["        AF3_mean    AF3_std      AF3_var   AF3_median      AF3_min  \\\n","0    4233.422687  43.471805  1889.797801  4231.794922  3241.025635   \n","1    4231.008787  44.189663  1952.726344  4229.743652  3387.692139   \n","2    4235.494381  25.175706   633.816192  4233.846191  3968.205078   \n","3    4237.481215  86.477155  7478.298389  4236.922852  3529.743408   \n","4    4233.419821  34.626376  1198.985906  4230.769043  3809.230713   \n","..           ...        ...          ...          ...          ...   \n","211  4239.671983  97.882280  9580.940701  4237.948730   759.487183   \n","212  4229.912101  50.426474  2542.829266  4228.205078  3890.256348   \n","213  4234.076193  32.293637  1042.878960  4234.871582  4091.281982   \n","214  4236.514296  21.179939   448.589826  4236.410156  4070.769043   \n","215  4237.631749  19.933718   397.353096  4237.436035  4154.871582   \n","\n","         AF3_max  AF3_activity  AF3_mobility  AF3_complexity  AF3_ar_coeff_0  \\\n","0    4429.230469   1889.797801      0.212561        5.546035        1.886056   \n","1    5505.127930   1952.726344      0.269354        4.519996        1.854385   \n","2    4438.974121    633.816192      0.379098        3.379011        1.709990   \n","3    5739.486816   7478.298389      0.111843       11.086097        1.798939   \n","4    4543.589844   1198.985906      0.264964        4.459335        1.864686   \n","..           ...           ...           ...             ...             ...   \n","211  4835.384277   9580.940701      0.106721       10.789804        1.931506   \n","212  4543.076660   2542.829266      0.105597       11.185909        1.850163   \n","213  4401.025391   1042.878960      0.171739        7.219231        1.768337   \n","214  4437.435547    448.589826      0.276163        4.529806        1.562347   \n","215  4365.641113    397.353096      0.257500        4.828735        1.731316   \n","\n","     ...      AF4_max  AF4_activity  AF4_mobility  AF4_complexity  \\\n","0    ...  4798.461426   1955.207164      0.201175        5.853881   \n","1    ...  5405.641113   4047.042955      0.181730        6.655339   \n","2    ...  4456.922852    788.581256      0.362081        3.528739   \n","3    ...  7725.640625  30770.363380      0.065568       16.047249   \n","4    ...  5711.794922   9459.787110      0.097349       11.212047   \n","..   ...          ...           ...           ...             ...   \n","211  ...  4534.358887   1341.930166      0.288382        4.671318   \n","212  ...  4649.230469   2125.336360      0.194158        6.114867   \n","213  ...  5397.948730   4823.841089      0.127178        9.549253   \n","214  ...  4794.358887   1804.680486      0.212828        5.879350   \n","215  ...  4411.281738    778.759752      0.278193        4.402478   \n","\n","     AF4_ar_coeff_0  AF4_ar_coeff_1  AF4_ar_coeff_2  AF4_ar_coeff_3  \\\n","0          1.888919       -1.916397        1.774889       -1.162047   \n","1          1.869903       -1.917447        1.803922       -1.177878   \n","2          1.719312       -1.716449        1.651069       -1.060818   \n","3          2.014694       -1.962541        1.826205       -1.251982   \n","4          1.916121       -1.784461        1.639423       -1.070856   \n","..              ...             ...             ...             ...   \n","211        1.619370       -1.575834        1.591902       -1.013965   \n","212        1.799081       -1.684543        1.536058       -0.908229   \n","213        1.850852       -1.822298        1.738571       -1.141967   \n","214        1.683692       -1.604122        1.484709       -0.874587   \n","215        1.824404       -1.814688        1.714828       -1.095232   \n","\n","     AF4_ar_coeff_4  Emotion  \n","0          0.414635        1  \n","1          0.421499        1  \n","2          0.406884        0  \n","3          0.373620        0  \n","4          0.299771        1  \n","..              ...      ...  \n","211        0.378527        1  \n","212        0.257632        0  \n","213        0.374842        0  \n","214        0.310306        1  \n","215        0.370687        1  \n","\n","[200 rows x 197 columns]"],"text/html":["\n","  <div id=\"df-eb1e0553-63c5-4b9a-9a5b-6ede431fe720\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>AF3_mean</th>\n","      <th>AF3_std</th>\n","      <th>AF3_var</th>\n","      <th>AF3_median</th>\n","      <th>AF3_min</th>\n","      <th>AF3_max</th>\n","      <th>AF3_activity</th>\n","      <th>AF3_mobility</th>\n","      <th>AF3_complexity</th>\n","      <th>AF3_ar_coeff_0</th>\n","      <th>...</th>\n","      <th>AF4_max</th>\n","      <th>AF4_activity</th>\n","      <th>AF4_mobility</th>\n","      <th>AF4_complexity</th>\n","      <th>AF4_ar_coeff_0</th>\n","      <th>AF4_ar_coeff_1</th>\n","      <th>AF4_ar_coeff_2</th>\n","      <th>AF4_ar_coeff_3</th>\n","      <th>AF4_ar_coeff_4</th>\n","      <th>Emotion</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>4233.422687</td>\n","      <td>43.471805</td>\n","      <td>1889.797801</td>\n","      <td>4231.794922</td>\n","      <td>3241.025635</td>\n","      <td>4429.230469</td>\n","      <td>1889.797801</td>\n","      <td>0.212561</td>\n","      <td>5.546035</td>\n","      <td>1.886056</td>\n","      <td>...</td>\n","      <td>4798.461426</td>\n","      <td>1955.207164</td>\n","      <td>0.201175</td>\n","      <td>5.853881</td>\n","      <td>1.888919</td>\n","      <td>-1.916397</td>\n","      <td>1.774889</td>\n","      <td>-1.162047</td>\n","      <td>0.414635</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>4231.008787</td>\n","      <td>44.189663</td>\n","      <td>1952.726344</td>\n","      <td>4229.743652</td>\n","      <td>3387.692139</td>\n","      <td>5505.127930</td>\n","      <td>1952.726344</td>\n","      <td>0.269354</td>\n","      <td>4.519996</td>\n","      <td>1.854385</td>\n","      <td>...</td>\n","      <td>5405.641113</td>\n","      <td>4047.042955</td>\n","      <td>0.181730</td>\n","      <td>6.655339</td>\n","      <td>1.869903</td>\n","      <td>-1.917447</td>\n","      <td>1.803922</td>\n","      <td>-1.177878</td>\n","      <td>0.421499</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>4235.494381</td>\n","      <td>25.175706</td>\n","      <td>633.816192</td>\n","      <td>4233.846191</td>\n","      <td>3968.205078</td>\n","      <td>4438.974121</td>\n","      <td>633.816192</td>\n","      <td>0.379098</td>\n","      <td>3.379011</td>\n","      <td>1.709990</td>\n","      <td>...</td>\n","      <td>4456.922852</td>\n","      <td>788.581256</td>\n","      <td>0.362081</td>\n","      <td>3.528739</td>\n","      <td>1.719312</td>\n","      <td>-1.716449</td>\n","      <td>1.651069</td>\n","      <td>-1.060818</td>\n","      <td>0.406884</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4237.481215</td>\n","      <td>86.477155</td>\n","      <td>7478.298389</td>\n","      <td>4236.922852</td>\n","      <td>3529.743408</td>\n","      <td>5739.486816</td>\n","      <td>7478.298389</td>\n","      <td>0.111843</td>\n","      <td>11.086097</td>\n","      <td>1.798939</td>\n","      <td>...</td>\n","      <td>7725.640625</td>\n","      <td>30770.363380</td>\n","      <td>0.065568</td>\n","      <td>16.047249</td>\n","      <td>2.014694</td>\n","      <td>-1.962541</td>\n","      <td>1.826205</td>\n","      <td>-1.251982</td>\n","      <td>0.373620</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4233.419821</td>\n","      <td>34.626376</td>\n","      <td>1198.985906</td>\n","      <td>4230.769043</td>\n","      <td>3809.230713</td>\n","      <td>4543.589844</td>\n","      <td>1198.985906</td>\n","      <td>0.264964</td>\n","      <td>4.459335</td>\n","      <td>1.864686</td>\n","      <td>...</td>\n","      <td>5711.794922</td>\n","      <td>9459.787110</td>\n","      <td>0.097349</td>\n","      <td>11.212047</td>\n","      <td>1.916121</td>\n","      <td>-1.784461</td>\n","      <td>1.639423</td>\n","      <td>-1.070856</td>\n","      <td>0.299771</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>211</th>\n","      <td>4239.671983</td>\n","      <td>97.882280</td>\n","      <td>9580.940701</td>\n","      <td>4237.948730</td>\n","      <td>759.487183</td>\n","      <td>4835.384277</td>\n","      <td>9580.940701</td>\n","      <td>0.106721</td>\n","      <td>10.789804</td>\n","      <td>1.931506</td>\n","      <td>...</td>\n","      <td>4534.358887</td>\n","      <td>1341.930166</td>\n","      <td>0.288382</td>\n","      <td>4.671318</td>\n","      <td>1.619370</td>\n","      <td>-1.575834</td>\n","      <td>1.591902</td>\n","      <td>-1.013965</td>\n","      <td>0.378527</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>212</th>\n","      <td>4229.912101</td>\n","      <td>50.426474</td>\n","      <td>2542.829266</td>\n","      <td>4228.205078</td>\n","      <td>3890.256348</td>\n","      <td>4543.076660</td>\n","      <td>2542.829266</td>\n","      <td>0.105597</td>\n","      <td>11.185909</td>\n","      <td>1.850163</td>\n","      <td>...</td>\n","      <td>4649.230469</td>\n","      <td>2125.336360</td>\n","      <td>0.194158</td>\n","      <td>6.114867</td>\n","      <td>1.799081</td>\n","      <td>-1.684543</td>\n","      <td>1.536058</td>\n","      <td>-0.908229</td>\n","      <td>0.257632</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>213</th>\n","      <td>4234.076193</td>\n","      <td>32.293637</td>\n","      <td>1042.878960</td>\n","      <td>4234.871582</td>\n","      <td>4091.281982</td>\n","      <td>4401.025391</td>\n","      <td>1042.878960</td>\n","      <td>0.171739</td>\n","      <td>7.219231</td>\n","      <td>1.768337</td>\n","      <td>...</td>\n","      <td>5397.948730</td>\n","      <td>4823.841089</td>\n","      <td>0.127178</td>\n","      <td>9.549253</td>\n","      <td>1.850852</td>\n","      <td>-1.822298</td>\n","      <td>1.738571</td>\n","      <td>-1.141967</td>\n","      <td>0.374842</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>214</th>\n","      <td>4236.514296</td>\n","      <td>21.179939</td>\n","      <td>448.589826</td>\n","      <td>4236.410156</td>\n","      <td>4070.769043</td>\n","      <td>4437.435547</td>\n","      <td>448.589826</td>\n","      <td>0.276163</td>\n","      <td>4.529806</td>\n","      <td>1.562347</td>\n","      <td>...</td>\n","      <td>4794.358887</td>\n","      <td>1804.680486</td>\n","      <td>0.212828</td>\n","      <td>5.879350</td>\n","      <td>1.683692</td>\n","      <td>-1.604122</td>\n","      <td>1.484709</td>\n","      <td>-0.874587</td>\n","      <td>0.310306</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>215</th>\n","      <td>4237.631749</td>\n","      <td>19.933718</td>\n","      <td>397.353096</td>\n","      <td>4237.436035</td>\n","      <td>4154.871582</td>\n","      <td>4365.641113</td>\n","      <td>397.353096</td>\n","      <td>0.257500</td>\n","      <td>4.828735</td>\n","      <td>1.731316</td>\n","      <td>...</td>\n","      <td>4411.281738</td>\n","      <td>778.759752</td>\n","      <td>0.278193</td>\n","      <td>4.402478</td>\n","      <td>1.824404</td>\n","      <td>-1.814688</td>\n","      <td>1.714828</td>\n","      <td>-1.095232</td>\n","      <td>0.370687</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>200 rows × 197 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-eb1e0553-63c5-4b9a-9a5b-6ede431fe720')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-eb1e0553-63c5-4b9a-9a5b-6ede431fe720 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-eb1e0553-63c5-4b9a-9a5b-6ede431fe720');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-d56ecc02-fae1-47d0-a657-3b964b76eac7\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d56ecc02-fae1-47d0-a657-3b964b76eac7')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-d56ecc02-fae1-47d0-a657-3b964b76eac7 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_428fd5c9-17dd-4c3c-9f40-9aaea0cb8527\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df_time_filtered')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_428fd5c9-17dd-4c3c-9f40-9aaea0cb8527 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df_time_filtered');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_time_filtered"}},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["df_time_filtered = df_time_filtered.reset_index(drop=True)\n","df_time_filtered"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"EDmZKanVGyxS","executionInfo":{"status":"ok","timestamp":1713879623914,"user_tz":240,"elapsed":24,"user":{"displayName":"Wang","userId":"06822780026042244845"}},"outputId":"250a094a-2fc0-4882-9f5f-d1d73b9dc50e"},"execution_count":11,"outputs":[{"output_type":"execute_result","data":{"text/plain":["        AF3_mean    AF3_std      AF3_var   AF3_median      AF3_min  \\\n","0    4233.422687  43.471805  1889.797801  4231.794922  3241.025635   \n","1    4231.008787  44.189663  1952.726344  4229.743652  3387.692139   \n","2    4235.494381  25.175706   633.816192  4233.846191  3968.205078   \n","3    4237.481215  86.477155  7478.298389  4236.922852  3529.743408   \n","4    4233.419821  34.626376  1198.985906  4230.769043  3809.230713   \n","..           ...        ...          ...          ...          ...   \n","195  4239.671983  97.882280  9580.940701  4237.948730   759.487183   \n","196  4229.912101  50.426474  2542.829266  4228.205078  3890.256348   \n","197  4234.076193  32.293637  1042.878960  4234.871582  4091.281982   \n","198  4236.514296  21.179939   448.589826  4236.410156  4070.769043   \n","199  4237.631749  19.933718   397.353096  4237.436035  4154.871582   \n","\n","         AF3_max  AF3_activity  AF3_mobility  AF3_complexity  AF3_ar_coeff_0  \\\n","0    4429.230469   1889.797801      0.212561        5.546035        1.886056   \n","1    5505.127930   1952.726344      0.269354        4.519996        1.854385   \n","2    4438.974121    633.816192      0.379098        3.379011        1.709990   \n","3    5739.486816   7478.298389      0.111843       11.086097        1.798939   \n","4    4543.589844   1198.985906      0.264964        4.459335        1.864686   \n","..           ...           ...           ...             ...             ...   \n","195  4835.384277   9580.940701      0.106721       10.789804        1.931506   \n","196  4543.076660   2542.829266      0.105597       11.185909        1.850163   \n","197  4401.025391   1042.878960      0.171739        7.219231        1.768337   \n","198  4437.435547    448.589826      0.276163        4.529806        1.562347   \n","199  4365.641113    397.353096      0.257500        4.828735        1.731316   \n","\n","     ...      AF4_max  AF4_activity  AF4_mobility  AF4_complexity  \\\n","0    ...  4798.461426   1955.207164      0.201175        5.853881   \n","1    ...  5405.641113   4047.042955      0.181730        6.655339   \n","2    ...  4456.922852    788.581256      0.362081        3.528739   \n","3    ...  7725.640625  30770.363380      0.065568       16.047249   \n","4    ...  5711.794922   9459.787110      0.097349       11.212047   \n","..   ...          ...           ...           ...             ...   \n","195  ...  4534.358887   1341.930166      0.288382        4.671318   \n","196  ...  4649.230469   2125.336360      0.194158        6.114867   \n","197  ...  5397.948730   4823.841089      0.127178        9.549253   \n","198  ...  4794.358887   1804.680486      0.212828        5.879350   \n","199  ...  4411.281738    778.759752      0.278193        4.402478   \n","\n","     AF4_ar_coeff_0  AF4_ar_coeff_1  AF4_ar_coeff_2  AF4_ar_coeff_3  \\\n","0          1.888919       -1.916397        1.774889       -1.162047   \n","1          1.869903       -1.917447        1.803922       -1.177878   \n","2          1.719312       -1.716449        1.651069       -1.060818   \n","3          2.014694       -1.962541        1.826205       -1.251982   \n","4          1.916121       -1.784461        1.639423       -1.070856   \n","..              ...             ...             ...             ...   \n","195        1.619370       -1.575834        1.591902       -1.013965   \n","196        1.799081       -1.684543        1.536058       -0.908229   \n","197        1.850852       -1.822298        1.738571       -1.141967   \n","198        1.683692       -1.604122        1.484709       -0.874587   \n","199        1.824404       -1.814688        1.714828       -1.095232   \n","\n","     AF4_ar_coeff_4  Emotion  \n","0          0.414635        1  \n","1          0.421499        1  \n","2          0.406884        0  \n","3          0.373620        0  \n","4          0.299771        1  \n","..              ...      ...  \n","195        0.378527        1  \n","196        0.257632        0  \n","197        0.374842        0  \n","198        0.310306        1  \n","199        0.370687        1  \n","\n","[200 rows x 197 columns]"],"text/html":["\n","  <div id=\"df-4542b659-ce70-4f03-a64c-aa44ffd63732\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>AF3_mean</th>\n","      <th>AF3_std</th>\n","      <th>AF3_var</th>\n","      <th>AF3_median</th>\n","      <th>AF3_min</th>\n","      <th>AF3_max</th>\n","      <th>AF3_activity</th>\n","      <th>AF3_mobility</th>\n","      <th>AF3_complexity</th>\n","      <th>AF3_ar_coeff_0</th>\n","      <th>...</th>\n","      <th>AF4_max</th>\n","      <th>AF4_activity</th>\n","      <th>AF4_mobility</th>\n","      <th>AF4_complexity</th>\n","      <th>AF4_ar_coeff_0</th>\n","      <th>AF4_ar_coeff_1</th>\n","      <th>AF4_ar_coeff_2</th>\n","      <th>AF4_ar_coeff_3</th>\n","      <th>AF4_ar_coeff_4</th>\n","      <th>Emotion</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>4233.422687</td>\n","      <td>43.471805</td>\n","      <td>1889.797801</td>\n","      <td>4231.794922</td>\n","      <td>3241.025635</td>\n","      <td>4429.230469</td>\n","      <td>1889.797801</td>\n","      <td>0.212561</td>\n","      <td>5.546035</td>\n","      <td>1.886056</td>\n","      <td>...</td>\n","      <td>4798.461426</td>\n","      <td>1955.207164</td>\n","      <td>0.201175</td>\n","      <td>5.853881</td>\n","      <td>1.888919</td>\n","      <td>-1.916397</td>\n","      <td>1.774889</td>\n","      <td>-1.162047</td>\n","      <td>0.414635</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>4231.008787</td>\n","      <td>44.189663</td>\n","      <td>1952.726344</td>\n","      <td>4229.743652</td>\n","      <td>3387.692139</td>\n","      <td>5505.127930</td>\n","      <td>1952.726344</td>\n","      <td>0.269354</td>\n","      <td>4.519996</td>\n","      <td>1.854385</td>\n","      <td>...</td>\n","      <td>5405.641113</td>\n","      <td>4047.042955</td>\n","      <td>0.181730</td>\n","      <td>6.655339</td>\n","      <td>1.869903</td>\n","      <td>-1.917447</td>\n","      <td>1.803922</td>\n","      <td>-1.177878</td>\n","      <td>0.421499</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>4235.494381</td>\n","      <td>25.175706</td>\n","      <td>633.816192</td>\n","      <td>4233.846191</td>\n","      <td>3968.205078</td>\n","      <td>4438.974121</td>\n","      <td>633.816192</td>\n","      <td>0.379098</td>\n","      <td>3.379011</td>\n","      <td>1.709990</td>\n","      <td>...</td>\n","      <td>4456.922852</td>\n","      <td>788.581256</td>\n","      <td>0.362081</td>\n","      <td>3.528739</td>\n","      <td>1.719312</td>\n","      <td>-1.716449</td>\n","      <td>1.651069</td>\n","      <td>-1.060818</td>\n","      <td>0.406884</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4237.481215</td>\n","      <td>86.477155</td>\n","      <td>7478.298389</td>\n","      <td>4236.922852</td>\n","      <td>3529.743408</td>\n","      <td>5739.486816</td>\n","      <td>7478.298389</td>\n","      <td>0.111843</td>\n","      <td>11.086097</td>\n","      <td>1.798939</td>\n","      <td>...</td>\n","      <td>7725.640625</td>\n","      <td>30770.363380</td>\n","      <td>0.065568</td>\n","      <td>16.047249</td>\n","      <td>2.014694</td>\n","      <td>-1.962541</td>\n","      <td>1.826205</td>\n","      <td>-1.251982</td>\n","      <td>0.373620</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4233.419821</td>\n","      <td>34.626376</td>\n","      <td>1198.985906</td>\n","      <td>4230.769043</td>\n","      <td>3809.230713</td>\n","      <td>4543.589844</td>\n","      <td>1198.985906</td>\n","      <td>0.264964</td>\n","      <td>4.459335</td>\n","      <td>1.864686</td>\n","      <td>...</td>\n","      <td>5711.794922</td>\n","      <td>9459.787110</td>\n","      <td>0.097349</td>\n","      <td>11.212047</td>\n","      <td>1.916121</td>\n","      <td>-1.784461</td>\n","      <td>1.639423</td>\n","      <td>-1.070856</td>\n","      <td>0.299771</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>195</th>\n","      <td>4239.671983</td>\n","      <td>97.882280</td>\n","      <td>9580.940701</td>\n","      <td>4237.948730</td>\n","      <td>759.487183</td>\n","      <td>4835.384277</td>\n","      <td>9580.940701</td>\n","      <td>0.106721</td>\n","      <td>10.789804</td>\n","      <td>1.931506</td>\n","      <td>...</td>\n","      <td>4534.358887</td>\n","      <td>1341.930166</td>\n","      <td>0.288382</td>\n","      <td>4.671318</td>\n","      <td>1.619370</td>\n","      <td>-1.575834</td>\n","      <td>1.591902</td>\n","      <td>-1.013965</td>\n","      <td>0.378527</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>196</th>\n","      <td>4229.912101</td>\n","      <td>50.426474</td>\n","      <td>2542.829266</td>\n","      <td>4228.205078</td>\n","      <td>3890.256348</td>\n","      <td>4543.076660</td>\n","      <td>2542.829266</td>\n","      <td>0.105597</td>\n","      <td>11.185909</td>\n","      <td>1.850163</td>\n","      <td>...</td>\n","      <td>4649.230469</td>\n","      <td>2125.336360</td>\n","      <td>0.194158</td>\n","      <td>6.114867</td>\n","      <td>1.799081</td>\n","      <td>-1.684543</td>\n","      <td>1.536058</td>\n","      <td>-0.908229</td>\n","      <td>0.257632</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>197</th>\n","      <td>4234.076193</td>\n","      <td>32.293637</td>\n","      <td>1042.878960</td>\n","      <td>4234.871582</td>\n","      <td>4091.281982</td>\n","      <td>4401.025391</td>\n","      <td>1042.878960</td>\n","      <td>0.171739</td>\n","      <td>7.219231</td>\n","      <td>1.768337</td>\n","      <td>...</td>\n","      <td>5397.948730</td>\n","      <td>4823.841089</td>\n","      <td>0.127178</td>\n","      <td>9.549253</td>\n","      <td>1.850852</td>\n","      <td>-1.822298</td>\n","      <td>1.738571</td>\n","      <td>-1.141967</td>\n","      <td>0.374842</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>198</th>\n","      <td>4236.514296</td>\n","      <td>21.179939</td>\n","      <td>448.589826</td>\n","      <td>4236.410156</td>\n","      <td>4070.769043</td>\n","      <td>4437.435547</td>\n","      <td>448.589826</td>\n","      <td>0.276163</td>\n","      <td>4.529806</td>\n","      <td>1.562347</td>\n","      <td>...</td>\n","      <td>4794.358887</td>\n","      <td>1804.680486</td>\n","      <td>0.212828</td>\n","      <td>5.879350</td>\n","      <td>1.683692</td>\n","      <td>-1.604122</td>\n","      <td>1.484709</td>\n","      <td>-0.874587</td>\n","      <td>0.310306</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>199</th>\n","      <td>4237.631749</td>\n","      <td>19.933718</td>\n","      <td>397.353096</td>\n","      <td>4237.436035</td>\n","      <td>4154.871582</td>\n","      <td>4365.641113</td>\n","      <td>397.353096</td>\n","      <td>0.257500</td>\n","      <td>4.828735</td>\n","      <td>1.731316</td>\n","      <td>...</td>\n","      <td>4411.281738</td>\n","      <td>778.759752</td>\n","      <td>0.278193</td>\n","      <td>4.402478</td>\n","      <td>1.824404</td>\n","      <td>-1.814688</td>\n","      <td>1.714828</td>\n","      <td>-1.095232</td>\n","      <td>0.370687</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>200 rows × 197 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4542b659-ce70-4f03-a64c-aa44ffd63732')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-4542b659-ce70-4f03-a64c-aa44ffd63732 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-4542b659-ce70-4f03-a64c-aa44ffd63732');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-dbc85916-dbcc-4cda-8cbc-460c8f4c6068\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-dbc85916-dbcc-4cda-8cbc-460c8f4c6068')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-dbc85916-dbcc-4cda-8cbc-460c8f4c6068 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_fd77ec1c-3a57-43d8-bbab-61ed621985a5\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df_time_filtered')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_fd77ec1c-3a57-43d8-bbab-61ed621985a5 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df_time_filtered');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_time_filtered"}},"metadata":{},"execution_count":11}]},{"cell_type":"code","source":["df_rhm_acc = pd.read_csv(\"/content/drive/MyDrive/JHU/MLMA/MLMA Project/BS-HMS-Dataset/Emotiv_Right_acc_extracted.csv\")\n","df_rhm_gyro= pd.read_csv(\"/content/drive/MyDrive//JHU/MLMA/MLMA Project/BS-HMS-Dataset/Emotiv_Right_gyro_extracted.csv\")"],"metadata":{"id":"uwyca42bFGj5","executionInfo":{"status":"ok","timestamp":1713879623915,"user_tz":240,"elapsed":24,"user":{"displayName":"Wang","userId":"06822780026042244845"}}},"execution_count":12,"outputs":[]},{"cell_type":"code","source":["# Concatenate two df toghther\n","def add_suffix_to_feature_names(df, suffix):\n","    new_column_names = {col: col + suffix for col in df.columns}\n","    return df.rename(columns=new_column_names)\n","\n","df_rhm_acc = add_suffix_to_feature_names(df_rhm_acc, '_acc')\n","df_rhm_gyro = add_suffix_to_feature_names(df_rhm_gyro, '_gyro')\n","\n","# drop filename\n","df_rhm_acc=df_rhm_acc.drop(columns=[\"Filename_Part_acc\"])\n","df_rhm_gyro=df_rhm_gyro.drop(columns=[\"Filename_Part_gyro\"])\n","\n","# concate two hm data\n","df_rhm = pd.concat([df_rhm_acc, df_rhm_gyro], axis = 1)\n"],"metadata":{"id":"mrB1DGQKFMBn","executionInfo":{"status":"ok","timestamp":1713879623915,"user_tz":240,"elapsed":24,"user":{"displayName":"Wang","userId":"06822780026042244845"}}},"execution_count":13,"outputs":[]},{"cell_type":"code","source":["df_rhm = df_rhm.reset_index(drop=True)\n","df_rhm"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"rBz6_NMDHBXt","executionInfo":{"status":"ok","timestamp":1713879623915,"user_tz":240,"elapsed":24,"user":{"displayName":"Wang","userId":"06822780026042244845"}},"outputId":"a0ee4046-488c-46b0-9d3f-8405dc3f3547"},"execution_count":14,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     X_mean_acc  X_std_acc  X_var_acc  X_median_acc  X_min_acc  X_max_acc  \\\n","0     -6.846076   1.127397   1.271024     -7.291028  -9.866585   3.020774   \n","1      2.378614   0.445303   0.198294      2.427151 -15.984729  19.594337   \n","2     -4.600323   1.208001   1.459265     -4.332489  -8.411251   2.436726   \n","3      2.307475   0.842399   0.709637      2.494173  -5.548458   6.352721   \n","4     -0.876954   0.603183   0.363829     -1.010116  -5.711226   2.800559   \n","..          ...        ...        ...           ...        ...        ...   \n","195   -1.026608   0.673073   0.453027     -0.895221  -7.166558   4.294190   \n","196    0.855077   0.705780   0.498126      0.684581  -2.963326  16.674097   \n","197    1.761846   0.449221   0.201799      1.766506  -3.710142   6.534637   \n","198   -0.530926   1.917458   3.676647     -0.694156 -11.762347  10.220843   \n","199    0.666244   0.960139   0.921866      1.144160  -5.213348   5.682502   \n","\n","     X_activity_acc  X_mobility_acc  X_complexity_acc  X_ar_coeff_0_acc  ...  \\\n","0          1.271024        0.033221         41.360217          1.039849  ...   \n","1          0.198294        0.283186          3.950224          1.344210  ...   \n","2          1.459265        0.029166         48.092388          1.015230  ...   \n","3          0.709637        0.108667         10.930011          1.282584  ...   \n","4          0.363829        0.072352         16.832129          1.235047  ...   \n","..              ...             ...               ...               ...  ...   \n","195        0.453027        0.190876          6.090877          1.327769  ...   \n","196        0.498126        0.117301         10.614548          1.285143  ...   \n","197        0.201799        0.241573          5.045190          1.340544  ...   \n","198        3.676647        0.049494         22.914340          1.349513  ...   \n","199        0.921866        0.092335         12.092435          1.449848  ...   \n","\n","     Z_ACF1_gyro  Z_ACF2_gyro  Z_Grad1mean_gyro  Z_Grad1std_gyro  \\\n","0      -0.282172     0.049478      1.317114e-06         0.006302   \n","1       0.006878    -0.021570     -3.791419e-07         0.018311   \n","2       0.027719    -0.066030      2.087315e-07         0.003741   \n","3       0.021337    -0.182476      5.823871e-08         0.011482   \n","4       0.000851     0.008886     -2.100619e-06         0.006216   \n","..           ...          ...               ...              ...   \n","195    -0.101010     0.004093      2.519509e-06         0.021359   \n","196    -0.012828    -0.038737     -9.003508e-08         0.011652   \n","197    -0.001342     0.045436      3.601153e-07         0.012731   \n","198    -0.031774    -0.098687      4.529143e-07         0.015796   \n","199     0.037645    -0.022263     -1.425811e-06         0.014292   \n","\n","     Z_Grad1var_gyro  Z_Grad2mean_gyro  Z_Grad2std_gyro  Z_Grad2var_gyro  \\\n","0           0.000040     -2.942488e-07         0.002580         0.000007   \n","1           0.000335      9.977444e-09         0.008738         0.000076   \n","2           0.000014      2.087315e-07         0.001756         0.000003   \n","3           0.000132      1.164774e-07         0.005286         0.000028   \n","4           0.000039      5.410685e-07         0.002682         0.000007   \n","..               ...               ...              ...              ...   \n","195         0.000456     -1.619685e-07         0.009887         0.000098   \n","196         0.000136     -4.951929e-07         0.005225         0.000027   \n","197         0.000162      4.801537e-07         0.006654         0.000044   \n","198         0.000250     -1.171670e-06         0.007516         0.000056   \n","199         0.000204      3.830537e-07         0.007510         0.000056   \n","\n","     Z_SEntropy_gyro  All_SMV_gyro  \n","0           3.901216      0.067171  \n","1           5.299957      0.135881  \n","2           3.767423      0.039921  \n","3           5.899198      0.157682  \n","4           2.802608      0.047825  \n","..               ...           ...  \n","195         6.740643      0.214154  \n","196         3.689207      0.062542  \n","197         6.276326      0.194280  \n","198         5.348136      0.188279  \n","199         6.435570      0.218638  \n","\n","[200 rows x 152 columns]"],"text/html":["\n","  <div id=\"df-52f4f7d7-aa49-4118-b497-8e33f4791f0a\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>X_mean_acc</th>\n","      <th>X_std_acc</th>\n","      <th>X_var_acc</th>\n","      <th>X_median_acc</th>\n","      <th>X_min_acc</th>\n","      <th>X_max_acc</th>\n","      <th>X_activity_acc</th>\n","      <th>X_mobility_acc</th>\n","      <th>X_complexity_acc</th>\n","      <th>X_ar_coeff_0_acc</th>\n","      <th>...</th>\n","      <th>Z_ACF1_gyro</th>\n","      <th>Z_ACF2_gyro</th>\n","      <th>Z_Grad1mean_gyro</th>\n","      <th>Z_Grad1std_gyro</th>\n","      <th>Z_Grad1var_gyro</th>\n","      <th>Z_Grad2mean_gyro</th>\n","      <th>Z_Grad2std_gyro</th>\n","      <th>Z_Grad2var_gyro</th>\n","      <th>Z_SEntropy_gyro</th>\n","      <th>All_SMV_gyro</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>-6.846076</td>\n","      <td>1.127397</td>\n","      <td>1.271024</td>\n","      <td>-7.291028</td>\n","      <td>-9.866585</td>\n","      <td>3.020774</td>\n","      <td>1.271024</td>\n","      <td>0.033221</td>\n","      <td>41.360217</td>\n","      <td>1.039849</td>\n","      <td>...</td>\n","      <td>-0.282172</td>\n","      <td>0.049478</td>\n","      <td>1.317114e-06</td>\n","      <td>0.006302</td>\n","      <td>0.000040</td>\n","      <td>-2.942488e-07</td>\n","      <td>0.002580</td>\n","      <td>0.000007</td>\n","      <td>3.901216</td>\n","      <td>0.067171</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2.378614</td>\n","      <td>0.445303</td>\n","      <td>0.198294</td>\n","      <td>2.427151</td>\n","      <td>-15.984729</td>\n","      <td>19.594337</td>\n","      <td>0.198294</td>\n","      <td>0.283186</td>\n","      <td>3.950224</td>\n","      <td>1.344210</td>\n","      <td>...</td>\n","      <td>0.006878</td>\n","      <td>-0.021570</td>\n","      <td>-3.791419e-07</td>\n","      <td>0.018311</td>\n","      <td>0.000335</td>\n","      <td>9.977444e-09</td>\n","      <td>0.008738</td>\n","      <td>0.000076</td>\n","      <td>5.299957</td>\n","      <td>0.135881</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>-4.600323</td>\n","      <td>1.208001</td>\n","      <td>1.459265</td>\n","      <td>-4.332489</td>\n","      <td>-8.411251</td>\n","      <td>2.436726</td>\n","      <td>1.459265</td>\n","      <td>0.029166</td>\n","      <td>48.092388</td>\n","      <td>1.015230</td>\n","      <td>...</td>\n","      <td>0.027719</td>\n","      <td>-0.066030</td>\n","      <td>2.087315e-07</td>\n","      <td>0.003741</td>\n","      <td>0.000014</td>\n","      <td>2.087315e-07</td>\n","      <td>0.001756</td>\n","      <td>0.000003</td>\n","      <td>3.767423</td>\n","      <td>0.039921</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2.307475</td>\n","      <td>0.842399</td>\n","      <td>0.709637</td>\n","      <td>2.494173</td>\n","      <td>-5.548458</td>\n","      <td>6.352721</td>\n","      <td>0.709637</td>\n","      <td>0.108667</td>\n","      <td>10.930011</td>\n","      <td>1.282584</td>\n","      <td>...</td>\n","      <td>0.021337</td>\n","      <td>-0.182476</td>\n","      <td>5.823871e-08</td>\n","      <td>0.011482</td>\n","      <td>0.000132</td>\n","      <td>1.164774e-07</td>\n","      <td>0.005286</td>\n","      <td>0.000028</td>\n","      <td>5.899198</td>\n","      <td>0.157682</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>-0.876954</td>\n","      <td>0.603183</td>\n","      <td>0.363829</td>\n","      <td>-1.010116</td>\n","      <td>-5.711226</td>\n","      <td>2.800559</td>\n","      <td>0.363829</td>\n","      <td>0.072352</td>\n","      <td>16.832129</td>\n","      <td>1.235047</td>\n","      <td>...</td>\n","      <td>0.000851</td>\n","      <td>0.008886</td>\n","      <td>-2.100619e-06</td>\n","      <td>0.006216</td>\n","      <td>0.000039</td>\n","      <td>5.410685e-07</td>\n","      <td>0.002682</td>\n","      <td>0.000007</td>\n","      <td>2.802608</td>\n","      <td>0.047825</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>195</th>\n","      <td>-1.026608</td>\n","      <td>0.673073</td>\n","      <td>0.453027</td>\n","      <td>-0.895221</td>\n","      <td>-7.166558</td>\n","      <td>4.294190</td>\n","      <td>0.453027</td>\n","      <td>0.190876</td>\n","      <td>6.090877</td>\n","      <td>1.327769</td>\n","      <td>...</td>\n","      <td>-0.101010</td>\n","      <td>0.004093</td>\n","      <td>2.519509e-06</td>\n","      <td>0.021359</td>\n","      <td>0.000456</td>\n","      <td>-1.619685e-07</td>\n","      <td>0.009887</td>\n","      <td>0.000098</td>\n","      <td>6.740643</td>\n","      <td>0.214154</td>\n","    </tr>\n","    <tr>\n","      <th>196</th>\n","      <td>0.855077</td>\n","      <td>0.705780</td>\n","      <td>0.498126</td>\n","      <td>0.684581</td>\n","      <td>-2.963326</td>\n","      <td>16.674097</td>\n","      <td>0.498126</td>\n","      <td>0.117301</td>\n","      <td>10.614548</td>\n","      <td>1.285143</td>\n","      <td>...</td>\n","      <td>-0.012828</td>\n","      <td>-0.038737</td>\n","      <td>-9.003508e-08</td>\n","      <td>0.011652</td>\n","      <td>0.000136</td>\n","      <td>-4.951929e-07</td>\n","      <td>0.005225</td>\n","      <td>0.000027</td>\n","      <td>3.689207</td>\n","      <td>0.062542</td>\n","    </tr>\n","    <tr>\n","      <th>197</th>\n","      <td>1.761846</td>\n","      <td>0.449221</td>\n","      <td>0.201799</td>\n","      <td>1.766506</td>\n","      <td>-3.710142</td>\n","      <td>6.534637</td>\n","      <td>0.201799</td>\n","      <td>0.241573</td>\n","      <td>5.045190</td>\n","      <td>1.340544</td>\n","      <td>...</td>\n","      <td>-0.001342</td>\n","      <td>0.045436</td>\n","      <td>3.601153e-07</td>\n","      <td>0.012731</td>\n","      <td>0.000162</td>\n","      <td>4.801537e-07</td>\n","      <td>0.006654</td>\n","      <td>0.000044</td>\n","      <td>6.276326</td>\n","      <td>0.194280</td>\n","    </tr>\n","    <tr>\n","      <th>198</th>\n","      <td>-0.530926</td>\n","      <td>1.917458</td>\n","      <td>3.676647</td>\n","      <td>-0.694156</td>\n","      <td>-11.762347</td>\n","      <td>10.220843</td>\n","      <td>3.676647</td>\n","      <td>0.049494</td>\n","      <td>22.914340</td>\n","      <td>1.349513</td>\n","      <td>...</td>\n","      <td>-0.031774</td>\n","      <td>-0.098687</td>\n","      <td>4.529143e-07</td>\n","      <td>0.015796</td>\n","      <td>0.000250</td>\n","      <td>-1.171670e-06</td>\n","      <td>0.007516</td>\n","      <td>0.000056</td>\n","      <td>5.348136</td>\n","      <td>0.188279</td>\n","    </tr>\n","    <tr>\n","      <th>199</th>\n","      <td>0.666244</td>\n","      <td>0.960139</td>\n","      <td>0.921866</td>\n","      <td>1.144160</td>\n","      <td>-5.213348</td>\n","      <td>5.682502</td>\n","      <td>0.921866</td>\n","      <td>0.092335</td>\n","      <td>12.092435</td>\n","      <td>1.449848</td>\n","      <td>...</td>\n","      <td>0.037645</td>\n","      <td>-0.022263</td>\n","      <td>-1.425811e-06</td>\n","      <td>0.014292</td>\n","      <td>0.000204</td>\n","      <td>3.830537e-07</td>\n","      <td>0.007510</td>\n","      <td>0.000056</td>\n","      <td>6.435570</td>\n","      <td>0.218638</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>200 rows × 152 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-52f4f7d7-aa49-4118-b497-8e33f4791f0a')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-52f4f7d7-aa49-4118-b497-8e33f4791f0a button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-52f4f7d7-aa49-4118-b497-8e33f4791f0a');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-e9e6e336-321c-406f-8437-1765ca932cf0\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e9e6e336-321c-406f-8437-1765ca932cf0')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-e9e6e336-321c-406f-8437-1765ca932cf0 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_008c1990-2bb1-4121-9c19-3b85552c2795\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df_rhm')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_008c1990-2bb1-4121-9c19-3b85552c2795 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df_rhm');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_rhm"}},"metadata":{},"execution_count":14}]},{"cell_type":"code","source":["# concate eeg and hm data\n","df_time_filtered=pd.concat([df_rhm, df_time_filtered],axis=1)"],"metadata":{"id":"dnEkoPCdFcZR","executionInfo":{"status":"ok","timestamp":1713879623915,"user_tz":240,"elapsed":23,"user":{"displayName":"Wang","userId":"06822780026042244845"}}},"execution_count":15,"outputs":[]},{"cell_type":"markdown","source":["## Train Test Split Method"],"metadata":{"id":"KhNaOZ0ox9TQ"}},{"cell_type":"code","source":["folder = [num for num in range(1, 26) for _ in range(8)]\n","df_time_filtered[\"Folder\"]=folder\n","df_time_filtered"],"metadata":{"id":"StPVCDaMw_uX","colab":{"base_uri":"https://localhost:8080/","height":443},"executionInfo":{"status":"ok","timestamp":1713879623915,"user_tz":240,"elapsed":23,"user":{"displayName":"Wang","userId":"06822780026042244845"}},"outputId":"c968368b-42b8-408a-c6ae-6ddb1c5ccbee"},"execution_count":16,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     X_mean_acc  X_std_acc  X_var_acc  X_median_acc  X_min_acc  X_max_acc  \\\n","0     -6.846076   1.127397   1.271024     -7.291028  -9.866585   3.020774   \n","1      2.378614   0.445303   0.198294      2.427151 -15.984729  19.594337   \n","2     -4.600323   1.208001   1.459265     -4.332489  -8.411251   2.436726   \n","3      2.307475   0.842399   0.709637      2.494173  -5.548458   6.352721   \n","4     -0.876954   0.603183   0.363829     -1.010116  -5.711226   2.800559   \n","..          ...        ...        ...           ...        ...        ...   \n","195   -1.026608   0.673073   0.453027     -0.895221  -7.166558   4.294190   \n","196    0.855077   0.705780   0.498126      0.684581  -2.963326  16.674097   \n","197    1.761846   0.449221   0.201799      1.766506  -3.710142   6.534637   \n","198   -0.530926   1.917458   3.676647     -0.694156 -11.762347  10.220843   \n","199    0.666244   0.960139   0.921866      1.144160  -5.213348   5.682502   \n","\n","     X_activity_acc  X_mobility_acc  X_complexity_acc  X_ar_coeff_0_acc  ...  \\\n","0          1.271024        0.033221         41.360217          1.039849  ...   \n","1          0.198294        0.283186          3.950224          1.344210  ...   \n","2          1.459265        0.029166         48.092388          1.015230  ...   \n","3          0.709637        0.108667         10.930011          1.282584  ...   \n","4          0.363829        0.072352         16.832129          1.235047  ...   \n","..              ...             ...               ...               ...  ...   \n","195        0.453027        0.190876          6.090877          1.327769  ...   \n","196        0.498126        0.117301         10.614548          1.285143  ...   \n","197        0.201799        0.241573          5.045190          1.340544  ...   \n","198        3.676647        0.049494         22.914340          1.349513  ...   \n","199        0.921866        0.092335         12.092435          1.449848  ...   \n","\n","     AF4_activity  AF4_mobility  AF4_complexity  AF4_ar_coeff_0  \\\n","0     1955.207164      0.201175        5.853881        1.888919   \n","1     4047.042955      0.181730        6.655339        1.869903   \n","2      788.581256      0.362081        3.528739        1.719312   \n","3    30770.363380      0.065568       16.047249        2.014694   \n","4     9459.787110      0.097349       11.212047        1.916121   \n","..            ...           ...             ...             ...   \n","195   1341.930166      0.288382        4.671318        1.619370   \n","196   2125.336360      0.194158        6.114867        1.799081   \n","197   4823.841089      0.127178        9.549253        1.850852   \n","198   1804.680486      0.212828        5.879350        1.683692   \n","199    778.759752      0.278193        4.402478        1.824404   \n","\n","     AF4_ar_coeff_1  AF4_ar_coeff_2  AF4_ar_coeff_3  AF4_ar_coeff_4  Emotion  \\\n","0         -1.916397        1.774889       -1.162047        0.414635        1   \n","1         -1.917447        1.803922       -1.177878        0.421499        1   \n","2         -1.716449        1.651069       -1.060818        0.406884        0   \n","3         -1.962541        1.826205       -1.251982        0.373620        0   \n","4         -1.784461        1.639423       -1.070856        0.299771        1   \n","..              ...             ...             ...             ...      ...   \n","195       -1.575834        1.591902       -1.013965        0.378527        1   \n","196       -1.684543        1.536058       -0.908229        0.257632        0   \n","197       -1.822298        1.738571       -1.141967        0.374842        0   \n","198       -1.604122        1.484709       -0.874587        0.310306        1   \n","199       -1.814688        1.714828       -1.095232        0.370687        1   \n","\n","     Folder  \n","0         1  \n","1         1  \n","2         1  \n","3         1  \n","4         1  \n","..      ...  \n","195      25  \n","196      25  \n","197      25  \n","198      25  \n","199      25  \n","\n","[200 rows x 350 columns]"],"text/html":["\n","  <div id=\"df-e429e06a-efbe-4ebb-a2da-5d9dc2dd9198\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>X_mean_acc</th>\n","      <th>X_std_acc</th>\n","      <th>X_var_acc</th>\n","      <th>X_median_acc</th>\n","      <th>X_min_acc</th>\n","      <th>X_max_acc</th>\n","      <th>X_activity_acc</th>\n","      <th>X_mobility_acc</th>\n","      <th>X_complexity_acc</th>\n","      <th>X_ar_coeff_0_acc</th>\n","      <th>...</th>\n","      <th>AF4_activity</th>\n","      <th>AF4_mobility</th>\n","      <th>AF4_complexity</th>\n","      <th>AF4_ar_coeff_0</th>\n","      <th>AF4_ar_coeff_1</th>\n","      <th>AF4_ar_coeff_2</th>\n","      <th>AF4_ar_coeff_3</th>\n","      <th>AF4_ar_coeff_4</th>\n","      <th>Emotion</th>\n","      <th>Folder</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>-6.846076</td>\n","      <td>1.127397</td>\n","      <td>1.271024</td>\n","      <td>-7.291028</td>\n","      <td>-9.866585</td>\n","      <td>3.020774</td>\n","      <td>1.271024</td>\n","      <td>0.033221</td>\n","      <td>41.360217</td>\n","      <td>1.039849</td>\n","      <td>...</td>\n","      <td>1955.207164</td>\n","      <td>0.201175</td>\n","      <td>5.853881</td>\n","      <td>1.888919</td>\n","      <td>-1.916397</td>\n","      <td>1.774889</td>\n","      <td>-1.162047</td>\n","      <td>0.414635</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2.378614</td>\n","      <td>0.445303</td>\n","      <td>0.198294</td>\n","      <td>2.427151</td>\n","      <td>-15.984729</td>\n","      <td>19.594337</td>\n","      <td>0.198294</td>\n","      <td>0.283186</td>\n","      <td>3.950224</td>\n","      <td>1.344210</td>\n","      <td>...</td>\n","      <td>4047.042955</td>\n","      <td>0.181730</td>\n","      <td>6.655339</td>\n","      <td>1.869903</td>\n","      <td>-1.917447</td>\n","      <td>1.803922</td>\n","      <td>-1.177878</td>\n","      <td>0.421499</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>-4.600323</td>\n","      <td>1.208001</td>\n","      <td>1.459265</td>\n","      <td>-4.332489</td>\n","      <td>-8.411251</td>\n","      <td>2.436726</td>\n","      <td>1.459265</td>\n","      <td>0.029166</td>\n","      <td>48.092388</td>\n","      <td>1.015230</td>\n","      <td>...</td>\n","      <td>788.581256</td>\n","      <td>0.362081</td>\n","      <td>3.528739</td>\n","      <td>1.719312</td>\n","      <td>-1.716449</td>\n","      <td>1.651069</td>\n","      <td>-1.060818</td>\n","      <td>0.406884</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2.307475</td>\n","      <td>0.842399</td>\n","      <td>0.709637</td>\n","      <td>2.494173</td>\n","      <td>-5.548458</td>\n","      <td>6.352721</td>\n","      <td>0.709637</td>\n","      <td>0.108667</td>\n","      <td>10.930011</td>\n","      <td>1.282584</td>\n","      <td>...</td>\n","      <td>30770.363380</td>\n","      <td>0.065568</td>\n","      <td>16.047249</td>\n","      <td>2.014694</td>\n","      <td>-1.962541</td>\n","      <td>1.826205</td>\n","      <td>-1.251982</td>\n","      <td>0.373620</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>-0.876954</td>\n","      <td>0.603183</td>\n","      <td>0.363829</td>\n","      <td>-1.010116</td>\n","      <td>-5.711226</td>\n","      <td>2.800559</td>\n","      <td>0.363829</td>\n","      <td>0.072352</td>\n","      <td>16.832129</td>\n","      <td>1.235047</td>\n","      <td>...</td>\n","      <td>9459.787110</td>\n","      <td>0.097349</td>\n","      <td>11.212047</td>\n","      <td>1.916121</td>\n","      <td>-1.784461</td>\n","      <td>1.639423</td>\n","      <td>-1.070856</td>\n","      <td>0.299771</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>195</th>\n","      <td>-1.026608</td>\n","      <td>0.673073</td>\n","      <td>0.453027</td>\n","      <td>-0.895221</td>\n","      <td>-7.166558</td>\n","      <td>4.294190</td>\n","      <td>0.453027</td>\n","      <td>0.190876</td>\n","      <td>6.090877</td>\n","      <td>1.327769</td>\n","      <td>...</td>\n","      <td>1341.930166</td>\n","      <td>0.288382</td>\n","      <td>4.671318</td>\n","      <td>1.619370</td>\n","      <td>-1.575834</td>\n","      <td>1.591902</td>\n","      <td>-1.013965</td>\n","      <td>0.378527</td>\n","      <td>1</td>\n","      <td>25</td>\n","    </tr>\n","    <tr>\n","      <th>196</th>\n","      <td>0.855077</td>\n","      <td>0.705780</td>\n","      <td>0.498126</td>\n","      <td>0.684581</td>\n","      <td>-2.963326</td>\n","      <td>16.674097</td>\n","      <td>0.498126</td>\n","      <td>0.117301</td>\n","      <td>10.614548</td>\n","      <td>1.285143</td>\n","      <td>...</td>\n","      <td>2125.336360</td>\n","      <td>0.194158</td>\n","      <td>6.114867</td>\n","      <td>1.799081</td>\n","      <td>-1.684543</td>\n","      <td>1.536058</td>\n","      <td>-0.908229</td>\n","      <td>0.257632</td>\n","      <td>0</td>\n","      <td>25</td>\n","    </tr>\n","    <tr>\n","      <th>197</th>\n","      <td>1.761846</td>\n","      <td>0.449221</td>\n","      <td>0.201799</td>\n","      <td>1.766506</td>\n","      <td>-3.710142</td>\n","      <td>6.534637</td>\n","      <td>0.201799</td>\n","      <td>0.241573</td>\n","      <td>5.045190</td>\n","      <td>1.340544</td>\n","      <td>...</td>\n","      <td>4823.841089</td>\n","      <td>0.127178</td>\n","      <td>9.549253</td>\n","      <td>1.850852</td>\n","      <td>-1.822298</td>\n","      <td>1.738571</td>\n","      <td>-1.141967</td>\n","      <td>0.374842</td>\n","      <td>0</td>\n","      <td>25</td>\n","    </tr>\n","    <tr>\n","      <th>198</th>\n","      <td>-0.530926</td>\n","      <td>1.917458</td>\n","      <td>3.676647</td>\n","      <td>-0.694156</td>\n","      <td>-11.762347</td>\n","      <td>10.220843</td>\n","      <td>3.676647</td>\n","      <td>0.049494</td>\n","      <td>22.914340</td>\n","      <td>1.349513</td>\n","      <td>...</td>\n","      <td>1804.680486</td>\n","      <td>0.212828</td>\n","      <td>5.879350</td>\n","      <td>1.683692</td>\n","      <td>-1.604122</td>\n","      <td>1.484709</td>\n","      <td>-0.874587</td>\n","      <td>0.310306</td>\n","      <td>1</td>\n","      <td>25</td>\n","    </tr>\n","    <tr>\n","      <th>199</th>\n","      <td>0.666244</td>\n","      <td>0.960139</td>\n","      <td>0.921866</td>\n","      <td>1.144160</td>\n","      <td>-5.213348</td>\n","      <td>5.682502</td>\n","      <td>0.921866</td>\n","      <td>0.092335</td>\n","      <td>12.092435</td>\n","      <td>1.449848</td>\n","      <td>...</td>\n","      <td>778.759752</td>\n","      <td>0.278193</td>\n","      <td>4.402478</td>\n","      <td>1.824404</td>\n","      <td>-1.814688</td>\n","      <td>1.714828</td>\n","      <td>-1.095232</td>\n","      <td>0.370687</td>\n","      <td>1</td>\n","      <td>25</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>200 rows × 350 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e429e06a-efbe-4ebb-a2da-5d9dc2dd9198')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e429e06a-efbe-4ebb-a2da-5d9dc2dd9198 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e429e06a-efbe-4ebb-a2da-5d9dc2dd9198');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-72220325-aeb0-41f3-b0c3-c5a0e85b6a43\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-72220325-aeb0-41f3-b0c3-c5a0e85b6a43')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-72220325-aeb0-41f3-b0c3-c5a0e85b6a43 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_278eb6ca-3b17-4260-9e98-851558f24887\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df_time_filtered')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_278eb6ca-3b17-4260-9e98-851558f24887 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df_time_filtered');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_time_filtered"}},"metadata":{},"execution_count":16}]},{"cell_type":"code","source":["# to make sure the same fold is use as train and test for different model\n","import random\n","folder_names = [i for i in range(1, 27)]\n","\n","# Shuffle the folder names to ensure random distribution\n","random.shuffle(folder_names)\n","\n","# Calculate the indices for the 80-20 split\n","train_split = int(0.8 * len(folder_names))  # 80% for training\n","\n","# Split the folders into training, validation, and testing sets\n","train_folders = folder_names[:train_split]\n","# valid_folders = folder_names[train_split:valid_split]\n","test_folders = folder_names[train_split:]\n","\n","print(train_folders)\n","print(test_folders)"],"metadata":{"id":"5mb1IS2BLSxs","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1713879623915,"user_tz":240,"elapsed":22,"user":{"displayName":"Wang","userId":"06822780026042244845"}},"outputId":"0a8bd650-2a04-4dac-b467-589b53369299"},"execution_count":17,"outputs":[{"output_type":"stream","name":"stdout","text":["[7, 4, 23, 8, 21, 12, 26, 1, 13, 2, 25, 20, 11, 22, 18, 9, 5, 17, 19, 6]\n","[24, 10, 14, 15, 3, 16]\n"]}]},{"cell_type":"code","source":["train_time = df_time_filtered[df_time_filtered['Folder'].isin(train_folders)]\n","X_train_time =train_time.iloc[:,:-2]\n","y_train_time=train_time.iloc[:,-2]\n","\n","test_time = df_time_filtered[df_time_filtered['Folder'].isin(test_folders)]\n","X_test_time =test_time.iloc[:,:-2]\n","y_test_time=test_time.iloc[:,-2]\n","\n","# val = df_time_filtered[df_time_filtered['Folder'].isin(valid_folders)]\n","# X_val =val.iloc[:,:-2]\n","# y_val=val.iloc[:,-2]"],"metadata":{"id":"Mxc1Hz21zArD","executionInfo":{"status":"ok","timestamp":1713879623915,"user_tz":240,"elapsed":20,"user":{"displayName":"Wang","userId":"06822780026042244845"}}},"execution_count":18,"outputs":[]},{"cell_type":"markdown","source":["## DNN model + Cross Validation"],"metadata":{"id":"eO5N8iqsydZu"}},{"cell_type":"code","source":["import tensorflow as tf\n","from tensorflow.keras.models import Sequential\n","from tensorflow.keras.layers import Dense, Dropout\n","from tensorflow.keras.regularizers import l2\n","from tensorflow.keras.optimizers import Adam\n","from tensorflow.keras.callbacks import EarlyStopping\n","from tensorflow.keras.callbacks import LambdaCallback\n","from sklearn.metrics import accuracy_score\n","\n","def create_model(input_shape):\n","    model = Sequential()\n","    # Adding L2 Regularization to layers\n","    model.add(Dense(64, input_shape=(input_shape,), activation='relu', kernel_regularizer=l2(0.01)))\n","    model.add(Dropout(0.3))  # Dropout 50% of the nodes of the previous layer during training\n","    model.add(Dense(32, activation='relu', kernel_regularizer=l2(0.01)))\n","    model.add(Dropout(0.2))  # Further dropout to combat overfitting\n","    model.add(Dense(1, activation='sigmoid'))\n","    model.compile(optimizer=Adam(learning_rate=0.001),\n","                  loss='binary_crossentropy',\n","                  metrics=['accuracy'])\n","    return model\n","\n","batch_size=64\n","fold=5"],"metadata":{"id":"HDUZQ9465vyp","executionInfo":{"status":"ok","timestamp":1713879624625,"user_tz":240,"elapsed":730,"user":{"displayName":"Wang","userId":"06822780026042244845"}}},"execution_count":19,"outputs":[]},{"cell_type":"code","source":["# To store scores\n","cv_scores = []\n","best_model_time = 0\n","best_accuracy_time = 0  # Initialize best accuracy to zero\n","train_folders_name=train_folders\n","\n","# for train_index, val_index in kf.split(X_full, y_full):\n","#     # Create data for this fold\n","#     X_train_fold, X_val_fold = X_full.iloc[train_index], X_full.iloc[val_index]\n","#     y_train_fold, y_val_fold = y_full.iloc[train_index], y_full.iloc[val_index]\n","for i in range(fold): # No.of fold cross validation\n","    # Shuffle the folder names to ensure random distribution\n","    random.shuffle(train_folders_name)\n","    # print(train_folders_name)\n","\n","    # Calculate the indices for the 90-10 split\n","    train_split_cv = int(0.9 * len(train_folders_name))  # 90% for training\n","    # valid_split = train_split + int(0.1 * len(folder_names))  # 10% for validation\n","\n","    # Split the folders into training, validation\n","    train_folders_cv = train_folders_name[:train_split_cv]\n","    # valid_folders = folder_names[train_split:valid_split]\n","    val_folders_cv = train_folders_name[train_split_cv:]\n","    # print(\"train_folders_cv\",len(train_folders_cv))\n","    # print(\"val_folders_cv\",val_folders_cv)\n","\n","    train_cv = train_time[train_time['Folder'].isin(train_folders_cv)]\n","    X_train_cv =train_cv.iloc[:,:-2]\n","    y_train_cv=train_cv.iloc[:,-2]\n","    # display(val_cv)\n","\n","    val_cv = train_time[train_time['Folder'].isin(val_folders_cv)]\n","    X_val_cv =val_cv.iloc[:,:-2]\n","    y_val_cv=val_cv.iloc[:,-2]\n","\n","    # Define the model\n","    model_time = create_model(X_train_cv.shape[1])\n","\n","    # Create a custom callback to print loss and accuracy every 20 epochs\n","    print_callback = LambdaCallback(on_epoch_end=lambda epoch, logs:\n","                                    print(f\"Epoch: {epoch+1}, Loss: {logs['loss']:.4f}, Accuracy: {logs['accuracy']:.4f}\")\n","                                    if (epoch+1) % 20 == 0 else None)\n","\n","    # Train the model\n","    history = model_time.fit(X_train_cv, y_train_cv,\n","                             epochs=100,\n","                             batch_size=batch_size,\n","                             verbose=0,\n","                             callbacks=[print_callback],\n","                             validation_data=(X_val_cv, y_val_cv))\n","\n","    # Evaluate the model on the validation set\n","    val_predictions = (model_time.predict(X_val_cv) > 0.5).astype(\"int32\")\n","    val_accuracy = accuracy_score(y_val_cv, val_predictions)\n","    cv_scores.append(val_accuracy)\n","    print(f\"Fold completed. Validation accuracy: {val_accuracy * 100:.2f}%\")\n","\n","    # Check if the current model has the best accuracy\n","    if val_accuracy > best_accuracy_time:\n","        best_accuracy_time = val_accuracy\n","        best_model_time = model_time\n","\n","# Report the best accuracy found\n","print(f\"Best validation accuracy: {best_accuracy_time * 100:.2f}%\")\n"],"metadata":{"id":"yuYTv6L1ycN1","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1713879655864,"user_tz":240,"elapsed":31242,"user":{"displayName":"Wang","userId":"06822780026042244845"}},"outputId":"1b3f1aae-a098-40de-d11d-ee5710784a97"},"execution_count":20,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch: 20, Loss: 181.8708, Accuracy: 0.6111\n","Epoch: 40, Loss: 145.2103, Accuracy: 0.6181\n","Epoch: 60, Loss: 81.1464, Accuracy: 0.5417\n","Epoch: 80, Loss: 54.3021, Accuracy: 0.6389\n","Epoch: 100, Loss: 24.6517, Accuracy: 0.5903\n","1/1 [==============================] - 0s 91ms/step\n","Fold completed. Validation accuracy: 25.00%\n","Epoch: 20, Loss: 246.3034, Accuracy: 0.5662\n","Epoch: 40, Loss: 128.5806, Accuracy: 0.5809\n","Epoch: 60, Loss: 61.4956, Accuracy: 0.5956\n","Epoch: 80, Loss: 21.6988, Accuracy: 0.6471\n","Epoch: 100, Loss: 17.3717, Accuracy: 0.6765\n","1/1 [==============================] - 0s 102ms/step\n","Fold completed. Validation accuracy: 43.75%\n","Epoch: 20, Loss: 414.8990, Accuracy: 0.5074\n","Epoch: 40, Loss: 179.2291, Accuracy: 0.5588\n","Epoch: 60, Loss: 63.9308, Accuracy: 0.7426\n","Epoch: 80, Loss: 41.5500, Accuracy: 0.7132\n","Epoch: 100, Loss: 33.1350, Accuracy: 0.6324\n","1/1 [==============================] - 0s 58ms/step\n","Fold completed. Validation accuracy: 50.00%\n","Epoch: 20, Loss: 308.9708, Accuracy: 0.5882\n","Epoch: 40, Loss: 106.3914, Accuracy: 0.6471\n","Epoch: 60, Loss: 77.7797, Accuracy: 0.6324\n","Epoch: 80, Loss: 34.2387, Accuracy: 0.6250\n","Epoch: 100, Loss: 15.1316, Accuracy: 0.6544\n","1/1 [==============================] - 0s 115ms/step\n","Fold completed. Validation accuracy: 50.00%\n","Epoch: 20, Loss: 248.3329, Accuracy: 0.5809\n","Epoch: 40, Loss: 130.3112, Accuracy: 0.6103\n","Epoch: 60, Loss: 75.1868, Accuracy: 0.6103\n","Epoch: 80, Loss: 67.2629, Accuracy: 0.6250\n","Epoch: 100, Loss: 77.8087, Accuracy: 0.6397\n"]},{"output_type":"stream","name":"stderr","text":["WARNING:tensorflow:5 out of the last 5 calls to <function Model.make_predict_function.<locals>.predict_function at 0x7b4598e4c670> triggered tf.function retracing. Tracing is expensive and the excessive number of tracings could be due to (1) creating @tf.function repeatedly in a loop, (2) passing tensors with different shapes, (3) passing Python objects instead of tensors. For (1), please define your @tf.function outside of the loop. For (2), @tf.function has reduce_retracing=True option that can avoid unnecessary retracing. For (3), please refer to https://www.tensorflow.org/guide/function#controlling_retracing and https://www.tensorflow.org/api_docs/python/tf/function for  more details.\n"]},{"output_type":"stream","name":"stdout","text":["1/1 [==============================] - 0s 71ms/step\n","Fold completed. Validation accuracy: 56.25%\n","Best validation accuracy: 56.25%\n"]}]},{"cell_type":"markdown","source":["# Frequency Domain Data"],"metadata":{"id":"AITEbGtc9LeP"}},{"cell_type":"markdown","source":["## Load Data"],"metadata":{"id":"sCvlTL6N9QO_"}},{"cell_type":"code","source":["df_frequency=pd.read_csv(\"/content/drive/MyDrive/JHU/MLMA/MLMA Project/BS-HMS-Dataset/frequency_domain_features\")"],"metadata":{"id":"bYk5wPAn9OTg","executionInfo":{"status":"ok","timestamp":1713879656318,"user_tz":240,"elapsed":482,"user":{"displayName":"Wang","userId":"06822780026042244845"}}},"execution_count":21,"outputs":[]},{"cell_type":"code","source":["rows_to_drop = ['Test20', 'Test21', 'Test27']\n","df_frequency_filtered = df_frequency[~df_frequency['Test'].str.contains('|'.join(rows_to_drop))]\n","df_frequency_filtered.head()"],"metadata":{"id":"YL_L4NyK9U6B","colab":{"base_uri":"https://localhost:8080/","height":0},"executionInfo":{"status":"ok","timestamp":1713879656318,"user_tz":240,"elapsed":15,"user":{"displayName":"Wang","userId":"06822780026042244845"}},"outputId":"7a54e275-4821-4e82-d776-d7116ac98a21"},"execution_count":22,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Unnamed: 0  AF3_Delta_power  AF3_Theta_power  AF3_Alpha_power  \\\n","0           0       742.183654        91.890818        29.103071   \n","1           1       814.217772       115.616427        33.692698   \n","2           2       333.443681        56.892036        17.542342   \n","3           3       972.444483        96.292971        21.770639   \n","4           4       679.511986       114.487260        25.583073   \n","\n","   AF3_Beta_power  AF3_Gamma_power  AF3_spectral_entropy  F7_Delta_power  \\\n","0       39.086906        14.159668              3.392576    19380.110107   \n","1       52.126272        22.004420              3.517422     2473.146474   \n","2       37.008188        18.740256              4.115038     1400.052844   \n","3       34.067561        19.333383              2.063286    15797.879384   \n","4       32.942404        14.063132              3.881328      292.466213   \n","\n","   F7_Theta_power  F7_Alpha_power  ...  F8_Beta_power  F8_Gamma_power  \\\n","0     1675.854975      993.004181  ...    1827.793507      372.815243   \n","1      137.999940       28.948250  ...      50.502736       18.238877   \n","2      297.329986      160.979736  ...     246.406774       58.009400   \n","3     1250.494293      492.593757  ...     173.137554       37.285689   \n","4       38.358567       10.211787  ...      36.050785       14.784819   \n","\n","   F8_spectral_entropy  AF4_Delta_power  AF4_Theta_power  AF4_Alpha_power  \\\n","0             2.927640       722.066811        73.374318        26.934085   \n","1             3.321144       988.999364       104.930425        34.668521   \n","2             3.251759       439.611659        62.292803        21.426163   \n","3             2.788485      6092.273632       235.566933        47.641229   \n","4             3.466234      2339.739461       143.981679        26.881912   \n","\n","   AF4_Beta_power  AF4_Gamma_power  AF4_spectral_entropy         Test  \n","0       39.510158        12.868163              3.228577  EEG_Test0_1  \n","1       50.649449        20.801604              2.722334  EEG_Test0_2  \n","2       42.629270        21.327653              3.976593  EEG_Test0_3  \n","3       44.089441        18.788212              2.098816  EEG_Test0_4  \n","4       31.913806        12.180580              2.435904  EEG_Test0_5  \n","\n","[5 rows x 86 columns]"],"text/html":["\n","  <div id=\"df-c357d46a-03ab-40cb-94a2-b201bf64b51f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>AF3_Delta_power</th>\n","      <th>AF3_Theta_power</th>\n","      <th>AF3_Alpha_power</th>\n","      <th>AF3_Beta_power</th>\n","      <th>AF3_Gamma_power</th>\n","      <th>AF3_spectral_entropy</th>\n","      <th>F7_Delta_power</th>\n","      <th>F7_Theta_power</th>\n","      <th>F7_Alpha_power</th>\n","      <th>...</th>\n","      <th>F8_Beta_power</th>\n","      <th>F8_Gamma_power</th>\n","      <th>F8_spectral_entropy</th>\n","      <th>AF4_Delta_power</th>\n","      <th>AF4_Theta_power</th>\n","      <th>AF4_Alpha_power</th>\n","      <th>AF4_Beta_power</th>\n","      <th>AF4_Gamma_power</th>\n","      <th>AF4_spectral_entropy</th>\n","      <th>Test</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>742.183654</td>\n","      <td>91.890818</td>\n","      <td>29.103071</td>\n","      <td>39.086906</td>\n","      <td>14.159668</td>\n","      <td>3.392576</td>\n","      <td>19380.110107</td>\n","      <td>1675.854975</td>\n","      <td>993.004181</td>\n","      <td>...</td>\n","      <td>1827.793507</td>\n","      <td>372.815243</td>\n","      <td>2.927640</td>\n","      <td>722.066811</td>\n","      <td>73.374318</td>\n","      <td>26.934085</td>\n","      <td>39.510158</td>\n","      <td>12.868163</td>\n","      <td>3.228577</td>\n","      <td>EEG_Test0_1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>814.217772</td>\n","      <td>115.616427</td>\n","      <td>33.692698</td>\n","      <td>52.126272</td>\n","      <td>22.004420</td>\n","      <td>3.517422</td>\n","      <td>2473.146474</td>\n","      <td>137.999940</td>\n","      <td>28.948250</td>\n","      <td>...</td>\n","      <td>50.502736</td>\n","      <td>18.238877</td>\n","      <td>3.321144</td>\n","      <td>988.999364</td>\n","      <td>104.930425</td>\n","      <td>34.668521</td>\n","      <td>50.649449</td>\n","      <td>20.801604</td>\n","      <td>2.722334</td>\n","      <td>EEG_Test0_2</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>333.443681</td>\n","      <td>56.892036</td>\n","      <td>17.542342</td>\n","      <td>37.008188</td>\n","      <td>18.740256</td>\n","      <td>4.115038</td>\n","      <td>1400.052844</td>\n","      <td>297.329986</td>\n","      <td>160.979736</td>\n","      <td>...</td>\n","      <td>246.406774</td>\n","      <td>58.009400</td>\n","      <td>3.251759</td>\n","      <td>439.611659</td>\n","      <td>62.292803</td>\n","      <td>21.426163</td>\n","      <td>42.629270</td>\n","      <td>21.327653</td>\n","      <td>3.976593</td>\n","      <td>EEG_Test0_3</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>972.444483</td>\n","      <td>96.292971</td>\n","      <td>21.770639</td>\n","      <td>34.067561</td>\n","      <td>19.333383</td>\n","      <td>2.063286</td>\n","      <td>15797.879384</td>\n","      <td>1250.494293</td>\n","      <td>492.593757</td>\n","      <td>...</td>\n","      <td>173.137554</td>\n","      <td>37.285689</td>\n","      <td>2.788485</td>\n","      <td>6092.273632</td>\n","      <td>235.566933</td>\n","      <td>47.641229</td>\n","      <td>44.089441</td>\n","      <td>18.788212</td>\n","      <td>2.098816</td>\n","      <td>EEG_Test0_4</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>679.511986</td>\n","      <td>114.487260</td>\n","      <td>25.583073</td>\n","      <td>32.942404</td>\n","      <td>14.063132</td>\n","      <td>3.881328</td>\n","      <td>292.466213</td>\n","      <td>38.358567</td>\n","      <td>10.211787</td>\n","      <td>...</td>\n","      <td>36.050785</td>\n","      <td>14.784819</td>\n","      <td>3.466234</td>\n","      <td>2339.739461</td>\n","      <td>143.981679</td>\n","      <td>26.881912</td>\n","      <td>31.913806</td>\n","      <td>12.180580</td>\n","      <td>2.435904</td>\n","      <td>EEG_Test0_5</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 86 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c357d46a-03ab-40cb-94a2-b201bf64b51f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-c357d46a-03ab-40cb-94a2-b201bf64b51f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-c357d46a-03ab-40cb-94a2-b201bf64b51f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-2c531ce0-274e-450e-b86b-547304e875be\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-2c531ce0-274e-450e-b86b-547304e875be')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-2c531ce0-274e-450e-b86b-547304e875be button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_frequency_filtered"}},"metadata":{},"execution_count":22}]},{"cell_type":"code","source":["# add Emotion column\n","df_frequency_filtered[\"Emotion\"]=metadata_video_id_list\n","# Drop \"Unnamed: 0\",\"Test\" columns\n","df_frequency_filtered=df_frequency_filtered.drop(columns=[\"Unnamed: 0\",\"Test\"])\n","df_frequency_filtered"],"metadata":{"id":"seLQLjhK-My_","colab":{"base_uri":"https://localhost:8080/","height":0},"executionInfo":{"status":"ok","timestamp":1713879656318,"user_tz":240,"elapsed":10,"user":{"displayName":"Wang","userId":"06822780026042244845"}},"outputId":"06abb00f-c7fb-416d-a357-833b2a0b870c"},"execution_count":23,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-23-dfb13a3777e7>:2: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  df_frequency_filtered[\"Emotion\"]=metadata_video_id_list\n"]},{"output_type":"execute_result","data":{"text/plain":["     AF3_Delta_power  AF3_Theta_power  AF3_Alpha_power  AF3_Beta_power  \\\n","0         742.183654        91.890818        29.103071       39.086906   \n","1         814.217772       115.616427        33.692698       52.126272   \n","2         333.443681        56.892036        17.542342       37.008188   \n","3         972.444483        96.292971        21.770639       34.067561   \n","4         679.511986       114.487260        25.583073       32.942404   \n","..               ...              ...              ...             ...   \n","211      3988.090799        66.729897        26.714639       52.603418   \n","212       328.027554        24.065557        12.305281       11.390863   \n","213       196.552634        22.197301        10.330547       11.698973   \n","214       125.616279        14.811609        14.844813       13.978226   \n","215       178.529334        19.035797         8.773452       10.335400   \n","\n","     AF3_Gamma_power  AF3_spectral_entropy  F7_Delta_power  F7_Theta_power  \\\n","0          14.159668              3.392576    19380.110107     1675.854975   \n","1          22.004420              3.517422     2473.146474      137.999940   \n","2          18.740256              4.115038     1400.052844      297.329986   \n","3          19.333383              2.063286    15797.879384     1250.494293   \n","4          14.063132              3.881328      292.466213       38.358567   \n","..               ...                   ...             ...             ...   \n","211        17.757124              2.581967     1128.316705      100.116058   \n","212         4.855920              2.003684     1214.553582       67.621555   \n","213         5.910977              2.469211     2412.923177       94.241990   \n","214         6.082713              3.141940     1198.985129       74.641414   \n","215         5.122136              3.436121      859.856118       52.064562   \n","\n","     F7_Alpha_power  F7_Beta_power  ...  F8_Beta_power  F8_Gamma_power  \\\n","0        993.004181    1200.003919  ...    1827.793507      372.815243   \n","1         28.948250      35.874422  ...      50.502736       18.238877   \n","2        160.979736     296.967472  ...     246.406774       58.009400   \n","3        492.593757     492.119875  ...     173.137554       37.285689   \n","4         10.211787      19.628216  ...      36.050785       14.784819   \n","..              ...            ...  ...            ...             ...   \n","211       25.147104      78.176664  ...     101.401419       55.028680   \n","212       24.157729      25.644321  ...      23.522324       10.241707   \n","213       34.393498      61.537160  ...      33.520476       14.401712   \n","214       33.214891      36.852710  ...      22.146428       11.727418   \n","215       17.522062      24.804552  ...      17.242093        9.168454   \n","\n","     F8_spectral_entropy  AF4_Delta_power  AF4_Theta_power  AF4_Alpha_power  \\\n","0               2.927640       722.066811        73.374318        26.934085   \n","1               3.321144       988.999364       104.930425        34.668521   \n","2               3.251759       439.611659        62.292803        21.426163   \n","3               2.788485      6092.273632       235.566933        47.641229   \n","4               3.466234      2339.739461       143.981679        26.881912   \n","..                   ...              ...              ...              ...   \n","211             2.829569       549.013560        50.597313        19.869369   \n","212             3.310003       806.514682        67.316092        34.419324   \n","213             2.614483       929.661063        66.896045        27.174102   \n","214             2.334435       346.849914        31.735962        34.137930   \n","215             3.958936       429.863409        47.130917        20.924372   \n","\n","     AF4_Beta_power  AF4_Gamma_power  AF4_spectral_entropy  Emotion  \n","0         39.510158        12.868163              3.228577        1  \n","1         50.649449        20.801604              2.722334        1  \n","2         42.629270        21.327653              3.976593        0  \n","3         44.089441        18.788212              2.098816        0  \n","4         31.913806        12.180580              2.435904        1  \n","..              ...              ...                   ...      ...  \n","211       32.719328        26.388016              3.308674        1  \n","212       31.208080        14.308119              3.121754        0  \n","213       28.494446        13.939820              2.230978        0  \n","214       32.800019        15.050338              2.446117        1  \n","215       23.692223        11.364165              3.710480        1  \n","\n","[200 rows x 85 columns]"],"text/html":["\n","  <div id=\"df-f4567d61-482d-4304-b23b-448f91acf3c5\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>AF3_Delta_power</th>\n","      <th>AF3_Theta_power</th>\n","      <th>AF3_Alpha_power</th>\n","      <th>AF3_Beta_power</th>\n","      <th>AF3_Gamma_power</th>\n","      <th>AF3_spectral_entropy</th>\n","      <th>F7_Delta_power</th>\n","      <th>F7_Theta_power</th>\n","      <th>F7_Alpha_power</th>\n","      <th>F7_Beta_power</th>\n","      <th>...</th>\n","      <th>F8_Beta_power</th>\n","      <th>F8_Gamma_power</th>\n","      <th>F8_spectral_entropy</th>\n","      <th>AF4_Delta_power</th>\n","      <th>AF4_Theta_power</th>\n","      <th>AF4_Alpha_power</th>\n","      <th>AF4_Beta_power</th>\n","      <th>AF4_Gamma_power</th>\n","      <th>AF4_spectral_entropy</th>\n","      <th>Emotion</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>742.183654</td>\n","      <td>91.890818</td>\n","      <td>29.103071</td>\n","      <td>39.086906</td>\n","      <td>14.159668</td>\n","      <td>3.392576</td>\n","      <td>19380.110107</td>\n","      <td>1675.854975</td>\n","      <td>993.004181</td>\n","      <td>1200.003919</td>\n","      <td>...</td>\n","      <td>1827.793507</td>\n","      <td>372.815243</td>\n","      <td>2.927640</td>\n","      <td>722.066811</td>\n","      <td>73.374318</td>\n","      <td>26.934085</td>\n","      <td>39.510158</td>\n","      <td>12.868163</td>\n","      <td>3.228577</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>814.217772</td>\n","      <td>115.616427</td>\n","      <td>33.692698</td>\n","      <td>52.126272</td>\n","      <td>22.004420</td>\n","      <td>3.517422</td>\n","      <td>2473.146474</td>\n","      <td>137.999940</td>\n","      <td>28.948250</td>\n","      <td>35.874422</td>\n","      <td>...</td>\n","      <td>50.502736</td>\n","      <td>18.238877</td>\n","      <td>3.321144</td>\n","      <td>988.999364</td>\n","      <td>104.930425</td>\n","      <td>34.668521</td>\n","      <td>50.649449</td>\n","      <td>20.801604</td>\n","      <td>2.722334</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>333.443681</td>\n","      <td>56.892036</td>\n","      <td>17.542342</td>\n","      <td>37.008188</td>\n","      <td>18.740256</td>\n","      <td>4.115038</td>\n","      <td>1400.052844</td>\n","      <td>297.329986</td>\n","      <td>160.979736</td>\n","      <td>296.967472</td>\n","      <td>...</td>\n","      <td>246.406774</td>\n","      <td>58.009400</td>\n","      <td>3.251759</td>\n","      <td>439.611659</td>\n","      <td>62.292803</td>\n","      <td>21.426163</td>\n","      <td>42.629270</td>\n","      <td>21.327653</td>\n","      <td>3.976593</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>972.444483</td>\n","      <td>96.292971</td>\n","      <td>21.770639</td>\n","      <td>34.067561</td>\n","      <td>19.333383</td>\n","      <td>2.063286</td>\n","      <td>15797.879384</td>\n","      <td>1250.494293</td>\n","      <td>492.593757</td>\n","      <td>492.119875</td>\n","      <td>...</td>\n","      <td>173.137554</td>\n","      <td>37.285689</td>\n","      <td>2.788485</td>\n","      <td>6092.273632</td>\n","      <td>235.566933</td>\n","      <td>47.641229</td>\n","      <td>44.089441</td>\n","      <td>18.788212</td>\n","      <td>2.098816</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>679.511986</td>\n","      <td>114.487260</td>\n","      <td>25.583073</td>\n","      <td>32.942404</td>\n","      <td>14.063132</td>\n","      <td>3.881328</td>\n","      <td>292.466213</td>\n","      <td>38.358567</td>\n","      <td>10.211787</td>\n","      <td>19.628216</td>\n","      <td>...</td>\n","      <td>36.050785</td>\n","      <td>14.784819</td>\n","      <td>3.466234</td>\n","      <td>2339.739461</td>\n","      <td>143.981679</td>\n","      <td>26.881912</td>\n","      <td>31.913806</td>\n","      <td>12.180580</td>\n","      <td>2.435904</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>211</th>\n","      <td>3988.090799</td>\n","      <td>66.729897</td>\n","      <td>26.714639</td>\n","      <td>52.603418</td>\n","      <td>17.757124</td>\n","      <td>2.581967</td>\n","      <td>1128.316705</td>\n","      <td>100.116058</td>\n","      <td>25.147104</td>\n","      <td>78.176664</td>\n","      <td>...</td>\n","      <td>101.401419</td>\n","      <td>55.028680</td>\n","      <td>2.829569</td>\n","      <td>549.013560</td>\n","      <td>50.597313</td>\n","      <td>19.869369</td>\n","      <td>32.719328</td>\n","      <td>26.388016</td>\n","      <td>3.308674</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>212</th>\n","      <td>328.027554</td>\n","      <td>24.065557</td>\n","      <td>12.305281</td>\n","      <td>11.390863</td>\n","      <td>4.855920</td>\n","      <td>2.003684</td>\n","      <td>1214.553582</td>\n","      <td>67.621555</td>\n","      <td>24.157729</td>\n","      <td>25.644321</td>\n","      <td>...</td>\n","      <td>23.522324</td>\n","      <td>10.241707</td>\n","      <td>3.310003</td>\n","      <td>806.514682</td>\n","      <td>67.316092</td>\n","      <td>34.419324</td>\n","      <td>31.208080</td>\n","      <td>14.308119</td>\n","      <td>3.121754</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>213</th>\n","      <td>196.552634</td>\n","      <td>22.197301</td>\n","      <td>10.330547</td>\n","      <td>11.698973</td>\n","      <td>5.910977</td>\n","      <td>2.469211</td>\n","      <td>2412.923177</td>\n","      <td>94.241990</td>\n","      <td>34.393498</td>\n","      <td>61.537160</td>\n","      <td>...</td>\n","      <td>33.520476</td>\n","      <td>14.401712</td>\n","      <td>2.614483</td>\n","      <td>929.661063</td>\n","      <td>66.896045</td>\n","      <td>27.174102</td>\n","      <td>28.494446</td>\n","      <td>13.939820</td>\n","      <td>2.230978</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>214</th>\n","      <td>125.616279</td>\n","      <td>14.811609</td>\n","      <td>14.844813</td>\n","      <td>13.978226</td>\n","      <td>6.082713</td>\n","      <td>3.141940</td>\n","      <td>1198.985129</td>\n","      <td>74.641414</td>\n","      <td>33.214891</td>\n","      <td>36.852710</td>\n","      <td>...</td>\n","      <td>22.146428</td>\n","      <td>11.727418</td>\n","      <td>2.334435</td>\n","      <td>346.849914</td>\n","      <td>31.735962</td>\n","      <td>34.137930</td>\n","      <td>32.800019</td>\n","      <td>15.050338</td>\n","      <td>2.446117</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>215</th>\n","      <td>178.529334</td>\n","      <td>19.035797</td>\n","      <td>8.773452</td>\n","      <td>10.335400</td>\n","      <td>5.122136</td>\n","      <td>3.436121</td>\n","      <td>859.856118</td>\n","      <td>52.064562</td>\n","      <td>17.522062</td>\n","      <td>24.804552</td>\n","      <td>...</td>\n","      <td>17.242093</td>\n","      <td>9.168454</td>\n","      <td>3.958936</td>\n","      <td>429.863409</td>\n","      <td>47.130917</td>\n","      <td>20.924372</td>\n","      <td>23.692223</td>\n","      <td>11.364165</td>\n","      <td>3.710480</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>200 rows × 85 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f4567d61-482d-4304-b23b-448f91acf3c5')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-f4567d61-482d-4304-b23b-448f91acf3c5 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-f4567d61-482d-4304-b23b-448f91acf3c5');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-2e2eda8e-79fc-4d1a-975d-a0d11234d4b4\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-2e2eda8e-79fc-4d1a-975d-a0d11234d4b4')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-2e2eda8e-79fc-4d1a-975d-a0d11234d4b4 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_d5ab2140-e022-4513-86c3-00bae5bea673\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df_frequency_filtered')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_d5ab2140-e022-4513-86c3-00bae5bea673 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df_frequency_filtered');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_frequency_filtered"}},"metadata":{},"execution_count":23}]},{"cell_type":"code","source":["# concate eeg and hm data\n","df_frequency_filtered=df_frequency_filtered.reset_index(drop=True)\n","df_frequency_filtered=pd.concat([df_rhm, df_frequency_filtered],axis=1)"],"metadata":{"id":"ytkO2naFIWbL","executionInfo":{"status":"ok","timestamp":1713879656965,"user_tz":240,"elapsed":654,"user":{"displayName":"Wang","userId":"06822780026042244845"}}},"execution_count":24,"outputs":[]},{"cell_type":"markdown","source":["## Train Test Split"],"metadata":{"id":"eH5eSZ58-nMC"}},{"cell_type":"code","source":["# Assign Folder\n","df_frequency_filtered[\"Folder\"]=folder\n","df_frequency_filtered.head()"],"metadata":{"id":"1_VzOgLz-pdF","colab":{"base_uri":"https://localhost:8080/","height":0},"executionInfo":{"status":"ok","timestamp":1713879656966,"user_tz":240,"elapsed":655,"user":{"displayName":"Wang","userId":"06822780026042244845"}},"outputId":"744755b5-2e74-4d07-9050-8898efeb7d5f"},"execution_count":25,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   X_mean_acc  X_std_acc  X_var_acc  X_median_acc  X_min_acc  X_max_acc  \\\n","0   -6.846076   1.127397   1.271024     -7.291028  -9.866585   3.020774   \n","1    2.378614   0.445303   0.198294      2.427151 -15.984729  19.594337   \n","2   -4.600323   1.208001   1.459265     -4.332489  -8.411251   2.436726   \n","3    2.307475   0.842399   0.709637      2.494173  -5.548458   6.352721   \n","4   -0.876954   0.603183   0.363829     -1.010116  -5.711226   2.800559   \n","\n","   X_activity_acc  X_mobility_acc  X_complexity_acc  X_ar_coeff_0_acc  ...  \\\n","0        1.271024        0.033221         41.360217          1.039849  ...   \n","1        0.198294        0.283186          3.950224          1.344210  ...   \n","2        1.459265        0.029166         48.092388          1.015230  ...   \n","3        0.709637        0.108667         10.930011          1.282584  ...   \n","4        0.363829        0.072352         16.832129          1.235047  ...   \n","\n","   F8_Gamma_power  F8_spectral_entropy  AF4_Delta_power  AF4_Theta_power  \\\n","0      372.815243             2.927640       722.066811        73.374318   \n","1       18.238877             3.321144       988.999364       104.930425   \n","2       58.009400             3.251759       439.611659        62.292803   \n","3       37.285689             2.788485      6092.273632       235.566933   \n","4       14.784819             3.466234      2339.739461       143.981679   \n","\n","   AF4_Alpha_power  AF4_Beta_power  AF4_Gamma_power  AF4_spectral_entropy  \\\n","0        26.934085       39.510158        12.868163              3.228577   \n","1        34.668521       50.649449        20.801604              2.722334   \n","2        21.426163       42.629270        21.327653              3.976593   \n","3        47.641229       44.089441        18.788212              2.098816   \n","4        26.881912       31.913806        12.180580              2.435904   \n","\n","   Emotion  Folder  \n","0        1       1  \n","1        1       1  \n","2        0       1  \n","3        0       1  \n","4        1       1  \n","\n","[5 rows x 238 columns]"],"text/html":["\n","  <div id=\"df-44f5982e-3b6a-4407-8797-413e96f9fa2c\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>X_mean_acc</th>\n","      <th>X_std_acc</th>\n","      <th>X_var_acc</th>\n","      <th>X_median_acc</th>\n","      <th>X_min_acc</th>\n","      <th>X_max_acc</th>\n","      <th>X_activity_acc</th>\n","      <th>X_mobility_acc</th>\n","      <th>X_complexity_acc</th>\n","      <th>X_ar_coeff_0_acc</th>\n","      <th>...</th>\n","      <th>F8_Gamma_power</th>\n","      <th>F8_spectral_entropy</th>\n","      <th>AF4_Delta_power</th>\n","      <th>AF4_Theta_power</th>\n","      <th>AF4_Alpha_power</th>\n","      <th>AF4_Beta_power</th>\n","      <th>AF4_Gamma_power</th>\n","      <th>AF4_spectral_entropy</th>\n","      <th>Emotion</th>\n","      <th>Folder</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>-6.846076</td>\n","      <td>1.127397</td>\n","      <td>1.271024</td>\n","      <td>-7.291028</td>\n","      <td>-9.866585</td>\n","      <td>3.020774</td>\n","      <td>1.271024</td>\n","      <td>0.033221</td>\n","      <td>41.360217</td>\n","      <td>1.039849</td>\n","      <td>...</td>\n","      <td>372.815243</td>\n","      <td>2.927640</td>\n","      <td>722.066811</td>\n","      <td>73.374318</td>\n","      <td>26.934085</td>\n","      <td>39.510158</td>\n","      <td>12.868163</td>\n","      <td>3.228577</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2.378614</td>\n","      <td>0.445303</td>\n","      <td>0.198294</td>\n","      <td>2.427151</td>\n","      <td>-15.984729</td>\n","      <td>19.594337</td>\n","      <td>0.198294</td>\n","      <td>0.283186</td>\n","      <td>3.950224</td>\n","      <td>1.344210</td>\n","      <td>...</td>\n","      <td>18.238877</td>\n","      <td>3.321144</td>\n","      <td>988.999364</td>\n","      <td>104.930425</td>\n","      <td>34.668521</td>\n","      <td>50.649449</td>\n","      <td>20.801604</td>\n","      <td>2.722334</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>-4.600323</td>\n","      <td>1.208001</td>\n","      <td>1.459265</td>\n","      <td>-4.332489</td>\n","      <td>-8.411251</td>\n","      <td>2.436726</td>\n","      <td>1.459265</td>\n","      <td>0.029166</td>\n","      <td>48.092388</td>\n","      <td>1.015230</td>\n","      <td>...</td>\n","      <td>58.009400</td>\n","      <td>3.251759</td>\n","      <td>439.611659</td>\n","      <td>62.292803</td>\n","      <td>21.426163</td>\n","      <td>42.629270</td>\n","      <td>21.327653</td>\n","      <td>3.976593</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2.307475</td>\n","      <td>0.842399</td>\n","      <td>0.709637</td>\n","      <td>2.494173</td>\n","      <td>-5.548458</td>\n","      <td>6.352721</td>\n","      <td>0.709637</td>\n","      <td>0.108667</td>\n","      <td>10.930011</td>\n","      <td>1.282584</td>\n","      <td>...</td>\n","      <td>37.285689</td>\n","      <td>2.788485</td>\n","      <td>6092.273632</td>\n","      <td>235.566933</td>\n","      <td>47.641229</td>\n","      <td>44.089441</td>\n","      <td>18.788212</td>\n","      <td>2.098816</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>-0.876954</td>\n","      <td>0.603183</td>\n","      <td>0.363829</td>\n","      <td>-1.010116</td>\n","      <td>-5.711226</td>\n","      <td>2.800559</td>\n","      <td>0.363829</td>\n","      <td>0.072352</td>\n","      <td>16.832129</td>\n","      <td>1.235047</td>\n","      <td>...</td>\n","      <td>14.784819</td>\n","      <td>3.466234</td>\n","      <td>2339.739461</td>\n","      <td>143.981679</td>\n","      <td>26.881912</td>\n","      <td>31.913806</td>\n","      <td>12.180580</td>\n","      <td>2.435904</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 238 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-44f5982e-3b6a-4407-8797-413e96f9fa2c')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-44f5982e-3b6a-4407-8797-413e96f9fa2c button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-44f5982e-3b6a-4407-8797-413e96f9fa2c');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-49c37e98-db43-4610-80da-69cedb9c2437\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-49c37e98-db43-4610-80da-69cedb9c2437')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-49c37e98-db43-4610-80da-69cedb9c2437 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_frequency_filtered"}},"metadata":{},"execution_count":25}]},{"cell_type":"code","source":["train_frequency = df_frequency_filtered[df_frequency_filtered['Folder'].isin(train_folders)]\n","X_train_frequency =train_frequency.iloc[:,:-2]\n","y_train_frequency=train_frequency.iloc[:,-2]\n","\n","test_frequency = df_frequency_filtered[df_frequency_filtered['Folder'].isin(test_folders)]\n","X_test_frequency =test_frequency.iloc[:,:-2]\n","y_test_frequency=test_frequency.iloc[:,-2]\n","# X_test_frequency"],"metadata":{"id":"WYqquE1U-6mN","executionInfo":{"status":"ok","timestamp":1713879656966,"user_tz":240,"elapsed":5,"user":{"displayName":"Wang","userId":"06822780026042244845"}}},"execution_count":26,"outputs":[]},{"cell_type":"markdown","source":["## DNN model + Cross Validation"],"metadata":{"id":"L2J6YWXp_JFS"}},{"cell_type":"code","source":["# To store scores and keep track of the best model\n","cv_scores_frequency = []\n","best_model_frequency = None\n","best_accuracy_frequency = 0  # Initialize best accuracy to zero\n","train_folders_name = train_folders.copy()  # Create a copy to shuffle and split\n","\n","for i in range(fold):\n","    # Shuffle the folder names to ensure random distribution\n","    random.shuffle(train_folders_name)\n","\n","    # Calculate the indices for the 90-10 split\n","    train_split_cv = int(0.9 * len(train_folders_name))  # 90% for training\n","\n","    # Split the folders into training and validation\n","    train_folders_cv = train_folders_name[:train_split_cv]\n","    val_folders_cv = train_folders_name[train_split_cv:]\n","\n","    # Filter data for training and validation sets\n","    train_cv = df_frequency_filtered[df_frequency_filtered['Folder'].isin(train_folders_cv)]\n","    X_train_cv = train_cv.iloc[:, :-2]\n","    y_train_cv = train_cv.iloc[:, -2]\n","\n","    val_cv = df_frequency_filtered[df_frequency_filtered['Folder'].isin(val_folders_cv)]\n","    X_val_cv = val_cv.iloc[:, :-2]\n","    y_val_cv = val_cv.iloc[:, -2]\n","\n","    # Define the model\n","    model_frequency = create_model(X_train_cv.shape[1])\n","\n","    # Create a custom callback to print loss and accuracy every 20 epochs\n","    print_callback = LambdaCallback(on_epoch_end=lambda epoch, logs:\n","                                    print(f\"Epoch: {epoch+1}, Loss: {logs['loss']:.4f}, Accuracy: {logs['accuracy']:.4f}\")\n","                                    if (epoch+1) % 20 == 0 else None)\n","\n","    # Train the model\n","    history = model_frequency.fit(X_train_cv, y_train_cv,\n","                                  epochs=100,  # Consider increasing epochs\n","                                  batch_size=batch_size,\n","                                  verbose=0,\n","                                  callbacks=[print_callback],\n","                                  validation_data=(X_val_cv, y_val_cv))\n","\n","    # Evaluate the model on the validation set\n","    val_predictions = (model_frequency.predict(X_val_cv) > 0.5).astype(\"int32\")\n","    val_accuracy = accuracy_score(y_val_cv, val_predictions)\n","    cv_scores_frequency.append(val_accuracy)\n","    print(f\"Fold completed. Validation accuracy: {val_accuracy * 100:.2f}%\")\n","\n","    # Check if the current model has the best accuracy\n","    if val_accuracy > best_accuracy_frequency:\n","        best_accuracy_frequency = val_accuracy\n","        best_model_frequency = model_frequency\n","\n","# Report the best accuracy found\n","print(f\"Best validation accuracy: {best_accuracy_frequency * 100:.2f}%\")\n","\n","# Optionally, save the best model\n","if best_model_frequency:\n","    best_model_frequency.save('best_model_frequency.h5')\n"],"metadata":{"id":"E08HRLZYOPDj","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1713879694743,"user_tz":240,"elapsed":37781,"user":{"displayName":"Wang","userId":"06822780026042244845"}},"outputId":"acc38b29-2554-4aca-88f5-ea4b395e91b6"},"execution_count":27,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch: 20, Loss: 112.5305, Accuracy: 0.5735\n","Epoch: 40, Loss: 44.9088, Accuracy: 0.6691\n","Epoch: 60, Loss: 37.3261, Accuracy: 0.5588\n","Epoch: 80, Loss: 26.0815, Accuracy: 0.6103\n"]},{"output_type":"stream","name":"stderr","text":["WARNING:tensorflow:6 out of the last 6 calls to <function Model.make_predict_function.<locals>.predict_function at 0x7b4598e4e050> triggered tf.function retracing. Tracing is expensive and the excessive number of tracings could be due to (1) creating @tf.function repeatedly in a loop, (2) passing tensors with different shapes, (3) passing Python objects instead of tensors. For (1), please define your @tf.function outside of the loop. For (2), @tf.function has reduce_retracing=True option that can avoid unnecessary retracing. For (3), please refer to https://www.tensorflow.org/guide/function#controlling_retracing and https://www.tensorflow.org/api_docs/python/tf/function for  more details.\n"]},{"output_type":"stream","name":"stdout","text":["Epoch: 100, Loss: 49.9383, Accuracy: 0.6618\n","1/1 [==============================] - 0s 64ms/step\n","Fold completed. Validation accuracy: 62.50%\n","Epoch: 20, Loss: 83.4623, Accuracy: 0.5972\n","Epoch: 40, Loss: 57.9311, Accuracy: 0.5764\n","Epoch: 60, Loss: 32.2633, Accuracy: 0.6181\n","Epoch: 80, Loss: 23.5346, Accuracy: 0.6181\n","Epoch: 100, Loss: 10.0112, Accuracy: 0.6736\n","1/1 [==============================] - 0s 73ms/step\n","Fold completed. Validation accuracy: 37.50%\n","Epoch: 20, Loss: 88.7896, Accuracy: 0.5662\n","Epoch: 40, Loss: 57.1256, Accuracy: 0.6176\n","Epoch: 60, Loss: 57.5956, Accuracy: 0.6103\n","Epoch: 80, Loss: 21.4581, Accuracy: 0.6912\n","Epoch: 100, Loss: 23.6203, Accuracy: 0.6324\n","1/1 [==============================] - 0s 61ms/step\n","Fold completed. Validation accuracy: 62.50%\n","Epoch: 20, Loss: 52.5474, Accuracy: 0.6618\n","Epoch: 40, Loss: 44.1585, Accuracy: 0.5662\n","Epoch: 60, Loss: 20.8357, Accuracy: 0.6765\n","Epoch: 80, Loss: 10.4738, Accuracy: 0.6985\n","Epoch: 100, Loss: 7.6488, Accuracy: 0.6176\n","1/1 [==============================] - 0s 64ms/step\n","Fold completed. Validation accuracy: 50.00%\n","Epoch: 20, Loss: 137.2606, Accuracy: 0.5441\n","Epoch: 40, Loss: 65.1497, Accuracy: 0.6544\n","Epoch: 60, Loss: 30.5096, Accuracy: 0.7059\n","Epoch: 80, Loss: 28.6728, Accuracy: 0.6765\n","Epoch: 100, Loss: 9.9627, Accuracy: 0.7868\n","1/1 [==============================] - 0s 67ms/step\n","Fold completed. Validation accuracy: 50.00%\n","Best validation accuracy: 62.50%\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/keras/src/engine/training.py:3103: UserWarning: You are saving your model as an HDF5 file via `model.save()`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')`.\n","  saving_api.save_model(\n"]}]},{"cell_type":"markdown","source":["# Time Frequency Together"],"metadata":{"id":"yNwkLR--TjAY"}},{"cell_type":"markdown","source":["## Concatenate Data"],"metadata":{"id":"KZRYW7_6Y2X6"}},{"cell_type":"code","source":["df_time_filtered_incomplete=df_time_filtered.iloc[:,:-2]\n","df_time_frequency=pd.concat([df_time_filtered_incomplete, df_frequency_filtered], axis=1)\n","df_time_frequency"],"metadata":{"id":"6kZ6R5FKUKEA","colab":{"base_uri":"https://localhost:8080/","height":443},"executionInfo":{"status":"ok","timestamp":1713879694745,"user_tz":240,"elapsed":12,"user":{"displayName":"Wang","userId":"06822780026042244845"}},"outputId":"b53c61a3-2675-48a1-bd40-5c41067fda79"},"execution_count":28,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     X_mean_acc  X_std_acc  X_var_acc  X_median_acc  X_min_acc  X_max_acc  \\\n","0     -6.846076   1.127397   1.271024     -7.291028  -9.866585   3.020774   \n","1      2.378614   0.445303   0.198294      2.427151 -15.984729  19.594337   \n","2     -4.600323   1.208001   1.459265     -4.332489  -8.411251   2.436726   \n","3      2.307475   0.842399   0.709637      2.494173  -5.548458   6.352721   \n","4     -0.876954   0.603183   0.363829     -1.010116  -5.711226   2.800559   \n","..          ...        ...        ...           ...        ...        ...   \n","195   -1.026608   0.673073   0.453027     -0.895221  -7.166558   4.294190   \n","196    0.855077   0.705780   0.498126      0.684581  -2.963326  16.674097   \n","197    1.761846   0.449221   0.201799      1.766506  -3.710142   6.534637   \n","198   -0.530926   1.917458   3.676647     -0.694156 -11.762347  10.220843   \n","199    0.666244   0.960139   0.921866      1.144160  -5.213348   5.682502   \n","\n","     X_activity_acc  X_mobility_acc  X_complexity_acc  X_ar_coeff_0_acc  ...  \\\n","0          1.271024        0.033221         41.360217          1.039849  ...   \n","1          0.198294        0.283186          3.950224          1.344210  ...   \n","2          1.459265        0.029166         48.092388          1.015230  ...   \n","3          0.709637        0.108667         10.930011          1.282584  ...   \n","4          0.363829        0.072352         16.832129          1.235047  ...   \n","..              ...             ...               ...               ...  ...   \n","195        0.453027        0.190876          6.090877          1.327769  ...   \n","196        0.498126        0.117301         10.614548          1.285143  ...   \n","197        0.201799        0.241573          5.045190          1.340544  ...   \n","198        3.676647        0.049494         22.914340          1.349513  ...   \n","199        0.921866        0.092335         12.092435          1.449848  ...   \n","\n","     F8_Gamma_power  F8_spectral_entropy  AF4_Delta_power  AF4_Theta_power  \\\n","0        372.815243             2.927640       722.066811        73.374318   \n","1         18.238877             3.321144       988.999364       104.930425   \n","2         58.009400             3.251759       439.611659        62.292803   \n","3         37.285689             2.788485      6092.273632       235.566933   \n","4         14.784819             3.466234      2339.739461       143.981679   \n","..              ...                  ...              ...              ...   \n","195       55.028680             2.829569       549.013560        50.597313   \n","196       10.241707             3.310003       806.514682        67.316092   \n","197       14.401712             2.614483       929.661063        66.896045   \n","198       11.727418             2.334435       346.849914        31.735962   \n","199        9.168454             3.958936       429.863409        47.130917   \n","\n","     AF4_Alpha_power  AF4_Beta_power  AF4_Gamma_power  AF4_spectral_entropy  \\\n","0          26.934085       39.510158        12.868163              3.228577   \n","1          34.668521       50.649449        20.801604              2.722334   \n","2          21.426163       42.629270        21.327653              3.976593   \n","3          47.641229       44.089441        18.788212              2.098816   \n","4          26.881912       31.913806        12.180580              2.435904   \n","..               ...             ...              ...                   ...   \n","195        19.869369       32.719328        26.388016              3.308674   \n","196        34.419324       31.208080        14.308119              3.121754   \n","197        27.174102       28.494446        13.939820              2.230978   \n","198        34.137930       32.800019        15.050338              2.446117   \n","199        20.924372       23.692223        11.364165              3.710480   \n","\n","     Emotion  Folder  \n","0          1       1  \n","1          1       1  \n","2          0       1  \n","3          0       1  \n","4          1       1  \n","..       ...     ...  \n","195        1      25  \n","196        0      25  \n","197        0      25  \n","198        1      25  \n","199        1      25  \n","\n","[200 rows x 586 columns]"],"text/html":["\n","  <div id=\"df-b9535646-e410-4313-a46b-d80f9df1b91b\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>X_mean_acc</th>\n","      <th>X_std_acc</th>\n","      <th>X_var_acc</th>\n","      <th>X_median_acc</th>\n","      <th>X_min_acc</th>\n","      <th>X_max_acc</th>\n","      <th>X_activity_acc</th>\n","      <th>X_mobility_acc</th>\n","      <th>X_complexity_acc</th>\n","      <th>X_ar_coeff_0_acc</th>\n","      <th>...</th>\n","      <th>F8_Gamma_power</th>\n","      <th>F8_spectral_entropy</th>\n","      <th>AF4_Delta_power</th>\n","      <th>AF4_Theta_power</th>\n","      <th>AF4_Alpha_power</th>\n","      <th>AF4_Beta_power</th>\n","      <th>AF4_Gamma_power</th>\n","      <th>AF4_spectral_entropy</th>\n","      <th>Emotion</th>\n","      <th>Folder</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>-6.846076</td>\n","      <td>1.127397</td>\n","      <td>1.271024</td>\n","      <td>-7.291028</td>\n","      <td>-9.866585</td>\n","      <td>3.020774</td>\n","      <td>1.271024</td>\n","      <td>0.033221</td>\n","      <td>41.360217</td>\n","      <td>1.039849</td>\n","      <td>...</td>\n","      <td>372.815243</td>\n","      <td>2.927640</td>\n","      <td>722.066811</td>\n","      <td>73.374318</td>\n","      <td>26.934085</td>\n","      <td>39.510158</td>\n","      <td>12.868163</td>\n","      <td>3.228577</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2.378614</td>\n","      <td>0.445303</td>\n","      <td>0.198294</td>\n","      <td>2.427151</td>\n","      <td>-15.984729</td>\n","      <td>19.594337</td>\n","      <td>0.198294</td>\n","      <td>0.283186</td>\n","      <td>3.950224</td>\n","      <td>1.344210</td>\n","      <td>...</td>\n","      <td>18.238877</td>\n","      <td>3.321144</td>\n","      <td>988.999364</td>\n","      <td>104.930425</td>\n","      <td>34.668521</td>\n","      <td>50.649449</td>\n","      <td>20.801604</td>\n","      <td>2.722334</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>-4.600323</td>\n","      <td>1.208001</td>\n","      <td>1.459265</td>\n","      <td>-4.332489</td>\n","      <td>-8.411251</td>\n","      <td>2.436726</td>\n","      <td>1.459265</td>\n","      <td>0.029166</td>\n","      <td>48.092388</td>\n","      <td>1.015230</td>\n","      <td>...</td>\n","      <td>58.009400</td>\n","      <td>3.251759</td>\n","      <td>439.611659</td>\n","      <td>62.292803</td>\n","      <td>21.426163</td>\n","      <td>42.629270</td>\n","      <td>21.327653</td>\n","      <td>3.976593</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2.307475</td>\n","      <td>0.842399</td>\n","      <td>0.709637</td>\n","      <td>2.494173</td>\n","      <td>-5.548458</td>\n","      <td>6.352721</td>\n","      <td>0.709637</td>\n","      <td>0.108667</td>\n","      <td>10.930011</td>\n","      <td>1.282584</td>\n","      <td>...</td>\n","      <td>37.285689</td>\n","      <td>2.788485</td>\n","      <td>6092.273632</td>\n","      <td>235.566933</td>\n","      <td>47.641229</td>\n","      <td>44.089441</td>\n","      <td>18.788212</td>\n","      <td>2.098816</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>-0.876954</td>\n","      <td>0.603183</td>\n","      <td>0.363829</td>\n","      <td>-1.010116</td>\n","      <td>-5.711226</td>\n","      <td>2.800559</td>\n","      <td>0.363829</td>\n","      <td>0.072352</td>\n","      <td>16.832129</td>\n","      <td>1.235047</td>\n","      <td>...</td>\n","      <td>14.784819</td>\n","      <td>3.466234</td>\n","      <td>2339.739461</td>\n","      <td>143.981679</td>\n","      <td>26.881912</td>\n","      <td>31.913806</td>\n","      <td>12.180580</td>\n","      <td>2.435904</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>195</th>\n","      <td>-1.026608</td>\n","      <td>0.673073</td>\n","      <td>0.453027</td>\n","      <td>-0.895221</td>\n","      <td>-7.166558</td>\n","      <td>4.294190</td>\n","      <td>0.453027</td>\n","      <td>0.190876</td>\n","      <td>6.090877</td>\n","      <td>1.327769</td>\n","      <td>...</td>\n","      <td>55.028680</td>\n","      <td>2.829569</td>\n","      <td>549.013560</td>\n","      <td>50.597313</td>\n","      <td>19.869369</td>\n","      <td>32.719328</td>\n","      <td>26.388016</td>\n","      <td>3.308674</td>\n","      <td>1</td>\n","      <td>25</td>\n","    </tr>\n","    <tr>\n","      <th>196</th>\n","      <td>0.855077</td>\n","      <td>0.705780</td>\n","      <td>0.498126</td>\n","      <td>0.684581</td>\n","      <td>-2.963326</td>\n","      <td>16.674097</td>\n","      <td>0.498126</td>\n","      <td>0.117301</td>\n","      <td>10.614548</td>\n","      <td>1.285143</td>\n","      <td>...</td>\n","      <td>10.241707</td>\n","      <td>3.310003</td>\n","      <td>806.514682</td>\n","      <td>67.316092</td>\n","      <td>34.419324</td>\n","      <td>31.208080</td>\n","      <td>14.308119</td>\n","      <td>3.121754</td>\n","      <td>0</td>\n","      <td>25</td>\n","    </tr>\n","    <tr>\n","      <th>197</th>\n","      <td>1.761846</td>\n","      <td>0.449221</td>\n","      <td>0.201799</td>\n","      <td>1.766506</td>\n","      <td>-3.710142</td>\n","      <td>6.534637</td>\n","      <td>0.201799</td>\n","      <td>0.241573</td>\n","      <td>5.045190</td>\n","      <td>1.340544</td>\n","      <td>...</td>\n","      <td>14.401712</td>\n","      <td>2.614483</td>\n","      <td>929.661063</td>\n","      <td>66.896045</td>\n","      <td>27.174102</td>\n","      <td>28.494446</td>\n","      <td>13.939820</td>\n","      <td>2.230978</td>\n","      <td>0</td>\n","      <td>25</td>\n","    </tr>\n","    <tr>\n","      <th>198</th>\n","      <td>-0.530926</td>\n","      <td>1.917458</td>\n","      <td>3.676647</td>\n","      <td>-0.694156</td>\n","      <td>-11.762347</td>\n","      <td>10.220843</td>\n","      <td>3.676647</td>\n","      <td>0.049494</td>\n","      <td>22.914340</td>\n","      <td>1.349513</td>\n","      <td>...</td>\n","      <td>11.727418</td>\n","      <td>2.334435</td>\n","      <td>346.849914</td>\n","      <td>31.735962</td>\n","      <td>34.137930</td>\n","      <td>32.800019</td>\n","      <td>15.050338</td>\n","      <td>2.446117</td>\n","      <td>1</td>\n","      <td>25</td>\n","    </tr>\n","    <tr>\n","      <th>199</th>\n","      <td>0.666244</td>\n","      <td>0.960139</td>\n","      <td>0.921866</td>\n","      <td>1.144160</td>\n","      <td>-5.213348</td>\n","      <td>5.682502</td>\n","      <td>0.921866</td>\n","      <td>0.092335</td>\n","      <td>12.092435</td>\n","      <td>1.449848</td>\n","      <td>...</td>\n","      <td>9.168454</td>\n","      <td>3.958936</td>\n","      <td>429.863409</td>\n","      <td>47.130917</td>\n","      <td>20.924372</td>\n","      <td>23.692223</td>\n","      <td>11.364165</td>\n","      <td>3.710480</td>\n","      <td>1</td>\n","      <td>25</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>200 rows × 586 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b9535646-e410-4313-a46b-d80f9df1b91b')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-b9535646-e410-4313-a46b-d80f9df1b91b button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-b9535646-e410-4313-a46b-d80f9df1b91b');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-fc6d84ff-308c-4836-a971-dfd515c63bbf\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-fc6d84ff-308c-4836-a971-dfd515c63bbf')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-fc6d84ff-308c-4836-a971-dfd515c63bbf button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_2baf408e-4b3e-4311-a5e5-dabac3afb7a5\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df_time_frequency')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_2baf408e-4b3e-4311-a5e5-dabac3afb7a5 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df_time_frequency');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_time_frequency"}},"metadata":{},"execution_count":28}]},{"cell_type":"code","source":["# concate eeg and hm data\n","df_time_frequency=df_time_frequency.reset_index(drop=True)\n","df_time_frequency=pd.concat([df_rhm, df_time_frequency],axis=1)"],"metadata":{"id":"Ze3OQDnxJSWz","executionInfo":{"status":"ok","timestamp":1713879694745,"user_tz":240,"elapsed":9,"user":{"displayName":"Wang","userId":"06822780026042244845"}}},"execution_count":29,"outputs":[]},{"cell_type":"markdown","source":["## Train test split"],"metadata":{"id":"B2qpOAqvUo2E"}},{"cell_type":"code","source":["train_time_frequency = df_time_frequency[df_time_frequency['Folder'].isin(train_folders)]\n","X_train_time_frequency =train_time_frequency.iloc[:,:-2]\n","y_train_time_frequency=train_time_frequency.iloc[:,-2]\n","\n","test_time_frequency = df_time_frequency[df_time_frequency['Folder'].isin(test_folders)]\n","X_test_time_frequency =test_time_frequency.iloc[:,:-2]\n","y_test_time_frequency=test_time_frequency.iloc[:,-2]"],"metadata":{"id":"yFcbe_CmUoCe","executionInfo":{"status":"ok","timestamp":1713879694745,"user_tz":240,"elapsed":9,"user":{"displayName":"Wang","userId":"06822780026042244845"}}},"execution_count":30,"outputs":[]},{"cell_type":"markdown","source":["## DNN and CV"],"metadata":{"id":"x0pXAbDtU_pA"}},{"cell_type":"code","source":["# # Now we will perform cross-validation\n","# # Prepare full dataset\n","# X_full = df_time_filtered.iloc[:, :-2]\n","# y_full = df_time_filtered.iloc[:, -2]\n","\n","# # Initialize KFold\n","# kf = StratifiedKFold(n_splits=5, shuffle=True, random_state=42)\n","\n","# To store scores\n","cv_scores = []\n","best_model_time_frequency = 0\n","best_accuracy_time_frequency = 0  # Initialize best accuracy to zero\n","train_folders_name=train_folders.copy()\n","\n","\n","for i in range(fold): #5 fold cross validation\n","    # Shuffle the folder names to ensure random distribution\n","    random.shuffle(train_folders_name)\n","    # print(train_folders_name)\n","\n","    # Calculate the indices for the 90-10 split\n","    train_split_cv = int(0.9 * len(train_folders_name))  # 90% for training\n","    # valid_split = train_split + int(0.1 * len(folder_names))  # 10% for validation\n","\n","    # Split the folders into training, validation\n","    train_folders_cv = train_folders_name[:train_split_cv]\n","    # valid_folders = folder_names[train_split:valid_split]\n","    val_folders_cv = train_folders_name[train_split_cv:]\n","    # print(\"train_folders_cv\",len(train_folders_cv))\n","    # print(\"val_folders_cv\",val_folders_cv)\n","\n","    train_cv = train_time_frequency[train_time_frequency['Folder'].isin(train_folders_cv)]\n","    X_train_cv =train_cv.iloc[:,:-2]\n","    y_train_cv=train_cv.iloc[:,-2]\n","    # display(val_cv)\n","\n","    val_cv = train_time_frequency[train_time_frequency['Folder'].isin(val_folders_cv)]\n","    X_val_cv =val_cv.iloc[:,:-2]\n","    y_val_cv=val_cv.iloc[:,-2]\n","\n","    # Define the model\n","    model_time_frequency = create_model(X_train_cv.shape[1])\n","\n","    # Create a custom callback to print loss and accuracy every 20 epochs\n","    print_callback = LambdaCallback(on_epoch_end=lambda epoch, logs:\n","                                    print(f\"Epoch: {epoch+1}, Loss: {logs['loss']:.4f}, Accuracy: {logs['accuracy']:.4f}\")\n","                                    if (epoch+1) % 20 == 0 else None)\n","\n","    # Train the model\n","    history = model_time_frequency.fit(X_train_cv, y_train_cv,\n","                             epochs=100,\n","                             batch_size=batch_size,\n","                             verbose=0,\n","                             callbacks=[print_callback],\n","                             validation_data=(X_val_cv, y_val_cv))\n","\n","    # Evaluate the model on the validation set\n","    val_predictions = (model_time_frequency.predict(X_val_cv) > 0.5).astype(\"int32\")\n","    val_accuracy = accuracy_score(y_val_cv, val_predictions)\n","    cv_scores.append(val_accuracy)\n","    print(f\"Fold completed. Validation accuracy: {val_accuracy * 100:.2f}%\")\n","\n","    # Check if the current model has the best accuracy\n","    if val_accuracy > best_accuracy_time_frequency:\n","        best_accuracy_time_frequency = val_accuracy\n","        best_model_time_frequency = model_time_frequency\n","\n","# Report the best accuracy found\n","print(f\"Best validation accuracy: {best_accuracy_time_frequency * 100:.2f}%\")\n"],"metadata":{"id":"MgnZbbiPVBfY","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1713879730792,"user_tz":240,"elapsed":36055,"user":{"displayName":"Wang","userId":"06822780026042244845"}},"outputId":"0204a188-1e76-4af4-ab13-5abbad5febf3"},"execution_count":31,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch: 20, Loss: 119.4848, Accuracy: 0.5735\n","Epoch: 40, Loss: 55.3510, Accuracy: 0.6029\n","Epoch: 60, Loss: 9.8457, Accuracy: 0.5882\n","Epoch: 80, Loss: 9.8329, Accuracy: 0.5368\n","Epoch: 100, Loss: 6.0496, Accuracy: 0.5662\n","1/1 [==============================] - 0s 61ms/step\n","Fold completed. Validation accuracy: 62.50%\n","Epoch: 20, Loss: 133.5981, Accuracy: 0.6397\n","Epoch: 40, Loss: 49.7387, Accuracy: 0.6912\n","Epoch: 60, Loss: 20.7762, Accuracy: 0.6691\n","Epoch: 80, Loss: 9.4335, Accuracy: 0.6691\n","Epoch: 100, Loss: 8.0902, Accuracy: 0.7353\n","1/1 [==============================] - 0s 63ms/step\n","Fold completed. Validation accuracy: 18.75%\n","Epoch: 20, Loss: 176.4375, Accuracy: 0.5441\n","Epoch: 40, Loss: 79.6252, Accuracy: 0.6324\n","Epoch: 60, Loss: 44.8614, Accuracy: 0.5882\n","Epoch: 80, Loss: 17.2784, Accuracy: 0.6324\n","Epoch: 100, Loss: 12.6438, Accuracy: 0.6176\n","1/1 [==============================] - 0s 103ms/step\n","Fold completed. Validation accuracy: 75.00%\n","Epoch: 20, Loss: 120.0588, Accuracy: 0.6471\n","Epoch: 40, Loss: 38.3786, Accuracy: 0.6838\n","Epoch: 60, Loss: 16.5402, Accuracy: 0.6029\n","Epoch: 80, Loss: 2.2414, Accuracy: 0.6324\n","Epoch: 100, Loss: 3.5841, Accuracy: 0.7059\n","1/1 [==============================] - 0s 80ms/step\n","Fold completed. Validation accuracy: 50.00%\n","Epoch: 20, Loss: 157.3366, Accuracy: 0.5882\n","Epoch: 40, Loss: 76.1933, Accuracy: 0.6176\n","Epoch: 60, Loss: 41.2151, Accuracy: 0.7279\n","Epoch: 80, Loss: 13.3162, Accuracy: 0.6397\n","Epoch: 100, Loss: 14.4011, Accuracy: 0.6691\n","1/1 [==============================] - 0s 89ms/step\n","Fold completed. Validation accuracy: 56.25%\n","Best validation accuracy: 75.00%\n"]}]},{"cell_type":"markdown","source":["# Theoretically Important Position only"],"metadata":{"id":"FzcnhyT6XOlA"}},{"cell_type":"markdown","source":["## Extract Data"],"metadata":{"id":"c64LIHlfXTiG"}},{"cell_type":"code","source":["df_time_frequency.columns"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"SKxzkTZhXS2x","executionInfo":{"status":"ok","timestamp":1713879730793,"user_tz":240,"elapsed":15,"user":{"displayName":"Wang","userId":"06822780026042244845"}},"outputId":"869c3b8b-859e-4bfc-bddc-81e0cfef3c03"},"execution_count":32,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['X_mean_acc', 'X_std_acc', 'X_var_acc', 'X_median_acc', 'X_min_acc',\n","       'X_max_acc', 'X_activity_acc', 'X_mobility_acc', 'X_complexity_acc',\n","       'X_ar_coeff_0_acc',\n","       ...\n","       'F8_Gamma_power', 'F8_spectral_entropy', 'AF4_Delta_power',\n","       'AF4_Theta_power', 'AF4_Alpha_power', 'AF4_Beta_power',\n","       'AF4_Gamma_power', 'AF4_spectral_entropy', 'Emotion', 'Folder'],\n","      dtype='object', length=738)"]},"metadata":{},"execution_count":32}]},{"cell_type":"code","source":["# Assuming df_time_frequency is your DataFrame\n","selected_columns = [col for col in df_time_frequency.columns if any(feature in col for feature in ['F3', 'F4', 'FC5', 'FC6', 'O1', 'O2', 'Emotion','Folder'])]\n","\n","# Creating a new DataFrame with the selected columns\n","df_important_positions = df_time_frequency[selected_columns]\n","df_important_positions"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":443},"id":"N2K-j_ssXXmY","executionInfo":{"status":"ok","timestamp":1713879730793,"user_tz":240,"elapsed":11,"user":{"displayName":"Wang","userId":"06822780026042244845"}},"outputId":"23bb2bb5-e5f5-47a9-fb76-0c27ba7726f7"},"execution_count":33,"outputs":[{"output_type":"execute_result","data":{"text/plain":["        AF3_mean    AF3_std      AF3_var   AF3_median      AF3_min  \\\n","0    4233.422687  43.471805  1889.797801  4231.794922  3241.025635   \n","1    4231.008787  44.189663  1952.726344  4229.743652  3387.692139   \n","2    4235.494381  25.175706   633.816192  4233.846191  3968.205078   \n","3    4237.481215  86.477155  7478.298389  4236.922852  3529.743408   \n","4    4233.419821  34.626376  1198.985906  4230.769043  3809.230713   \n","..           ...        ...          ...          ...          ...   \n","195  4239.671983  97.882280  9580.940701  4237.948730   759.487183   \n","196  4229.912101  50.426474  2542.829266  4228.205078  3890.256348   \n","197  4234.076193  32.293637  1042.878960  4234.871582  4091.281982   \n","198  4236.514296  21.179939   448.589826  4236.410156  4070.769043   \n","199  4237.631749  19.933718   397.353096  4237.436035  4154.871582   \n","\n","         AF3_max  AF3_activity  AF3_mobility  AF3_complexity  AF3_ar_coeff_0  \\\n","0    4429.230469   1889.797801      0.212561        5.546035        1.886056   \n","1    5505.127930   1952.726344      0.269354        4.519996        1.854385   \n","2    4438.974121    633.816192      0.379098        3.379011        1.709990   \n","3    5739.486816   7478.298389      0.111843       11.086097        1.798939   \n","4    4543.589844   1198.985906      0.264964        4.459335        1.864686   \n","..           ...           ...           ...             ...             ...   \n","195  4835.384277   9580.940701      0.106721       10.789804        1.931506   \n","196  4543.076660   2542.829266      0.105597       11.185909        1.850163   \n","197  4401.025391   1042.878960      0.171739        7.219231        1.768337   \n","198  4437.435547    448.589826      0.276163        4.529806        1.562347   \n","199  4365.641113    397.353096      0.257500        4.828735        1.731316   \n","\n","     ...  F4_Gamma_power  F4_spectral_entropy  AF4_Delta_power  \\\n","0    ...       12.029786             3.181718       722.066811   \n","1    ...       12.436428             3.171125       988.999364   \n","2    ...       14.274776             3.909695       439.611659   \n","3    ...       15.984435             2.310437      6092.273632   \n","4    ...       14.544876             3.747753      2339.739461   \n","..   ...             ...                  ...              ...   \n","195  ...       28.791751             4.099605       549.013560   \n","196  ...        6.217567             2.119598       806.514682   \n","197  ...        6.597051             1.864852       929.661063   \n","198  ...        7.239505             3.359720       346.849914   \n","199  ...        5.487111             3.543667       429.863409   \n","\n","     AF4_Theta_power  AF4_Alpha_power  AF4_Beta_power  AF4_Gamma_power  \\\n","0          73.374318        26.934085       39.510158        12.868163   \n","1         104.930425        34.668521       50.649449        20.801604   \n","2          62.292803        21.426163       42.629270        21.327653   \n","3         235.566933        47.641229       44.089441        18.788212   \n","4         143.981679        26.881912       31.913806        12.180580   \n","..               ...              ...             ...              ...   \n","195        50.597313        19.869369       32.719328        26.388016   \n","196        67.316092        34.419324       31.208080        14.308119   \n","197        66.896045        27.174102       28.494446        13.939820   \n","198        31.735962        34.137930       32.800019        15.050338   \n","199        47.130917        20.924372       23.692223        11.364165   \n","\n","     AF4_spectral_entropy  Emotion  Folder  \n","0                3.228577        1       1  \n","1                2.722334        1       1  \n","2                3.976593        0       1  \n","3                2.098816        0       1  \n","4                2.435904        1       1  \n","..                    ...      ...     ...  \n","195              3.308674        1      25  \n","196              3.121754        0      25  \n","197              2.230978        0      25  \n","198              2.446117        1      25  \n","199              3.710480        1      25  \n","\n","[200 rows x 162 columns]"],"text/html":["\n","  <div id=\"df-a50def80-d2e2-4492-a16d-1dc136b2eeec\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>AF3_mean</th>\n","      <th>AF3_std</th>\n","      <th>AF3_var</th>\n","      <th>AF3_median</th>\n","      <th>AF3_min</th>\n","      <th>AF3_max</th>\n","      <th>AF3_activity</th>\n","      <th>AF3_mobility</th>\n","      <th>AF3_complexity</th>\n","      <th>AF3_ar_coeff_0</th>\n","      <th>...</th>\n","      <th>F4_Gamma_power</th>\n","      <th>F4_spectral_entropy</th>\n","      <th>AF4_Delta_power</th>\n","      <th>AF4_Theta_power</th>\n","      <th>AF4_Alpha_power</th>\n","      <th>AF4_Beta_power</th>\n","      <th>AF4_Gamma_power</th>\n","      <th>AF4_spectral_entropy</th>\n","      <th>Emotion</th>\n","      <th>Folder</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>4233.422687</td>\n","      <td>43.471805</td>\n","      <td>1889.797801</td>\n","      <td>4231.794922</td>\n","      <td>3241.025635</td>\n","      <td>4429.230469</td>\n","      <td>1889.797801</td>\n","      <td>0.212561</td>\n","      <td>5.546035</td>\n","      <td>1.886056</td>\n","      <td>...</td>\n","      <td>12.029786</td>\n","      <td>3.181718</td>\n","      <td>722.066811</td>\n","      <td>73.374318</td>\n","      <td>26.934085</td>\n","      <td>39.510158</td>\n","      <td>12.868163</td>\n","      <td>3.228577</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>4231.008787</td>\n","      <td>44.189663</td>\n","      <td>1952.726344</td>\n","      <td>4229.743652</td>\n","      <td>3387.692139</td>\n","      <td>5505.127930</td>\n","      <td>1952.726344</td>\n","      <td>0.269354</td>\n","      <td>4.519996</td>\n","      <td>1.854385</td>\n","      <td>...</td>\n","      <td>12.436428</td>\n","      <td>3.171125</td>\n","      <td>988.999364</td>\n","      <td>104.930425</td>\n","      <td>34.668521</td>\n","      <td>50.649449</td>\n","      <td>20.801604</td>\n","      <td>2.722334</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>4235.494381</td>\n","      <td>25.175706</td>\n","      <td>633.816192</td>\n","      <td>4233.846191</td>\n","      <td>3968.205078</td>\n","      <td>4438.974121</td>\n","      <td>633.816192</td>\n","      <td>0.379098</td>\n","      <td>3.379011</td>\n","      <td>1.709990</td>\n","      <td>...</td>\n","      <td>14.274776</td>\n","      <td>3.909695</td>\n","      <td>439.611659</td>\n","      <td>62.292803</td>\n","      <td>21.426163</td>\n","      <td>42.629270</td>\n","      <td>21.327653</td>\n","      <td>3.976593</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4237.481215</td>\n","      <td>86.477155</td>\n","      <td>7478.298389</td>\n","      <td>4236.922852</td>\n","      <td>3529.743408</td>\n","      <td>5739.486816</td>\n","      <td>7478.298389</td>\n","      <td>0.111843</td>\n","      <td>11.086097</td>\n","      <td>1.798939</td>\n","      <td>...</td>\n","      <td>15.984435</td>\n","      <td>2.310437</td>\n","      <td>6092.273632</td>\n","      <td>235.566933</td>\n","      <td>47.641229</td>\n","      <td>44.089441</td>\n","      <td>18.788212</td>\n","      <td>2.098816</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4233.419821</td>\n","      <td>34.626376</td>\n","      <td>1198.985906</td>\n","      <td>4230.769043</td>\n","      <td>3809.230713</td>\n","      <td>4543.589844</td>\n","      <td>1198.985906</td>\n","      <td>0.264964</td>\n","      <td>4.459335</td>\n","      <td>1.864686</td>\n","      <td>...</td>\n","      <td>14.544876</td>\n","      <td>3.747753</td>\n","      <td>2339.739461</td>\n","      <td>143.981679</td>\n","      <td>26.881912</td>\n","      <td>31.913806</td>\n","      <td>12.180580</td>\n","      <td>2.435904</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>195</th>\n","      <td>4239.671983</td>\n","      <td>97.882280</td>\n","      <td>9580.940701</td>\n","      <td>4237.948730</td>\n","      <td>759.487183</td>\n","      <td>4835.384277</td>\n","      <td>9580.940701</td>\n","      <td>0.106721</td>\n","      <td>10.789804</td>\n","      <td>1.931506</td>\n","      <td>...</td>\n","      <td>28.791751</td>\n","      <td>4.099605</td>\n","      <td>549.013560</td>\n","      <td>50.597313</td>\n","      <td>19.869369</td>\n","      <td>32.719328</td>\n","      <td>26.388016</td>\n","      <td>3.308674</td>\n","      <td>1</td>\n","      <td>25</td>\n","    </tr>\n","    <tr>\n","      <th>196</th>\n","      <td>4229.912101</td>\n","      <td>50.426474</td>\n","      <td>2542.829266</td>\n","      <td>4228.205078</td>\n","      <td>3890.256348</td>\n","      <td>4543.076660</td>\n","      <td>2542.829266</td>\n","      <td>0.105597</td>\n","      <td>11.185909</td>\n","      <td>1.850163</td>\n","      <td>...</td>\n","      <td>6.217567</td>\n","      <td>2.119598</td>\n","      <td>806.514682</td>\n","      <td>67.316092</td>\n","      <td>34.419324</td>\n","      <td>31.208080</td>\n","      <td>14.308119</td>\n","      <td>3.121754</td>\n","      <td>0</td>\n","      <td>25</td>\n","    </tr>\n","    <tr>\n","      <th>197</th>\n","      <td>4234.076193</td>\n","      <td>32.293637</td>\n","      <td>1042.878960</td>\n","      <td>4234.871582</td>\n","      <td>4091.281982</td>\n","      <td>4401.025391</td>\n","      <td>1042.878960</td>\n","      <td>0.171739</td>\n","      <td>7.219231</td>\n","      <td>1.768337</td>\n","      <td>...</td>\n","      <td>6.597051</td>\n","      <td>1.864852</td>\n","      <td>929.661063</td>\n","      <td>66.896045</td>\n","      <td>27.174102</td>\n","      <td>28.494446</td>\n","      <td>13.939820</td>\n","      <td>2.230978</td>\n","      <td>0</td>\n","      <td>25</td>\n","    </tr>\n","    <tr>\n","      <th>198</th>\n","      <td>4236.514296</td>\n","      <td>21.179939</td>\n","      <td>448.589826</td>\n","      <td>4236.410156</td>\n","      <td>4070.769043</td>\n","      <td>4437.435547</td>\n","      <td>448.589826</td>\n","      <td>0.276163</td>\n","      <td>4.529806</td>\n","      <td>1.562347</td>\n","      <td>...</td>\n","      <td>7.239505</td>\n","      <td>3.359720</td>\n","      <td>346.849914</td>\n","      <td>31.735962</td>\n","      <td>34.137930</td>\n","      <td>32.800019</td>\n","      <td>15.050338</td>\n","      <td>2.446117</td>\n","      <td>1</td>\n","      <td>25</td>\n","    </tr>\n","    <tr>\n","      <th>199</th>\n","      <td>4237.631749</td>\n","      <td>19.933718</td>\n","      <td>397.353096</td>\n","      <td>4237.436035</td>\n","      <td>4154.871582</td>\n","      <td>4365.641113</td>\n","      <td>397.353096</td>\n","      <td>0.257500</td>\n","      <td>4.828735</td>\n","      <td>1.731316</td>\n","      <td>...</td>\n","      <td>5.487111</td>\n","      <td>3.543667</td>\n","      <td>429.863409</td>\n","      <td>47.130917</td>\n","      <td>20.924372</td>\n","      <td>23.692223</td>\n","      <td>11.364165</td>\n","      <td>3.710480</td>\n","      <td>1</td>\n","      <td>25</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>200 rows × 162 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a50def80-d2e2-4492-a16d-1dc136b2eeec')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-a50def80-d2e2-4492-a16d-1dc136b2eeec button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-a50def80-d2e2-4492-a16d-1dc136b2eeec');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-9f9e0770-752a-4f9e-bda1-4346161df9a8\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9f9e0770-752a-4f9e-bda1-4346161df9a8')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-9f9e0770-752a-4f9e-bda1-4346161df9a8 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_b8d60edd-328b-4b79-8c12-849fa9eecd22\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df_important_positions')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_b8d60edd-328b-4b79-8c12-849fa9eecd22 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df_important_positions');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_important_positions"}},"metadata":{},"execution_count":33}]},{"cell_type":"code","source":["# concate eeg and hm data\n","df_important_positions=df_important_positions.reset_index(drop=True)\n","df_important_positions=pd.concat([df_rhm, df_important_positions],axis=1)"],"metadata":{"id":"WbGkPDNzJck1","executionInfo":{"status":"ok","timestamp":1713879730794,"user_tz":240,"elapsed":10,"user":{"displayName":"Wang","userId":"06822780026042244845"}}},"execution_count":34,"outputs":[]},{"cell_type":"markdown","source":["## Train test split"],"metadata":{"id":"-F1ZeiW6d_gv"}},{"cell_type":"code","source":["train_important_positions = df_important_positions[df_important_positions['Folder'].isin(train_folders)]\n","X_train_important_positions =train_important_positions.iloc[:,:-2]\n","y_train_important_positions=train_important_positions.iloc[:,-2]\n","\n","test_important_positions = df_important_positions[df_important_positions['Folder'].isin(test_folders)]\n","X_test_important_positions =test_important_positions.iloc[:,:-2]\n","y_test_important_positions=test_important_positions.iloc[:,-2]"],"metadata":{"id":"kq7JoWo5eXhM","executionInfo":{"status":"ok","timestamp":1713879731045,"user_tz":240,"elapsed":260,"user":{"displayName":"Wang","userId":"06822780026042244845"}}},"execution_count":35,"outputs":[]},{"cell_type":"markdown","source":["## DNN model +CV"],"metadata":{"id":"WS5bY3VEeCCA"}},{"cell_type":"code","source":["# To store scores\n","cv_scores = []\n","best_model_important_positions = 0\n","best_accuracy_important_positions = 0  # Initialize best accuracy to zero\n","train_folders_name=train_folders.copy()\n","\n","\n","for i in range(fold):\n","    # Shuffle the folder names to ensure random distribution\n","    random.shuffle(train_folders_name)\n","    # print(train_folders_name)\n","\n","    # Calculate the indices for the 90-10 split\n","    train_split_cv = int(0.9 * len(train_folders_name))  # 90% for training\n","    # valid_split = train_split + int(0.1 * len(folder_names))  # 10% for validation\n","\n","    # Split the folders into training, validation\n","    train_folders_cv = train_folders_name[:train_split_cv]\n","    # valid_folders = folder_names[train_split:valid_split]\n","    val_folders_cv = train_folders_name[train_split_cv:]\n","    # print(\"train_folders_cv\",len(train_folders_cv))\n","    # print(\"val_folders_cv\",val_folders_cv)\n","\n","    train_cv = train_important_positions[train_important_positions['Folder'].isin(train_folders_cv)]\n","    X_train_cv =train_cv.iloc[:,:-2]\n","    y_train_cv=train_cv.iloc[:,-2]\n","    # display(val_cv)\n","\n","    val_cv = train_important_positions[train_important_positions['Folder'].isin(val_folders_cv)]\n","    X_val_cv =val_cv.iloc[:,:-2]\n","    y_val_cv=val_cv.iloc[:,-2]\n","\n","    # Define the model\n","    model_important_positions = create_model(X_train_cv.shape[1])\n","\n","    # Create a custom callback to print loss and accuracy every 20 epochs\n","    print_callback = LambdaCallback(on_epoch_end=lambda epoch, logs:\n","                                    print(f\"Epoch: {epoch+1}, Loss: {logs['loss']:.4f}, Accuracy: {logs['accuracy']:.4f}\")\n","                                    if (epoch+1) % 20 == 0 else None)\n","\n","    # Train the model\n","    history = model_important_positions.fit(X_train_cv, y_train_cv,\n","                             epochs=100,\n","                             batch_size=batch_size,\n","                             verbose=0,\n","                             callbacks=[print_callback],\n","                             validation_data=(X_val_cv, y_val_cv))\n","\n","    # Evaluate the model on the validation set\n","    val_predictions = (model_important_positions.predict(X_val_cv) > 0.5).astype(\"int32\")\n","    val_accuracy = accuracy_score(y_val_cv, val_predictions)\n","    cv_scores.append(val_accuracy)\n","    print(f\"Fold completed. Validation accuracy: {val_accuracy * 100:.2f}%\")\n","\n","    # Check if the current model has the best accuracy\n","    if val_accuracy > best_accuracy_important_positions:\n","        best_accuracy_important_positions = val_accuracy\n","        best_model_important_positions = model_important_positions\n","\n","# Report the best accuracy found\n","print(f\"Best validation accuracy: {best_accuracy_important_positions * 100:.2f}%\")\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"GFllnm1HZmCC","outputId":"89826adb-4080-4ef7-b7cb-3fc57abbe8e1","executionInfo":{"status":"ok","timestamp":1713879773932,"user_tz":240,"elapsed":42888,"user":{"displayName":"Wang","userId":"06822780026042244845"}}},"execution_count":36,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch: 20, Loss: 122.4668, Accuracy: 0.5588\n","Epoch: 40, Loss: 42.2676, Accuracy: 0.6397\n","Epoch: 60, Loss: 33.4952, Accuracy: 0.5882\n","Epoch: 80, Loss: 9.9903, Accuracy: 0.5588\n","Epoch: 100, Loss: 5.4340, Accuracy: 0.6250\n","1/1 [==============================] - 0s 76ms/step\n","Fold completed. Validation accuracy: 62.50%\n","Epoch: 20, Loss: 58.9290, Accuracy: 0.6176\n","Epoch: 40, Loss: 31.8155, Accuracy: 0.6029\n","Epoch: 60, Loss: 28.2481, Accuracy: 0.5662\n","Epoch: 80, Loss: 3.5938, Accuracy: 0.6103\n","Epoch: 100, Loss: 2.5870, Accuracy: 0.6765\n","1/1 [==============================] - 0s 81ms/step\n","Fold completed. Validation accuracy: 37.50%\n","Epoch: 20, Loss: 147.4794, Accuracy: 0.5809\n","Epoch: 40, Loss: 63.7855, Accuracy: 0.6471\n","Epoch: 60, Loss: 29.1036, Accuracy: 0.5588\n","Epoch: 80, Loss: 30.0791, Accuracy: 0.6029\n","Epoch: 100, Loss: 30.7309, Accuracy: 0.5735\n","1/1 [==============================] - 0s 75ms/step\n","Fold completed. Validation accuracy: 50.00%\n","Epoch: 20, Loss: 61.6623, Accuracy: 0.6181\n","Epoch: 40, Loss: 30.2673, Accuracy: 0.5625\n","Epoch: 60, Loss: 14.7657, Accuracy: 0.6111\n","Epoch: 80, Loss: 10.7362, Accuracy: 0.6250\n","Epoch: 100, Loss: 4.1818, Accuracy: 0.6319\n","1/1 [==============================] - 0s 87ms/step\n","Fold completed. Validation accuracy: 62.50%\n","Epoch: 20, Loss: 155.4883, Accuracy: 0.5000\n","Epoch: 40, Loss: 62.4535, Accuracy: 0.6029\n","Epoch: 60, Loss: 38.5245, Accuracy: 0.5956\n","Epoch: 80, Loss: 25.4192, Accuracy: 0.4632\n","Epoch: 100, Loss: 8.7525, Accuracy: 0.5809\n","1/1 [==============================] - 0s 114ms/step\n","Fold completed. Validation accuracy: 62.50%\n","Best validation accuracy: 62.50%\n"]}]},{"cell_type":"markdown","source":["# Evaluation"],"metadata":{"id":"rWfzCo3i9osr"}},{"cell_type":"code","source":["from sklearn.metrics import accuracy_score, confusion_matrix, ConfusionMatrixDisplay\n","from sklearn.metrics import classification_report\n","import matplotlib.pyplot as plt\n","\n","# Predict on the test set\n","y_pred_time = (best_model_time.predict(X_test_time) > 0.5).astype(\"int32\")\n","\n","# Calculate test accuracy\n","test_accuracy_time = accuracy_score(y_test_time, y_pred_time)\n","print(f\"Test Accuracy: {test_accuracy_time * 100:.2f}%\")\n","\n","# Generate the confusion matrix\n","conf_matrix_time = confusion_matrix(y_test_time, y_pred_time)\n","\n","# Plot the confusion matrix\n","ConfusionMatrixDisplay(conf_matrix_time).plot(values_format='d')\n","plt.title('Confusion Matrix')\n","plt.show()\n","\n","# Print classification report\n","report_time = classification_report(y_test_time, y_pred_time)\n","print(\"Classification Report:\")\n","print(report_time)\n"],"metadata":{"id":"zyNacevWbcUG","colab":{"base_uri":"https://localhost:8080/","height":680},"executionInfo":{"status":"ok","timestamp":1713879774155,"user_tz":240,"elapsed":267,"user":{"displayName":"Wang","userId":"06822780026042244845"}},"outputId":"5949f9b4-184e-4533-849c-802751dfbfa5"},"execution_count":37,"outputs":[{"output_type":"stream","name":"stdout","text":["2/2 [==============================] - 0s 5ms/step\n","Test Accuracy: 54.17%\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 2 Axes>"],"image/png":"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JJ04caJMx+/evVtBQUFq3LixU3tsbKyqVq2q3bt3O7XHx8eXuka1atX0+++/lzPi0m6//Xa1b99egwcPVq1atdS/f3+98847F03qJXE2adKk1L5mzZrpt99+U0FBgVP7ud+lWrVqkuTSd7n55psVGRmpt99+W4sXL9Y111xT6m9Zwm63a8aMGbr88stltVpVo0YNXXbZZfrxxx91/PjxMt+zTp06Lk1se+aZZxQTE6OsrCzNnj1bNWvWLPO5gFmQyOEzoqKiFBcXp59++sml886dbHYhwcHB5203DKPc9ygZvy0RHh6uzMxMff7557r77rv1448/6vbbb9cNN9xQ6lh3uPNdSlitVvXt21cLFizQkiVLLliNS9KTTz6p1NRUderUSa+//ro+/fRTLV++XM2bNy9zz4N09u/jih9++EGHDh2SJG3atMmlcwGzIJHDp9x6663asWOH1q5d+5fHJiQkyG63a/v27U7tBw8e1LFjxxwz0D2hWrVqTjO8S5xb9UtSUFCQrr/+ek2fPl2//PKLpk6dqpUrV+qLL74477VL4ty6dWupfVu2bFGNGjVUpUoV977ABdx555364YcfdOLEifNOECzx7rvvqmvXrnr11VfVv39/3XjjjerWrVupv0lZf1SVRUFBgVJSUpSYmKj77rtP06ZN0/fff++x6wOBgkQOn/LYY4+pSpUqGjx4sA4ePFhq/44dOzRr1ixJZ7uGJZWaWT59+nRJ0i233OKxuBo1aqTjx4/rxx9/dLTt379fS5YscTru6NGjpc4tWRjl3EfiStSuXVutW7fWggULnBLjTz/9pM8++8zxPStC165dNXnyZD3//POKjY294HHBwcGlqv1///vf2rt3r1NbyQ+O8/3ocdWoUaO0Z88eLViwQNOnT1f9+vWVnJx8wb8jYFYsCAOf0qhRI73xxhu6/fbb1axZM6eV3dasWaN///vfGjhwoCSpVatWSk5O1ksvvaRjx46pc+fO+u6777RgwQL17t37go82lUf//v01atQo9enTR8OGDdPJkyc1d+5cXXHFFU6TvSZNmqTMzEzdcsstSkhI0KFDh/TCCy+obt266tChwwWv//TTTyspKUnt2rXTvffeq1OnTum5555TdHS0JkyY4LHvca6goCD985///Mvjbr31Vk2aNEkpKSm67rrrtGnTJi1evFgNGzZ0Oq5R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rEmTJunMmTMVfu/3339fkydPLtOxZUm+AHAxrLWOgHXTTTdp/vz5Kioq0scff6wHH3xQlSpV0pgxY0ode/r0aYWGhnrkvjExMR65DgCUBRU5ApbValVsbKwSEhL0j3/8Q926ddPSpUsl/bc7fOrUqYqLi1OTJk0kSbm5uerXr5+qVq2qmJgY9erVS7t27XJc02azKTU1VVWrVlX16tX12GOP6dxVjs/tWi8qKtKoUaNUr149Wa1WNW7cWK+++qp27drlWN+7WrVqslgsGjhwoKSzb5dLS0tTgwYNFB4erlatWundd991us/HH3+sK664QuHh4eratatTnGU1atQoXXHFFapcubIaNmyosWPHqri4uNRxL774ourVq6fKlSurX79+On78uNP+V155Rc2aNVNYWJiaNm2qF154weVYAJQPiRymER4ertOnTzs+r1ixQlu3btXy5cv14Ycfqri4WN27d1dkZKS++uorff3114qIiNBNN93kOO/ZZ59Venq6XnvtNa1evVpHjx7VkiVLLnrfe+65R2+++aZmz56tzZs368UXX1RERITq1aun9957T5K0detW7d+/X7NmzZIkpaWlaeHChZo3b55+/vlnDR8+XHfddZe+/PJLSWd/cPTt21c9evRQVlaWBg8erNGjR7v8N4mMjFR6erp++eUXzZo1Sy+//LJmzJjhdEx2drbeeecdLVu2TJ988ol++OEHPfDAA479ixcv1rhx4zR16lRt3rxZTz75pMaOHasFCxa4HA+AcjCAAJScnGz06tXLMAzDsNvtxvLlyw2r1WqMGDHCsb9WrVpGUVGR45xFixYZTZo0Mex2u6OtqKjICA8PNz799FPDMAyjdu3axrRp0xz7i4uLjbp16zruZRiG0blzZ+Phhx82DMMwtm7dakgyli9fft44v/jiC0OS8fvvvzvaCgsLjcqVKxtr1qxxOvbee+817rjjDsMwDGPMmDFGYmKi0/5Ro0aVuta5JBlLliy54P6nn37aaNOmjePz+PHjjeDgYOPXX391tP3nP/8xgoKCjP379xuGYRiNGjUy3njjDafrTJ482WjXrp1hGIaRk5NjSDJ++OGHC94XQPkxRo6A9eGHHyoiIkLFxcWy2+268847NWHCBMf+li1bOo2Lb9y4UdnZ2YqMjHS6TmFhoXbs2KHjx49r//79Tq9uDQkJ0dVXX12qe71EVlaWgoOD1blz5zLHnZ2drZMnT+qGG25waj99+rT+9re/SZI2b95c6hWy7dq1K/M9Srz99tuaPXu2duzYofz8fJ05c0ZRUVFOx8THx6tOnTpO97Hb7dq6dasiIyO1Y8cO3XvvvRoyZIjjmDNnzig6OtrleAC4jkSOgNW1a1fNnTtXoaGhiouLU0iI8z/3KlWqOH3Oz89XmzZttHjx4lLXuuyyy8oVQ3h4uMvn5OfnS5I++ugjpwQqnR3395S1a9dqwIABmjhxorp3767o6Gi99dZbevbZZ12O9eWXXy71wyI4ONhjsQK4MBI5AlaVKlXUuHHjMh9/1VVX6e2331bNmjVLVaUlateurW+//VadOnWSdLbyXL9+va666qrzHt+yZUvZ7XZ9+eWX6tatW6n9JT0CNpvN0ZaYmCir1ao9e/ZcsJJv1qyZY+JeiW+++eavv+SfrFmzRgkJCXriiSccbbt37y513J49e7Rv3z7FxcU57hMUFKQmTZqoVq1aiouL086dOzVgwACX7g/AM5jsBvxhwIABqlGjhnr16qWvvvpKOTk5WrVqlYYNG6Zff/1VkvTwww/rqaeeUkZGhrZs2aIHHnjgos+A169fX8nJyRo0aJAyMjIc13znnXckSQkJCbJYLPrwww91+PBh5efnKzIyUiNGjNDw4cO1YMEC7dixQxs2bNBzzz3nmEB2//33a/v27Ro5cqS2bt2qN954Q+np6S5938svv1x79uzRW2+9pR07dmj27NnnnbgXFham5ORkbdy4UV999ZWGDRumfv36KTY2VpI0ceJEpaWlafbs2dq2bZs2bdqk+fPna/r06S7FA6B8SOTAHypXrqzMzEzFx8erb9++atasme69914VFhY6KvRHH31Ud999t5KTk9WuXTtFRkaqT58+F73u3Llzddttt+mBBx5Q06ZNNWTIEBUUFEiS6tSpo4kTJ2r06NGqVauWhg4dKkmaPHmyxo4dq7S0NDVr1kw33XSTPvroIzVo0EDS2XHr9957TxkZGWrVqpXmzZunJ5980qXv27NnTw0fPlxDhw5V69attWbNGo0dO7bUcY0bN1bfvn11880368Ybb9SVV17p9HjZ4MGD9corr2j+/Plq2bKlOnfurPT0dEesACqWxbjQLB0AAODzqMgBAPBjJHIAAPwYiRwAAD9GIgcAwI+RyAEA8GMkcgAA/BiJHAAAP0YiBwDAj5HIAQDwYyRyAAD8GIkcAAA/RiIHAMCP/X8ABbWgM9JIwgAAAABJRU5ErkJggg==\n"},"metadata":{}},{"output_type":"stream","name":"stdout","text":["Classification Report:\n","              precision    recall  f1-score   support\n","\n","           0       0.64      0.60      0.62        30\n","           1       0.40      0.44      0.42        18\n","\n","    accuracy                           0.54        48\n","   macro avg       0.52      0.52      0.52        48\n","weighted avg       0.55      0.54      0.55        48\n","\n"]}]},{"cell_type":"code","source":["from sklearn.metrics import accuracy_score, confusion_matrix, ConfusionMatrixDisplay\n","from sklearn.metrics import classification_report\n","import matplotlib.pyplot as plt\n","\n","# Assume we have a trained model, and the X_test and y_test sets as per your previous code.\n","\n","# Predict on the test set\n","y_pred_frequency = (best_model_frequency.predict(X_test_frequency) > 0.5).astype(\"int32\")\n","\n","# Calculate test accuracy\n","test_accuracy_frequency = accuracy_score(y_test_frequency, y_pred_frequency)\n","print(f\"Test Accuracy: {test_accuracy_frequency * 100:.2f}%\")\n","\n","# Generate the confusion matrix\n","conf_matrix_frequency = confusion_matrix(y_test_frequency, y_pred_frequency)\n","\n","# Plot the confusion matrix\n","ConfusionMatrixDisplay(conf_matrix_frequency).plot(values_format='d')\n","plt.title('Confusion Matrix')\n","plt.show()\n","\n","# Print classification report\n","report_frequency = classification_report(y_test_frequency, y_pred_frequency)\n","print(\"Classification Report:\")\n","print(report_frequency)\n"],"metadata":{"id":"Z2q05UU4bYs1","colab":{"base_uri":"https://localhost:8080/","height":680},"executionInfo":{"status":"ok","timestamp":1713879774993,"user_tz":240,"elapsed":846,"user":{"displayName":"Wang","userId":"06822780026042244845"}},"outputId":"53a73ab9-9856-4543-def8-d2c6668d7861"},"execution_count":38,"outputs":[{"output_type":"stream","name":"stdout","text":["2/2 [==============================] - 0s 9ms/step\n","Test Accuracy: 47.92%\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 2 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"stream","name":"stdout","text":["Classification Report:\n","              precision    recall  f1-score   support\n","\n","           0       0.61      0.47      0.53        30\n","           1       0.36      0.50      0.42        18\n","\n","    accuracy                           0.48        48\n","   macro avg       0.48      0.48      0.47        48\n","weighted avg       0.52      0.48      0.49        48\n","\n"]}]},{"cell_type":"code","source":["from sklearn.metrics import accuracy_score, confusion_matrix, ConfusionMatrixDisplay\n","from sklearn.metrics import classification_report\n","import matplotlib.pyplot as plt\n","\n","# Predict on the test set\n","y_pred_time_frequency = (best_model_time_frequency.predict(X_test_time_frequency) > 0.5).astype(\"int32\")\n","\n","# Calculate test accuracy\n","test_accuracy_time_frequency = accuracy_score(y_test_time_frequency, y_pred_time_frequency)\n","print(f\"Test Accuracy: {test_accuracy_time_frequency * 100:.2f}%\")\n","\n","# Generate the confusion matrix\n","conf_matrix_time_frequency = confusion_matrix(y_test_time_frequency, y_pred_time_frequency)\n","\n","# Plot the confusion matrix\n","ConfusionMatrixDisplay(conf_matrix_time_frequency).plot(values_format='d')\n","plt.title('Confusion Matrix')\n","plt.show()\n","\n","# Print classification report\n","report_time_frequency = classification_report(y_test_time_frequency, y_pred_time_frequency)\n","print(\"Classification Report:\")\n","print(report_time_frequency)\n"],"metadata":{"id":"fBno1H7YbTu9","colab":{"base_uri":"https://localhost:8080/","height":680},"executionInfo":{"status":"ok","timestamp":1713879775635,"user_tz":240,"elapsed":645,"user":{"displayName":"Wang","userId":"06822780026042244845"}},"outputId":"2a7b2eba-bb5c-420e-f112-cd8bd1c1027f"},"execution_count":39,"outputs":[{"output_type":"stream","name":"stdout","text":["2/2 [==============================] - 0s 6ms/step\n","Test Accuracy: 64.58%\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 2 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"stream","name":"stdout","text":["Classification Report:\n","              precision    recall  f1-score   support\n","\n","           0       0.68      0.83      0.75        30\n","           1       0.55      0.33      0.41        18\n","\n","    accuracy                           0.65        48\n","   macro avg       0.61      0.58      0.58        48\n","weighted avg       0.63      0.65      0.62        48\n","\n"]}]},{"cell_type":"code","source":["# Predict on the test set\n","y_pred_important_positions = (best_model_important_positions.predict(X_test_important_positions) > 0.5).astype(\"int32\")\n","\n","# Calculate test accuracy\n","test_accuracy_important_positions = accuracy_score(y_test_important_positions, y_pred_important_positions)\n","print(f\"Test Accuracy: {test_accuracy_important_positions * 100:.2f}%\")\n","\n","# Generate the confusion matrix\n","conf_matrix_important_positions = confusion_matrix(y_test_important_positions, y_pred_important_positions)\n","\n","# Plot the confusion matrix\n","ConfusionMatrixDisplay(conf_matrix_important_positions).plot(values_format='d')\n","plt.title('Confusion Matrix')\n","plt.show()\n","\n","# Print classification report\n","report_important_positions = classification_report(y_test_important_positions, y_pred_important_positions)\n","print(\"Classification Report:\")\n","print(report_important_positions)\n"],"metadata":{"id":"vA1bwz2YfjIk","colab":{"base_uri":"https://localhost:8080/","height":680},"executionInfo":{"status":"ok","timestamp":1713879776373,"user_tz":240,"elapsed":742,"user":{"displayName":"Wang","userId":"06822780026042244845"}},"outputId":"96bc6bb3-ecfb-4447-9f58-805d96903875"},"execution_count":40,"outputs":[{"output_type":"stream","name":"stdout","text":["2/2 [==============================] - 0s 10ms/step\n","Test Accuracy: 56.25%\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 2 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"stream","name":"stdout","text":["Classification Report:\n","              precision    recall  f1-score   support\n","\n","           0       0.76      0.43      0.55        30\n","           1       0.45      0.78      0.57        18\n","\n","    accuracy                           0.56        48\n","   macro avg       0.61      0.61      0.56        48\n","weighted avg       0.65      0.56      0.56        48\n","\n"]}]},{"cell_type":"code","source":["from sklearn.metrics import roc_curve, auc\n","import matplotlib.pyplot as plt\n","\n","# Assume models and test datasets are defined for each type\n","# Predict probabilities for the positive class for all models\n","y_pred_probs_time = best_model_time.predict(X_test_time).ravel()\n","y_pred_probs_frequency = best_model_frequency.predict(X_test_frequency).ravel()\n","y_pred_probs_time_frequency = best_model_time_frequency.predict(X_test_time_frequency).ravel()\n","y_pred_probs_important_positions = best_model_important_positions.predict(X_test_important_positions).ravel()  # New model\n","\n","# Compute the ROC curve for each model\n","fpr_time, tpr_time, thresholds_time = roc_curve(y_test_time, y_pred_probs_time)\n","roc_auc_time = auc(fpr_time, tpr_time)\n","\n","fpr_frequency, tpr_frequency, thresholds_frequency = roc_curve(y_test_frequency, y_pred_probs_frequency)\n","roc_auc_frequency = auc(fpr_frequency, tpr_frequency)\n","\n","fpr_time_frequency, tpr_time_frequency, thresholds_time_frequency = roc_curve(y_test_time_frequency, y_pred_probs_time_frequency)\n","roc_auc_time_frequency = auc(fpr_time_frequency, tpr_time_frequency)\n","\n","fpr_important_positions, tpr_important_positions, thresholds_important_positions = roc_curve(y_test_important_positions, y_pred_probs_important_positions)  # New ROC computation\n","roc_auc_important_positions = auc(fpr_important_positions, tpr_important_positions)  # New AUC computation\n","\n","# Plot the ROC curves\n","plt.figure(figsize=(10, 8))\n","plt.plot(fpr_time, tpr_time, color='darkorange', lw=2, label='Time ROC curve (area = %0.2f)' % roc_auc_time)\n","plt.plot(fpr_frequency, tpr_frequency, color='blue', lw=2, label='Frequency ROC curve (area = %0.2f)' % roc_auc_frequency)\n","plt.plot(fpr_time_frequency, tpr_time_frequency, color='yellow', lw=2, label='Time&Frequency ROC curve (area = %0.2f)' % roc_auc_time_frequency)\n","plt.plot(fpr_important_positions, tpr_important_positions, color='green', lw=2, label='Important Positions ROC curve (area = %0.2f)' % roc_auc_important_positions)  # New curve\n","plt.plot([0, 1], [0, 1], color='navy', lw=2, linestyle='--')\n","plt.xlim([0.0, 1.0])\n","plt.ylim([0.0, 1.05])\n","plt.xlabel('False Positive Rate')\n","plt.ylabel('True Positive Rate')\n","plt.title('Receiver Operating Characteristic')\n","plt.legend(loc=\"lower right\")\n","plt.show()\n"],"metadata":{"id":"B9EsUlfy9i4d","colab":{"base_uri":"https://localhost:8080/","height":787},"executionInfo":{"status":"ok","timestamp":1713879777432,"user_tz":240,"elapsed":1062,"user":{"displayName":"Wang","userId":"06822780026042244845"}},"outputId":"b43447d5-465b-487b-d1a9-2173eb43f7c9"},"execution_count":41,"outputs":[{"output_type":"stream","name":"stdout","text":["2/2 [==============================] - 0s 9ms/step\n","2/2 [==============================] - 0s 5ms/step\n","2/2 [==============================] - 0s 8ms/step\n","2/2 [==============================] - 0s 6ms/step\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x800 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":[],"metadata":{"id":"uTAYXQYiRf1U","executionInfo":{"status":"ok","timestamp":1713879777433,"user_tz":240,"elapsed":8,"user":{"displayName":"Wang","userId":"06822780026042244845"}}},"execution_count":41,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"yY2wY8OhTlZH","executionInfo":{"status":"ok","timestamp":1713879777433,"user_tz":240,"elapsed":7,"user":{"displayName":"Wang","userId":"06822780026042244845"}}},"execution_count":41,"outputs":[]}]}