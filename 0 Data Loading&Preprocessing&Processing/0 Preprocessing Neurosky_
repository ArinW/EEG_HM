{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"njynMa1VXSjc","executionInfo":{"status":"ok","timestamp":1713221102388,"user_tz":240,"elapsed":18883,"user":{"displayName":"Xinyi Wang","userId":"15258807589230504800"}},"outputId":"5cdcba86-25ca-4151-a659-5f9e8c2c6a64","colab":{"base_uri":"https://localhost:8080/"}},"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}],"source":["from google.colab import drive\n","drive.mount('/content/drive')"]},{"cell_type":"code","source":["import os\n","import pandas as pd\n","from IPython.display import display\n","import IPython\n","import numpy as np\n","import matplotlib.pyplot as plt\n","import glob"],"metadata":{"id":"yfQoEFDwXlxC"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Read the xlsx file.\n","file_path = \"/content/drive/MyDrive/Colab_Notebooks/MLMA Project/BS-HMS-Dataset/NeuroSky-based-Data/Demographic Details of the partcipants.xlsx\"\n","df = pd.read_excel(file_path)\n","df = df.dropna(axis = 1)"],"metadata":{"id":"7RJMAD_NK8NL"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Rename the data.\n","df.columns = ['User_ID','Age','Gender','Dominant_Hand','Date','Video_ID_Session1','Video_ID_Session2']"],"metadata":{"id":"PAbipdAjL_I3"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Turning these two columns into tuples.\n","df['Video_ID_Session1'] = df['Video_ID_Session1'].apply(lambda x: tuple(map(int, x.replace(' ', '').split(','))))\n","df['Video_ID_Session2'] = df['Video_ID_Session2'].apply(lambda x: tuple(map(int, x.replace(' ', '').split(','))))"],"metadata":{"id":"fZDe7IyuMM_2"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Creating a new Column that shows its folder_name\n","df['Folder_Name'] = ['User{:02d}'.format(i) for i in range(1, 33)]\n","df"],"metadata":{"id":"zcsQ5Mu5VRDK","colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"status":"ok","timestamp":1713221356425,"user_tz":240,"elapsed":155,"user":{"displayName":"Xinyi Wang","userId":"15258807589230504800"}},"outputId":"9338b267-e4d5-48db-e38a-9ba5bb72f269"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    User_ID  Age Gender Dominant_Hand                 Date Video_ID_Session1  \\\n","0         1   26      M         Right  2016-07-25 13:00:00          (16, 14)   \n","1         2   34      M         Right  2016-07-25 14:33:00           (17, 9)   \n","2         3   25      M         Right  2016-07-26 14:25:00          (14, 12)   \n","3         4   25      M         Right       July 26, 16:23          (16, 12)   \n","4         5   22      M         Right       July 26, 16:23          (16, 12)   \n","5         6   24      M         Right       July 27, 16:23          (14, 11)   \n","6         7   27      M         Right       July 29, 15:22          (17, 12)   \n","7         8   31      M         Right  2016-08-03 00:00:00          (17, 12)   \n","8         9   28      F         Right  2016-08-11 00:00:00           (13, 8)   \n","9        10   27      M         Right  2016-08-11 00:00:00          (14, 10)   \n","10       11   25      M         Right  2016-08-24 00:00:00          (17, 12)   \n","11       12   28      m         Right  2016-08-24 00:00:00          (17, 10)   \n","12       13   21      M         Right  2016-08-24 00:00:00          (18, 11)   \n","13       14   22      M         Right  2016-08-25 00:00:00          (17, 11)   \n","14       15   23      M         Right  2016-08-25 00:00:00           (18, 9)   \n","15       16   23      F         Right  2016-08-25 00:00:00          (18, 11)   \n","16       17   22      F         Right  2016-08-25 00:00:00          (14, 11)   \n","17       18   25      M         Right  2016-08-25 00:00:00          (17, 11)   \n","18       19   19      M         Right  2016-08-25 00:00:00          (17, 11)   \n","19       20   20      M         Right  2016-08-25 00:00:00          (16, 11)   \n","20       21   22      M         Right  August 29, 12:00 pm          (17, 11)   \n","21       22   22      F         Right  2016-08-29 00:00:00          (14, 10)   \n","22       23   23      M         Right  2016-08-29 00:00:00          (16, 11)   \n","23       24   18      M         Right  2016-08-29 00:00:00          (17, 11)   \n","24       25   25      M         Right  2016-08-29 19:50:00          (16, 11)   \n","25       26   21      F         Right     august 30, 11.15          (18, 10)   \n","26       27   22      F          Left  2016-08-30 00:00:00          (18, 10)   \n","27       28   21      M         Right  2016-08-30 00:00:00          (16, 11)   \n","28       29   27      M         Right  2016-08-30 00:00:00          (18, 10)   \n","29       30   21      M         Right  2016-08-30 00:00:00           (17, 9)   \n","30       31   22      M         Right  2016-08-30 00:00:00           (16, 9)   \n","31       32   22      M         Right  2016-09-01 00:00:00          (18, 10)   \n","\n","   Video_ID_Session2 Folder_Name  \n","0           (17, 10)      User01  \n","1           (14, 10)      User02  \n","2             (7, 9)      User03  \n","3            (14, 3)      User04  \n","4            (14, 4)      User05  \n","5           (16, 12)      User06  \n","6           (16, 11)      User07  \n","7           (16, 11)      User08  \n","8            (18, 9)      User09  \n","9           (17, 11)      User10  \n","10          (16, 10)      User11  \n","11           (16, 9)      User12  \n","12           (17, 9)      User13  \n","13           (16, 9)      User14  \n","14           (17, 8)      User15  \n","15          (14, 10)      User16  \n","16           (15, 9)      User17  \n","17           (16, 9)      User18  \n","18          (15, 10)      User19  \n","19          (17, 10)      User20  \n","20          (16, 10)      User21  \n","21          (18, 11)      User22  \n","22          (18, 10)      User23  \n","23          (16, 10)      User24  \n","24          (15, 10)      User25  \n","25           (14, 9)      User26  \n","26          (14, 11)      User27  \n","27          (18, 10)      User28  \n","28          (17, 11)      User29  \n","29          (16, 10)      User30  \n","30          (17, 10)      User31  \n","31          (16, 11)      User32  "],"text/html":["\n","  <div id=\"df-84082e69-7e37-4509-8753-a6dfcd4e3343\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>User_ID</th>\n","      <th>Age</th>\n","      <th>Gender</th>\n","      <th>Dominant_Hand</th>\n","      <th>Date</th>\n","      <th>Video_ID_Session1</th>\n","      <th>Video_ID_Session2</th>\n","      <th>Folder_Name</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>26</td>\n","      <td>M</td>\n","      <td>Right</td>\n","      <td>2016-07-25 13:00:00</td>\n","      <td>(16, 14)</td>\n","      <td>(17, 10)</td>\n","      <td>User01</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>34</td>\n","      <td>M</td>\n","      <td>Right</td>\n","      <td>2016-07-25 14:33:00</td>\n","      <td>(17, 9)</td>\n","      <td>(14, 10)</td>\n","      <td>User02</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>25</td>\n","      <td>M</td>\n","      <td>Right</td>\n","      <td>2016-07-26 14:25:00</td>\n","      <td>(14, 12)</td>\n","      <td>(7, 9)</td>\n","      <td>User03</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>25</td>\n","      <td>M</td>\n","      <td>Right</td>\n","      <td>July 26, 16:23</td>\n","      <td>(16, 12)</td>\n","      <td>(14, 3)</td>\n","      <td>User04</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>22</td>\n","      <td>M</td>\n","      <td>Right</td>\n","      <td>July 26, 16:23</td>\n","      <td>(16, 12)</td>\n","      <td>(14, 4)</td>\n","      <td>User05</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>6</td>\n","      <td>24</td>\n","      <td>M</td>\n","      <td>Right</td>\n","      <td>July 27, 16:23</td>\n","      <td>(14, 11)</td>\n","      <td>(16, 12)</td>\n","      <td>User06</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>7</td>\n","      <td>27</td>\n","      <td>M</td>\n","      <td>Right</td>\n","      <td>July 29, 15:22</td>\n","      <td>(17, 12)</td>\n","      <td>(16, 11)</td>\n","      <td>User07</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>8</td>\n","      <td>31</td>\n","      <td>M</td>\n","      <td>Right</td>\n","      <td>2016-08-03 00:00:00</td>\n","      <td>(17, 12)</td>\n","      <td>(16, 11)</td>\n","      <td>User08</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>9</td>\n","      <td>28</td>\n","      <td>F</td>\n","      <td>Right</td>\n","      <td>2016-08-11 00:00:00</td>\n","      <td>(13, 8)</td>\n","      <td>(18, 9)</td>\n","      <td>User09</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>10</td>\n","      <td>27</td>\n","      <td>M</td>\n","      <td>Right</td>\n","      <td>2016-08-11 00:00:00</td>\n","      <td>(14, 10)</td>\n","      <td>(17, 11)</td>\n","      <td>User10</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>11</td>\n","      <td>25</td>\n","      <td>M</td>\n","      <td>Right</td>\n","      <td>2016-08-24 00:00:00</td>\n","      <td>(17, 12)</td>\n","      <td>(16, 10)</td>\n","      <td>User11</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>12</td>\n","      <td>28</td>\n","      <td>m</td>\n","      <td>Right</td>\n","      <td>2016-08-24 00:00:00</td>\n","      <td>(17, 10)</td>\n","      <td>(16, 9)</td>\n","      <td>User12</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>13</td>\n","      <td>21</td>\n","      <td>M</td>\n","      <td>Right</td>\n","      <td>2016-08-24 00:00:00</td>\n","      <td>(18, 11)</td>\n","      <td>(17, 9)</td>\n","      <td>User13</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>14</td>\n","      <td>22</td>\n","      <td>M</td>\n","      <td>Right</td>\n","      <td>2016-08-25 00:00:00</td>\n","      <td>(17, 11)</td>\n","      <td>(16, 9)</td>\n","      <td>User14</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>15</td>\n","      <td>23</td>\n","      <td>M</td>\n","      <td>Right</td>\n","      <td>2016-08-25 00:00:00</td>\n","      <td>(18, 9)</td>\n","      <td>(17, 8)</td>\n","      <td>User15</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>16</td>\n","      <td>23</td>\n","      <td>F</td>\n","      <td>Right</td>\n","      <td>2016-08-25 00:00:00</td>\n","      <td>(18, 11)</td>\n","      <td>(14, 10)</td>\n","      <td>User16</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>17</td>\n","      <td>22</td>\n","      <td>F</td>\n","      <td>Right</td>\n","      <td>2016-08-25 00:00:00</td>\n","      <td>(14, 11)</td>\n","      <td>(15, 9)</td>\n","      <td>User17</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>18</td>\n","      <td>25</td>\n","      <td>M</td>\n","      <td>Right</td>\n","      <td>2016-08-25 00:00:00</td>\n","      <td>(17, 11)</td>\n","      <td>(16, 9)</td>\n","      <td>User18</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>19</td>\n","      <td>19</td>\n","      <td>M</td>\n","      <td>Right</td>\n","      <td>2016-08-25 00:00:00</td>\n","      <td>(17, 11)</td>\n","      <td>(15, 10)</td>\n","      <td>User19</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>20</td>\n","      <td>20</td>\n","      <td>M</td>\n","      <td>Right</td>\n","      <td>2016-08-25 00:00:00</td>\n","      <td>(16, 11)</td>\n","      <td>(17, 10)</td>\n","      <td>User20</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>21</td>\n","      <td>22</td>\n","      <td>M</td>\n","      <td>Right</td>\n","      <td>August 29, 12:00 pm</td>\n","      <td>(17, 11)</td>\n","      <td>(16, 10)</td>\n","      <td>User21</td>\n","    </tr>\n","    <tr>\n","      <th>21</th>\n","      <td>22</td>\n","      <td>22</td>\n","      <td>F</td>\n","      <td>Right</td>\n","      <td>2016-08-29 00:00:00</td>\n","      <td>(14, 10)</td>\n","      <td>(18, 11)</td>\n","      <td>User22</td>\n","    </tr>\n","    <tr>\n","      <th>22</th>\n","      <td>23</td>\n","      <td>23</td>\n","      <td>M</td>\n","      <td>Right</td>\n","      <td>2016-08-29 00:00:00</td>\n","      <td>(16, 11)</td>\n","      <td>(18, 10)</td>\n","      <td>User23</td>\n","    </tr>\n","    <tr>\n","      <th>23</th>\n","      <td>24</td>\n","      <td>18</td>\n","      <td>M</td>\n","      <td>Right</td>\n","      <td>2016-08-29 00:00:00</td>\n","      <td>(17, 11)</td>\n","      <td>(16, 10)</td>\n","      <td>User24</td>\n","    </tr>\n","    <tr>\n","      <th>24</th>\n","      <td>25</td>\n","      <td>25</td>\n","      <td>M</td>\n","      <td>Right</td>\n","      <td>2016-08-29 19:50:00</td>\n","      <td>(16, 11)</td>\n","      <td>(15, 10)</td>\n","      <td>User25</td>\n","    </tr>\n","    <tr>\n","      <th>25</th>\n","      <td>26</td>\n","      <td>21</td>\n","      <td>F</td>\n","      <td>Right</td>\n","      <td>august 30, 11.15</td>\n","      <td>(18, 10)</td>\n","      <td>(14, 9)</td>\n","      <td>User26</td>\n","    </tr>\n","    <tr>\n","      <th>26</th>\n","      <td>27</td>\n","      <td>22</td>\n","      <td>F</td>\n","      <td>Left</td>\n","      <td>2016-08-30 00:00:00</td>\n","      <td>(18, 10)</td>\n","      <td>(14, 11)</td>\n","      <td>User27</td>\n","    </tr>\n","    <tr>\n","      <th>27</th>\n","      <td>28</td>\n","      <td>21</td>\n","      <td>M</td>\n","      <td>Right</td>\n","      <td>2016-08-30 00:00:00</td>\n","      <td>(16, 11)</td>\n","      <td>(18, 10)</td>\n","      <td>User28</td>\n","    </tr>\n","    <tr>\n","      <th>28</th>\n","      <td>29</td>\n","      <td>27</td>\n","      <td>M</td>\n","      <td>Right</td>\n","      <td>2016-08-30 00:00:00</td>\n","      <td>(18, 10)</td>\n","      <td>(17, 11)</td>\n","      <td>User29</td>\n","    </tr>\n","    <tr>\n","      <th>29</th>\n","      <td>30</td>\n","      <td>21</td>\n","      <td>M</td>\n","      <td>Right</td>\n","      <td>2016-08-30 00:00:00</td>\n","      <td>(17, 9)</td>\n","      <td>(16, 10)</td>\n","      <td>User30</td>\n","    </tr>\n","    <tr>\n","      <th>30</th>\n","      <td>31</td>\n","      <td>22</td>\n","      <td>M</td>\n","      <td>Right</td>\n","      <td>2016-08-30 00:00:00</td>\n","      <td>(16, 9)</td>\n","      <td>(17, 10)</td>\n","      <td>User31</td>\n","    </tr>\n","    <tr>\n","      <th>31</th>\n","      <td>32</td>\n","      <td>22</td>\n","      <td>M</td>\n","      <td>Right</td>\n","      <td>2016-09-01 00:00:00</td>\n","      <td>(18, 10)</td>\n","      <td>(16, 11)</td>\n","      <td>User32</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-84082e69-7e37-4509-8753-a6dfcd4e3343')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-84082e69-7e37-4509-8753-a6dfcd4e3343 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-84082e69-7e37-4509-8753-a6dfcd4e3343');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-ef2d9a60-c049-4139-a49c-2c0342cd280b\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ef2d9a60-c049-4139-a49c-2c0342cd280b')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-ef2d9a60-c049-4139-a49c-2c0342cd280b button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_990f3a03-f3e2-4c59-b44b-5e40123d15b1\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_990f3a03-f3e2-4c59-b44b-5e40123d15b1 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 32,\n  \"fields\": [\n    {\n      \"column\": \"User_ID\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 9,\n        \"min\": 1,\n        \"max\": 32,\n        \"num_unique_values\": 32,\n        \"samples\": [\n          30,\n          16,\n          25\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3,\n        \"min\": 18,\n        \"max\": 34,\n        \"num_unique_values\": 13,\n        \"samples\": [\n          20,\n          23,\n          26\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Gender\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"M\",\n          \"F\",\n          \"m\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Dominant_Hand\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Left\",\n          \"Right\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Date\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 16,\n        \"samples\": [\n          \"2016-07-25 13:00:00\",\n          \"2016-07-25 14:33:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Video_ID_Session1\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 15,\n        \"samples\": [\n          [\n            18,\n            11\n          ],\n          [\n            18,\n            9\n          ]\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Video_ID_Session2\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 19,\n        \"samples\": [\n          [\n            17,\n            10\n          ],\n          [\n            16,\n            12\n          ]\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Folder_Name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 32,\n        \"samples\": [\n          \"User30\",\n          \"User16\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":12}]},{"cell_type":"code","source":["# Each participant has two sessions\n","# Eech session contains 4 activities\n","# Each activity contains 3 files: brain signals(1 file), hand movement(2 files)\n","\n","# • Activity One: Watch a randomly selected video that is categorized as Happy Emotion Video.\n","# • Activity Two: Type response to a set of questions related to the video in Activity One.\n","# • Activity Three: Watch a randomly selected video that is categorized as Sad Emotion Video.\n","# • Activity Four: Type response to a set of questions related to the video in Activity Three.\n","\n","# Get the video list\n","file_path = \"/content/drive/MyDrive/Colab_Notebooks/MLMA Project/BS-HMS-Dataset/List-of-Videos.xlsx\"\n","video_list = pd.read_excel(file_path)\n","video_list[video_list['ID'] == 1]['Emotion']\n","\n","# Create the DataFrame with file path and labels.\n","DATA = pd.DataFrame(columns=['User_ID', 'Age', 'Gender', 'Dominant_Hand', 'Date', 'File_Path', 'Label'])\n","for i, (index, row) in enumerate(df.iterrows()):\n","  User_ID = row['User_ID']\n","  Age = row['Age']\n","  Gender = row['Gender']\n","  Dominant_Hand = row['Dominant_Hand']\n","  Date = row['Date']\n","  file_path_1 =\"/content/drive/MyDrive/MLMA Project/BS-HMS-Dataset/NeuroSky-based-Data\" + '/' + row['Folder_Name'] + '/'+ 'Session-I'+'/' + 'Activity_One'\n","  label_1 = video_list[video_list['ID'] == row['Video_ID_Session1'][0]]['Emotion'].values[0]\n","  file_path_2 =\"/content/drive/MyDrive/MLMA Project/BS-HMS-Dataset/NeuroSky-based-Data\" + '/' + row['Folder_Name'] + '/'+ 'Session-I'+'/' + 'Activity_One'\n","  label_2 = video_list[video_list['ID'] == row['Video_ID_Session1'][1]]['Emotion'].values[0]\n","  file_path_3 =\"/content/drive/MyDrive/MLMA Project/BS-HMS-Dataset/NeuroSky-based-Data\" + '/' + row['Folder_Name'] + '/'+ 'Session-II'+'/' + 'Activity_One'\n","  label_3 = video_list[video_list['ID'] == row['Video_ID_Session2'][0]]['Emotion'].values[0]\n","  file_path_4 =\"/content/drive/MyDrive/MLMA Project/BS-HMS-Dataset/NeuroSky-based-Data\" + '/' + row['Folder_Name'] + '/'+ 'Session-II'+'/' + 'Activity_One'\n","  label_4 = video_list[video_list['ID'] == row['Video_ID_Session2'][1]]['Emotion'].values[0]\n","\n","  path_labels = [(file_path_1, label_1),\n","                 (file_path_2, label_2),\n","                 (file_path_3, label_3),\n","                 (file_path_4, label_4)]\n","  for path, label in path_labels:\n","    new_record = {\n","            'User_ID': User_ID,\n","            'Age': Age,\n","            'Gender': Gender,\n","            'Dominant_Hand': Dominant_Hand ,\n","            'Date': Date,\n","            'File_Path': path,\n","            'Label': label}\n","    new_record_df = pd.DataFrame([new_record])\n","\n","    # Concatenate this new DataFrame with DATAPD\n","    DATA = pd.concat([DATA, new_record_df], ignore_index=True)"],"metadata":{"id":"Xjf1kt-fZelF"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["DATA"],"metadata":{"id":"0_7YBIIrjc7G","executionInfo":{"status":"ok","timestamp":1713221386107,"user_tz":240,"elapsed":369,"user":{"displayName":"Xinyi Wang","userId":"15258807589230504800"}},"outputId":"3bef748e-6af8-4247-dedb-b7fc1a5d9fd3","colab":{"base_uri":"https://localhost:8080/","height":424}},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    User_ID Age Gender Dominant_Hand                 Date  \\\n","0         1  26      M         Right  2016-07-25 13:00:00   \n","1         1  26      M         Right  2016-07-25 13:00:00   \n","2         1  26      M         Right  2016-07-25 13:00:00   \n","3         1  26      M         Right  2016-07-25 13:00:00   \n","4         2  34      M         Right  2016-07-25 14:33:00   \n","..      ...  ..    ...           ...                  ...   \n","123      31  22      M         Right  2016-08-30 00:00:00   \n","124      32  22      M         Right  2016-09-01 00:00:00   \n","125      32  22      M         Right  2016-09-01 00:00:00   \n","126      32  22      M         Right  2016-09-01 00:00:00   \n","127      32  22      M         Right  2016-09-01 00:00:00   \n","\n","                                             File_Path  Label  \n","0    /content/drive/MyDrive/MLMA Project/BS-HMS-Dat...  Happy  \n","1    /content/drive/MyDrive/MLMA Project/BS-HMS-Dat...  Happy  \n","2    /content/drive/MyDrive/MLMA Project/BS-HMS-Dat...  Happy  \n","3    /content/drive/MyDrive/MLMA Project/BS-HMS-Dat...    Sad  \n","4    /content/drive/MyDrive/MLMA Project/BS-HMS-Dat...  Happy  \n","..                                                 ...    ...  \n","123  /content/drive/MyDrive/MLMA Project/BS-HMS-Dat...    Sad  \n","124  /content/drive/MyDrive/MLMA Project/BS-HMS-Dat...  Happy  \n","125  /content/drive/MyDrive/MLMA Project/BS-HMS-Dat...    Sad  \n","126  /content/drive/MyDrive/MLMA Project/BS-HMS-Dat...  Happy  \n","127  /content/drive/MyDrive/MLMA Project/BS-HMS-Dat...    Sad  \n","\n","[128 rows x 7 columns]"],"text/html":["\n","  <div id=\"df-efa69a0f-375f-4656-a929-e998bef6231d\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>User_ID</th>\n","      <th>Age</th>\n","      <th>Gender</th>\n","      <th>Dominant_Hand</th>\n","      <th>Date</th>\n","      <th>File_Path</th>\n","      <th>Label</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>26</td>\n","      <td>M</td>\n","      <td>Right</td>\n","      <td>2016-07-25 13:00:00</td>\n","      <td>/content/drive/MyDrive/MLMA Project/BS-HMS-Dat...</td>\n","      <td>Happy</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>26</td>\n","      <td>M</td>\n","      <td>Right</td>\n","      <td>2016-07-25 13:00:00</td>\n","      <td>/content/drive/MyDrive/MLMA Project/BS-HMS-Dat...</td>\n","      <td>Happy</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>26</td>\n","      <td>M</td>\n","      <td>Right</td>\n","      <td>2016-07-25 13:00:00</td>\n","      <td>/content/drive/MyDrive/MLMA Project/BS-HMS-Dat...</td>\n","      <td>Happy</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>26</td>\n","      <td>M</td>\n","      <td>Right</td>\n","      <td>2016-07-25 13:00:00</td>\n","      <td>/content/drive/MyDrive/MLMA Project/BS-HMS-Dat...</td>\n","      <td>Sad</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2</td>\n","      <td>34</td>\n","      <td>M</td>\n","      <td>Right</td>\n","      <td>2016-07-25 14:33:00</td>\n","      <td>/content/drive/MyDrive/MLMA Project/BS-HMS-Dat...</td>\n","      <td>Happy</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>123</th>\n","      <td>31</td>\n","      <td>22</td>\n","      <td>M</td>\n","      <td>Right</td>\n","      <td>2016-08-30 00:00:00</td>\n","      <td>/content/drive/MyDrive/MLMA Project/BS-HMS-Dat...</td>\n","      <td>Sad</td>\n","    </tr>\n","    <tr>\n","      <th>124</th>\n","      <td>32</td>\n","      <td>22</td>\n","      <td>M</td>\n","      <td>Right</td>\n","      <td>2016-09-01 00:00:00</td>\n","      <td>/content/drive/MyDrive/MLMA Project/BS-HMS-Dat...</td>\n","      <td>Happy</td>\n","    </tr>\n","    <tr>\n","      <th>125</th>\n","      <td>32</td>\n","      <td>22</td>\n","      <td>M</td>\n","      <td>Right</td>\n","      <td>2016-09-01 00:00:00</td>\n","      <td>/content/drive/MyDrive/MLMA Project/BS-HMS-Dat...</td>\n","      <td>Sad</td>\n","    </tr>\n","    <tr>\n","      <th>126</th>\n","      <td>32</td>\n","      <td>22</td>\n","      <td>M</td>\n","      <td>Right</td>\n","      <td>2016-09-01 00:00:00</td>\n","      <td>/content/drive/MyDrive/MLMA Project/BS-HMS-Dat...</td>\n","      <td>Happy</td>\n","    </tr>\n","    <tr>\n","      <th>127</th>\n","      <td>32</td>\n","      <td>22</td>\n","      <td>M</td>\n","      <td>Right</td>\n","      <td>2016-09-01 00:00:00</td>\n","      <td>/content/drive/MyDrive/MLMA Project/BS-HMS-Dat...</td>\n","      <td>Sad</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>128 rows × 7 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-efa69a0f-375f-4656-a929-e998bef6231d')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-efa69a0f-375f-4656-a929-e998bef6231d button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-efa69a0f-375f-4656-a929-e998bef6231d');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-6a08d9ea-d674-4be9-aa54-8dffe7136a29\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-6a08d9ea-d674-4be9-aa54-8dffe7136a29')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-6a08d9ea-d674-4be9-aa54-8dffe7136a29 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_0386fc32-1b2e-4264-b538-d48984454cfa\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('DATA')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_0386fc32-1b2e-4264-b538-d48984454cfa button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('DATA');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"DATA","summary":"{\n  \"name\": \"DATA\",\n  \"rows\": 128,\n  \"fields\": [\n    {\n      \"column\": \"User_ID\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 1,\n        \"max\": 32,\n        \"num_unique_values\": 32,\n        \"samples\": [\n          30,\n          16,\n          25\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Age\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 18,\n        \"max\": 34,\n        \"num_unique_values\": 13,\n        \"samples\": [\n          20,\n          23,\n          26\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Gender\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"M\",\n          \"F\",\n          \"m\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Dominant_Hand\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Left\",\n          \"Right\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Date\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 16,\n        \"samples\": [\n          \"2016-07-25 13:00:00\",\n          \"2016-07-25 14:33:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"File_Path\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 64,\n        \"samples\": [\n          \"/content/drive/MyDrive/MLMA Project/BS-HMS-Dataset/NeuroSky-based-Data/User27/Session-I/Activity_One\",\n          \"/content/drive/MyDrive/MLMA Project/BS-HMS-Dataset/NeuroSky-based-Data/User30/Session-I/Activity_One\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Label\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Sad\",\n          \"Happy\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":15}]},{"cell_type":"code","source":["plt.plot(DATA.Age)"],"metadata":{"id":"9_8l_TwxPXck","colab":{"base_uri":"https://localhost:8080/","height":430},"executionInfo":{"status":"ok","timestamp":1713221388230,"user_tz":240,"elapsed":2,"user":{"displayName":"Xinyi Wang","userId":"15258807589230504800"}},"outputId":"35d82f25-ea64-4e60-eb80-723dd1ad89be"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"source":["\n","\n","from matplotlib import pyplot as plt\n","import seaborn as sns\n","DATA.groupby('Label').size().plot(kind='barh', color=sns.palettes.mpl_palette('Dark2'))\n","plt.gca().spines[['top', 'right',]].set_visible(False)"],"cell_type":"code","execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}],"metadata":{"id":"d0bLDdmcuELy","colab":{"base_uri":"https://localhost:8080/","height":430},"executionInfo":{"status":"ok","timestamp":1713221391358,"user_tz":240,"elapsed":1439,"user":{"displayName":"Xinyi Wang","userId":"15258807589230504800"}},"outputId":"5bd278ef-b99f-44cc-edf1-a63da548c352"}},{"source":["\n","\n","from matplotlib import pyplot as plt\n","import seaborn as sns\n","DATA.groupby('Gender').size().plot(kind='barh', color=sns.palettes.mpl_palette('Dark2'))\n","plt.gca().spines[['top', 'right',]].set_visible(False)"],"cell_type":"code","execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}],"metadata":{"id":"CmNz2xyQt91t","colab":{"base_uri":"https://localhost:8080/","height":430},"executionInfo":{"status":"ok","timestamp":1713221391525,"user_tz":240,"elapsed":169,"user":{"displayName":"Xinyi Wang","userId":"15258807589230504800"}},"outputId":"86967d9c-5215-4260-9b81-36f8415a151d"}},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n","\n","fig, axes = plt.subplots(nrows=1, ncols=2, figsize=(20, 8))\n","\n","age_counts = DATA['Age'].value_counts().sort_index()\n","axes[0].bar(age_counts.index, age_counts.values)\n","axes[0].set_title('Distribution of Age', fontsize=20)\n","axes[0].set_xlabel('Age', fontsize=15)\n","axes[0].set_ylabel('Frequency', fontsize=15)\n","axes[0].tick_params(labelrotation=45)\n","\n","gender_counts = DATA['Gender'].value_counts()\n","axes[1].bar(gender_counts.index, gender_counts.values)\n","axes[1].set_title('Distribution of Gender', fontsize=20)\n","axes[1].set_xlabel('Gender', fontsize=15)\n","axes[1].set_ylabel('Frequency', fontsize=15)\n","\n","plt.tight_layout()\n","\n","plt.show()"],"metadata":{"id":"3D67wh5Os36P","colab":{"base_uri":"https://localhost:8080/","height":568},"executionInfo":{"status":"ok","timestamp":1713221397958,"user_tz":240,"elapsed":2755,"user":{"displayName":"Xinyi Wang","userId":"15258807589230504800"}},"outputId":"ab185de0-4784-47dc-8113-d4fcecc7331f"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 2000x800 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]}]}