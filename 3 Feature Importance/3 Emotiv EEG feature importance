{"cells":[{"cell_type":"code","execution_count":73,"metadata":{"id":"Ma1h3Y1DoSl2","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1713901694108,"user_tz":240,"elapsed":2264,"user":{"displayName":"Wang","userId":"06822780026042244845"}},"outputId":"5876c159-74ce-41ee-8265-a84242a8c166"},"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"]}],"source":["from google.colab import drive\n","drive.mount('/content/drive')"]},{"cell_type":"code","execution_count":74,"metadata":{"id":"r4AOB6Zvoaug","executionInfo":{"status":"ok","timestamp":1713901694108,"user_tz":240,"elapsed":9,"user":{"displayName":"Wang","userId":"06822780026042244845"}}},"outputs":[],"source":["import pandas as pd\n","import numpy as np"]},{"cell_type":"markdown","metadata":{"id":"5TfBr573x27p"},"source":["# Time Domain Feature"]},{"cell_type":"markdown","metadata":{"id":"dPyQvA3d9Cqn"},"source":["## Load Data"]},{"cell_type":"code","execution_count":75,"metadata":{"id":"X55kdfKYpdmA","executionInfo":{"status":"ok","timestamp":1713901694108,"user_tz":240,"elapsed":8,"user":{"displayName":"Wang","userId":"06822780026042244845"}}},"outputs":[],"source":["df_time=pd.read_csv(\"/content/drive/MyDrive/JHU/MLMA/MLMA Project/BS-HMS-Dataset/time_domain_features\")"]},{"cell_type":"code","execution_count":76,"metadata":{"id":"obmgOg6aqkRn","colab":{"base_uri":"https://localhost:8080/","height":272},"executionInfo":{"status":"ok","timestamp":1713901694109,"user_tz":240,"elapsed":9,"user":{"displayName":"Wang","userId":"06822780026042244845"}},"outputId":"c8136455-1eea-40e6-c1f0-98f5702851a8"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Unnamed: 0     AF3_mean    AF3_std      AF3_var   AF3_median      AF3_min  \\\n","0           0  4233.422687  43.471805  1889.797801  4231.794922  3241.025635   \n","1           1  4231.008787  44.189663  1952.726344  4229.743652  3387.692139   \n","2           2  4235.494381  25.175706   633.816192  4233.846191  3968.205078   \n","3           3  4237.481215  86.477155  7478.298389  4236.922852  3529.743408   \n","4           4  4233.419821  34.626376  1198.985906  4230.769043  3809.230713   \n","\n","       AF3_max  AF3_activity  AF3_mobility  AF3_complexity  ...      AF4_max  \\\n","0  4429.230469   1889.797801      0.212561        5.546035  ...  4798.461426   \n","1  5505.127930   1952.726344      0.269354        4.519996  ...  5405.641113   \n","2  4438.974121    633.816192      0.379098        3.379011  ...  4456.922852   \n","3  5739.486816   7478.298389      0.111843       11.086097  ...  7725.640625   \n","4  4543.589844   1198.985906      0.264964        4.459335  ...  5711.794922   \n","\n","   AF4_activity  AF4_mobility  AF4_complexity  AF4_ar_coeff_0  AF4_ar_coeff_1  \\\n","0   1955.207164      0.201175        5.853881        1.888919       -1.916397   \n","1   4047.042955      0.181730        6.655339        1.869903       -1.917447   \n","2    788.581256      0.362081        3.528739        1.719312       -1.716449   \n","3  30770.363380      0.065568       16.047249        2.014694       -1.962541   \n","4   9459.787110      0.097349       11.212047        1.916121       -1.784461   \n","\n","   AF4_ar_coeff_2  AF4_ar_coeff_3  AF4_ar_coeff_4         Test  \n","0        1.774889       -1.162047        0.414635  EEG_Test0_1  \n","1        1.803922       -1.177878        0.421499  EEG_Test0_2  \n","2        1.651069       -1.060818        0.406884  EEG_Test0_3  \n","3        1.826205       -1.251982        0.373620  EEG_Test0_4  \n","4        1.639423       -1.070856        0.299771  EEG_Test0_5  \n","\n","[5 rows x 198 columns]"],"text/html":["\n","  <div id=\"df-125394d6-0260-4bfa-a363-63069e0a1de8\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>AF3_mean</th>\n","      <th>AF3_std</th>\n","      <th>AF3_var</th>\n","      <th>AF3_median</th>\n","      <th>AF3_min</th>\n","      <th>AF3_max</th>\n","      <th>AF3_activity</th>\n","      <th>AF3_mobility</th>\n","      <th>AF3_complexity</th>\n","      <th>...</th>\n","      <th>AF4_max</th>\n","      <th>AF4_activity</th>\n","      <th>AF4_mobility</th>\n","      <th>AF4_complexity</th>\n","      <th>AF4_ar_coeff_0</th>\n","      <th>AF4_ar_coeff_1</th>\n","      <th>AF4_ar_coeff_2</th>\n","      <th>AF4_ar_coeff_3</th>\n","      <th>AF4_ar_coeff_4</th>\n","      <th>Test</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>4233.422687</td>\n","      <td>43.471805</td>\n","      <td>1889.797801</td>\n","      <td>4231.794922</td>\n","      <td>3241.025635</td>\n","      <td>4429.230469</td>\n","      <td>1889.797801</td>\n","      <td>0.212561</td>\n","      <td>5.546035</td>\n","      <td>...</td>\n","      <td>4798.461426</td>\n","      <td>1955.207164</td>\n","      <td>0.201175</td>\n","      <td>5.853881</td>\n","      <td>1.888919</td>\n","      <td>-1.916397</td>\n","      <td>1.774889</td>\n","      <td>-1.162047</td>\n","      <td>0.414635</td>\n","      <td>EEG_Test0_1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>4231.008787</td>\n","      <td>44.189663</td>\n","      <td>1952.726344</td>\n","      <td>4229.743652</td>\n","      <td>3387.692139</td>\n","      <td>5505.127930</td>\n","      <td>1952.726344</td>\n","      <td>0.269354</td>\n","      <td>4.519996</td>\n","      <td>...</td>\n","      <td>5405.641113</td>\n","      <td>4047.042955</td>\n","      <td>0.181730</td>\n","      <td>6.655339</td>\n","      <td>1.869903</td>\n","      <td>-1.917447</td>\n","      <td>1.803922</td>\n","      <td>-1.177878</td>\n","      <td>0.421499</td>\n","      <td>EEG_Test0_2</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>4235.494381</td>\n","      <td>25.175706</td>\n","      <td>633.816192</td>\n","      <td>4233.846191</td>\n","      <td>3968.205078</td>\n","      <td>4438.974121</td>\n","      <td>633.816192</td>\n","      <td>0.379098</td>\n","      <td>3.379011</td>\n","      <td>...</td>\n","      <td>4456.922852</td>\n","      <td>788.581256</td>\n","      <td>0.362081</td>\n","      <td>3.528739</td>\n","      <td>1.719312</td>\n","      <td>-1.716449</td>\n","      <td>1.651069</td>\n","      <td>-1.060818</td>\n","      <td>0.406884</td>\n","      <td>EEG_Test0_3</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>4237.481215</td>\n","      <td>86.477155</td>\n","      <td>7478.298389</td>\n","      <td>4236.922852</td>\n","      <td>3529.743408</td>\n","      <td>5739.486816</td>\n","      <td>7478.298389</td>\n","      <td>0.111843</td>\n","      <td>11.086097</td>\n","      <td>...</td>\n","      <td>7725.640625</td>\n","      <td>30770.363380</td>\n","      <td>0.065568</td>\n","      <td>16.047249</td>\n","      <td>2.014694</td>\n","      <td>-1.962541</td>\n","      <td>1.826205</td>\n","      <td>-1.251982</td>\n","      <td>0.373620</td>\n","      <td>EEG_Test0_4</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>4233.419821</td>\n","      <td>34.626376</td>\n","      <td>1198.985906</td>\n","      <td>4230.769043</td>\n","      <td>3809.230713</td>\n","      <td>4543.589844</td>\n","      <td>1198.985906</td>\n","      <td>0.264964</td>\n","      <td>4.459335</td>\n","      <td>...</td>\n","      <td>5711.794922</td>\n","      <td>9459.787110</td>\n","      <td>0.097349</td>\n","      <td>11.212047</td>\n","      <td>1.916121</td>\n","      <td>-1.784461</td>\n","      <td>1.639423</td>\n","      <td>-1.070856</td>\n","      <td>0.299771</td>\n","      <td>EEG_Test0_5</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows Ã— 198 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-125394d6-0260-4bfa-a363-63069e0a1de8')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-125394d6-0260-4bfa-a363-63069e0a1de8 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-125394d6-0260-4bfa-a363-63069e0a1de8');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-5a50bd25-0158-42d7-969e-eebde2c0ca94\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-5a50bd25-0158-42d7-969e-eebde2c0ca94')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-5a50bd25-0158-42d7-969e-eebde2c0ca94 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_time"}},"metadata":{},"execution_count":76}],"source":["df_time.head()"]},{"cell_type":"code","execution_count":77,"metadata":{"id":"n9vteu-dujn5","colab":{"base_uri":"https://localhost:8080/","height":461},"executionInfo":{"status":"ok","timestamp":1713901694109,"user_tz":240,"elapsed":7,"user":{"displayName":"Wang","userId":"06822780026042244845"}},"outputId":"a3fbfa89-da28-483b-f28f-70009f670bf0"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Unnamed: 0     AF3_mean    AF3_std      AF3_var   AF3_median  \\\n","0             0  4233.422687  43.471805  1889.797801  4231.794922   \n","1             1  4231.008787  44.189663  1952.726344  4229.743652   \n","2             2  4235.494381  25.175706   633.816192  4233.846191   \n","3             3  4237.481215  86.477155  7478.298389  4236.922852   \n","4             4  4233.419821  34.626376  1198.985906  4230.769043   \n","..          ...          ...        ...          ...          ...   \n","211         211  4239.671983  97.882280  9580.940701  4237.948730   \n","212         212  4229.912101  50.426474  2542.829266  4228.205078   \n","213         213  4234.076193  32.293637  1042.878960  4234.871582   \n","214         214  4236.514296  21.179939   448.589826  4236.410156   \n","215         215  4237.631749  19.933718   397.353096  4237.436035   \n","\n","         AF3_min      AF3_max  AF3_activity  AF3_mobility  AF3_complexity  \\\n","0    3241.025635  4429.230469   1889.797801      0.212561        5.546035   \n","1    3387.692139  5505.127930   1952.726344      0.269354        4.519996   \n","2    3968.205078  4438.974121    633.816192      0.379098        3.379011   \n","3    3529.743408  5739.486816   7478.298389      0.111843       11.086097   \n","4    3809.230713  4543.589844   1198.985906      0.264964        4.459335   \n","..           ...          ...           ...           ...             ...   \n","211   759.487183  4835.384277   9580.940701      0.106721       10.789804   \n","212  3890.256348  4543.076660   2542.829266      0.105597       11.185909   \n","213  4091.281982  4401.025391   1042.878960      0.171739        7.219231   \n","214  4070.769043  4437.435547    448.589826      0.276163        4.529806   \n","215  4154.871582  4365.641113    397.353096      0.257500        4.828735   \n","\n","     ...      AF4_max  AF4_activity  AF4_mobility  AF4_complexity  \\\n","0    ...  4798.461426   1955.207164      0.201175        5.853881   \n","1    ...  5405.641113   4047.042955      0.181730        6.655339   \n","2    ...  4456.922852    788.581256      0.362081        3.528739   \n","3    ...  7725.640625  30770.363380      0.065568       16.047249   \n","4    ...  5711.794922   9459.787110      0.097349       11.212047   \n","..   ...          ...           ...           ...             ...   \n","211  ...  4534.358887   1341.930166      0.288382        4.671318   \n","212  ...  4649.230469   2125.336360      0.194158        6.114867   \n","213  ...  5397.948730   4823.841089      0.127178        9.549253   \n","214  ...  4794.358887   1804.680486      0.212828        5.879350   \n","215  ...  4411.281738    778.759752      0.278193        4.402478   \n","\n","     AF4_ar_coeff_0  AF4_ar_coeff_1  AF4_ar_coeff_2  AF4_ar_coeff_3  \\\n","0          1.888919       -1.916397        1.774889       -1.162047   \n","1          1.869903       -1.917447        1.803922       -1.177878   \n","2          1.719312       -1.716449        1.651069       -1.060818   \n","3          2.014694       -1.962541        1.826205       -1.251982   \n","4          1.916121       -1.784461        1.639423       -1.070856   \n","..              ...             ...             ...             ...   \n","211        1.619370       -1.575834        1.591902       -1.013965   \n","212        1.799081       -1.684543        1.536058       -0.908229   \n","213        1.850852       -1.822298        1.738571       -1.141967   \n","214        1.683692       -1.604122        1.484709       -0.874587   \n","215        1.824404       -1.814688        1.714828       -1.095232   \n","\n","     AF4_ar_coeff_4          Test  \n","0          0.414635   EEG_Test0_1  \n","1          0.421499   EEG_Test0_2  \n","2          0.406884   EEG_Test0_3  \n","3          0.373620   EEG_Test0_4  \n","4          0.299771   EEG_Test0_5  \n","..              ...           ...  \n","211        0.378527  EEG_Test26_4  \n","212        0.257632  EEG_Test26_5  \n","213        0.374842  EEG_Test26_6  \n","214        0.310306  EEG_Test26_7  \n","215        0.370687  EEG_Test26_8  \n","\n","[200 rows x 198 columns]"],"text/html":["\n","  <div id=\"df-15778fea-4544-4f67-b706-1a72481ef309\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>AF3_mean</th>\n","      <th>AF3_std</th>\n","      <th>AF3_var</th>\n","      <th>AF3_median</th>\n","      <th>AF3_min</th>\n","      <th>AF3_max</th>\n","      <th>AF3_activity</th>\n","      <th>AF3_mobility</th>\n","      <th>AF3_complexity</th>\n","      <th>...</th>\n","      <th>AF4_max</th>\n","      <th>AF4_activity</th>\n","      <th>AF4_mobility</th>\n","      <th>AF4_complexity</th>\n","      <th>AF4_ar_coeff_0</th>\n","      <th>AF4_ar_coeff_1</th>\n","      <th>AF4_ar_coeff_2</th>\n","      <th>AF4_ar_coeff_3</th>\n","      <th>AF4_ar_coeff_4</th>\n","      <th>Test</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>4233.422687</td>\n","      <td>43.471805</td>\n","      <td>1889.797801</td>\n","      <td>4231.794922</td>\n","      <td>3241.025635</td>\n","      <td>4429.230469</td>\n","      <td>1889.797801</td>\n","      <td>0.212561</td>\n","      <td>5.546035</td>\n","      <td>...</td>\n","      <td>4798.461426</td>\n","      <td>1955.207164</td>\n","      <td>0.201175</td>\n","      <td>5.853881</td>\n","      <td>1.888919</td>\n","      <td>-1.916397</td>\n","      <td>1.774889</td>\n","      <td>-1.162047</td>\n","      <td>0.414635</td>\n","      <td>EEG_Test0_1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>4231.008787</td>\n","      <td>44.189663</td>\n","      <td>1952.726344</td>\n","      <td>4229.743652</td>\n","      <td>3387.692139</td>\n","      <td>5505.127930</td>\n","      <td>1952.726344</td>\n","      <td>0.269354</td>\n","      <td>4.519996</td>\n","      <td>...</td>\n","      <td>5405.641113</td>\n","      <td>4047.042955</td>\n","      <td>0.181730</td>\n","      <td>6.655339</td>\n","      <td>1.869903</td>\n","      <td>-1.917447</td>\n","      <td>1.803922</td>\n","      <td>-1.177878</td>\n","      <td>0.421499</td>\n","      <td>EEG_Test0_2</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>4235.494381</td>\n","      <td>25.175706</td>\n","      <td>633.816192</td>\n","      <td>4233.846191</td>\n","      <td>3968.205078</td>\n","      <td>4438.974121</td>\n","      <td>633.816192</td>\n","      <td>0.379098</td>\n","      <td>3.379011</td>\n","      <td>...</td>\n","      <td>4456.922852</td>\n","      <td>788.581256</td>\n","      <td>0.362081</td>\n","      <td>3.528739</td>\n","      <td>1.719312</td>\n","      <td>-1.716449</td>\n","      <td>1.651069</td>\n","      <td>-1.060818</td>\n","      <td>0.406884</td>\n","      <td>EEG_Test0_3</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>4237.481215</td>\n","      <td>86.477155</td>\n","      <td>7478.298389</td>\n","      <td>4236.922852</td>\n","      <td>3529.743408</td>\n","      <td>5739.486816</td>\n","      <td>7478.298389</td>\n","      <td>0.111843</td>\n","      <td>11.086097</td>\n","      <td>...</td>\n","      <td>7725.640625</td>\n","      <td>30770.363380</td>\n","      <td>0.065568</td>\n","      <td>16.047249</td>\n","      <td>2.014694</td>\n","      <td>-1.962541</td>\n","      <td>1.826205</td>\n","      <td>-1.251982</td>\n","      <td>0.373620</td>\n","      <td>EEG_Test0_4</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>4233.419821</td>\n","      <td>34.626376</td>\n","      <td>1198.985906</td>\n","      <td>4230.769043</td>\n","      <td>3809.230713</td>\n","      <td>4543.589844</td>\n","      <td>1198.985906</td>\n","      <td>0.264964</td>\n","      <td>4.459335</td>\n","      <td>...</td>\n","      <td>5711.794922</td>\n","      <td>9459.787110</td>\n","      <td>0.097349</td>\n","      <td>11.212047</td>\n","      <td>1.916121</td>\n","      <td>-1.784461</td>\n","      <td>1.639423</td>\n","      <td>-1.070856</td>\n","      <td>0.299771</td>\n","      <td>EEG_Test0_5</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>211</th>\n","      <td>211</td>\n","      <td>4239.671983</td>\n","      <td>97.882280</td>\n","      <td>9580.940701</td>\n","      <td>4237.948730</td>\n","      <td>759.487183</td>\n","      <td>4835.384277</td>\n","      <td>9580.940701</td>\n","      <td>0.106721</td>\n","      <td>10.789804</td>\n","      <td>...</td>\n","      <td>4534.358887</td>\n","      <td>1341.930166</td>\n","      <td>0.288382</td>\n","      <td>4.671318</td>\n","      <td>1.619370</td>\n","      <td>-1.575834</td>\n","      <td>1.591902</td>\n","      <td>-1.013965</td>\n","      <td>0.378527</td>\n","      <td>EEG_Test26_4</td>\n","    </tr>\n","    <tr>\n","      <th>212</th>\n","      <td>212</td>\n","      <td>4229.912101</td>\n","      <td>50.426474</td>\n","      <td>2542.829266</td>\n","      <td>4228.205078</td>\n","      <td>3890.256348</td>\n","      <td>4543.076660</td>\n","      <td>2542.829266</td>\n","      <td>0.105597</td>\n","      <td>11.185909</td>\n","      <td>...</td>\n","      <td>4649.230469</td>\n","      <td>2125.336360</td>\n","      <td>0.194158</td>\n","      <td>6.114867</td>\n","      <td>1.799081</td>\n","      <td>-1.684543</td>\n","      <td>1.536058</td>\n","      <td>-0.908229</td>\n","      <td>0.257632</td>\n","      <td>EEG_Test26_5</td>\n","    </tr>\n","    <tr>\n","      <th>213</th>\n","      <td>213</td>\n","      <td>4234.076193</td>\n","      <td>32.293637</td>\n","      <td>1042.878960</td>\n","      <td>4234.871582</td>\n","      <td>4091.281982</td>\n","      <td>4401.025391</td>\n","      <td>1042.878960</td>\n","      <td>0.171739</td>\n","      <td>7.219231</td>\n","      <td>...</td>\n","      <td>5397.948730</td>\n","      <td>4823.841089</td>\n","      <td>0.127178</td>\n","      <td>9.549253</td>\n","      <td>1.850852</td>\n","      <td>-1.822298</td>\n","      <td>1.738571</td>\n","      <td>-1.141967</td>\n","      <td>0.374842</td>\n","      <td>EEG_Test26_6</td>\n","    </tr>\n","    <tr>\n","      <th>214</th>\n","      <td>214</td>\n","      <td>4236.514296</td>\n","      <td>21.179939</td>\n","      <td>448.589826</td>\n","      <td>4236.410156</td>\n","      <td>4070.769043</td>\n","      <td>4437.435547</td>\n","      <td>448.589826</td>\n","      <td>0.276163</td>\n","      <td>4.529806</td>\n","      <td>...</td>\n","      <td>4794.358887</td>\n","      <td>1804.680486</td>\n","      <td>0.212828</td>\n","      <td>5.879350</td>\n","      <td>1.683692</td>\n","      <td>-1.604122</td>\n","      <td>1.484709</td>\n","      <td>-0.874587</td>\n","      <td>0.310306</td>\n","      <td>EEG_Test26_7</td>\n","    </tr>\n","    <tr>\n","      <th>215</th>\n","      <td>215</td>\n","      <td>4237.631749</td>\n","      <td>19.933718</td>\n","      <td>397.353096</td>\n","      <td>4237.436035</td>\n","      <td>4154.871582</td>\n","      <td>4365.641113</td>\n","      <td>397.353096</td>\n","      <td>0.257500</td>\n","      <td>4.828735</td>\n","      <td>...</td>\n","      <td>4411.281738</td>\n","      <td>778.759752</td>\n","      <td>0.278193</td>\n","      <td>4.402478</td>\n","      <td>1.824404</td>\n","      <td>-1.814688</td>\n","      <td>1.714828</td>\n","      <td>-1.095232</td>\n","      <td>0.370687</td>\n","      <td>EEG_Test26_8</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>200 rows Ã— 198 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-15778fea-4544-4f67-b706-1a72481ef309')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-15778fea-4544-4f67-b706-1a72481ef309 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-15778fea-4544-4f67-b706-1a72481ef309');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-22a1fdd3-158c-49d4-b209-899c88b99cfe\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-22a1fdd3-158c-49d4-b209-899c88b99cfe')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-22a1fdd3-158c-49d4-b209-899c88b99cfe button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_bd4d63ab-a842-43ad-809d-4ccf3044f99f\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df_time_filtered')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_bd4d63ab-a842-43ad-809d-4ccf3044f99f button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df_time_filtered');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_time_filtered"}},"metadata":{},"execution_count":77}],"source":["rows_to_drop = ['Test20', 'Test21', 'Test27']\n","df_time_filtered = df_time[~df_time['Test'].str.contains('|'.join(rows_to_drop))]\n","df_time_filtered"]},{"cell_type":"code","execution_count":78,"metadata":{"id":"1KBh-AYiq5J6","colab":{"base_uri":"https://localhost:8080/","height":206},"executionInfo":{"status":"ok","timestamp":1713901694330,"user_tz":240,"elapsed":227,"user":{"displayName":"Wang","userId":"06822780026042244845"}},"outputId":"d9e33211-42a7-4cb1-ab27-6c665550025c"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["  User ID  Age  Gender Dominant Hand            Date / Time  Video ID 1  \\\n","0   Test0   27    Male         Right  08/18/2019/2:00:00 PM          15   \n","1   Test1   24    Male         Right  08/18/2019/3:20:00 PM           5   \n","2   test2   30  Female         Right  08/19/2019/4:20:00 PM           8   \n","3   test3   25    Male         Right  08/20/2019/1:28:00 PM          14   \n","4   test4   24    Male          Left  08/21/2019/3:20:00 PM          12   \n","\n","   Video ID 2            Date / Time  Video ID 3  Video ID 4  \n","0           8  08/23/2019/3:40:00 PM         2.0        11.0  \n","1           5  08/22/2019/4:30:00 PM         9.0         5.0  \n","2          11  08/20/2019/4:40:00 PM         5.0         2.0  \n","3           7  08/28/2019/3:15:00 PM        15.0         1.0  \n","4           6  08/30/2019/5:10:00 PM        15.0        19.0  "],"text/html":["\n","  <div id=\"df-e4e83976-f9fa-411b-92ec-a13114a94399\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>User ID</th>\n","      <th>Age</th>\n","      <th>Gender</th>\n","      <th>Dominant Hand</th>\n","      <th>Date / Time</th>\n","      <th>Video ID 1</th>\n","      <th>Video ID 2</th>\n","      <th>Date / Time</th>\n","      <th>Video ID 3</th>\n","      <th>Video ID 4</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Test0</td>\n","      <td>27</td>\n","      <td>Male</td>\n","      <td>Right</td>\n","      <td>08/18/2019/2:00:00 PM</td>\n","      <td>15</td>\n","      <td>8</td>\n","      <td>08/23/2019/3:40:00 PM</td>\n","      <td>2.0</td>\n","      <td>11.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Test1</td>\n","      <td>24</td>\n","      <td>Male</td>\n","      <td>Right</td>\n","      <td>08/18/2019/3:20:00 PM</td>\n","      <td>5</td>\n","      <td>5</td>\n","      <td>08/22/2019/4:30:00 PM</td>\n","      <td>9.0</td>\n","      <td>5.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>test2</td>\n","      <td>30</td>\n","      <td>Female</td>\n","      <td>Right</td>\n","      <td>08/19/2019/4:20:00 PM</td>\n","      <td>8</td>\n","      <td>11</td>\n","      <td>08/20/2019/4:40:00 PM</td>\n","      <td>5.0</td>\n","      <td>2.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>test3</td>\n","      <td>25</td>\n","      <td>Male</td>\n","      <td>Right</td>\n","      <td>08/20/2019/1:28:00 PM</td>\n","      <td>14</td>\n","      <td>7</td>\n","      <td>08/28/2019/3:15:00 PM</td>\n","      <td>15.0</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>test4</td>\n","      <td>24</td>\n","      <td>Male</td>\n","      <td>Left</td>\n","      <td>08/21/2019/3:20:00 PM</td>\n","      <td>12</td>\n","      <td>6</td>\n","      <td>08/30/2019/5:10:00 PM</td>\n","      <td>15.0</td>\n","      <td>19.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e4e83976-f9fa-411b-92ec-a13114a94399')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e4e83976-f9fa-411b-92ec-a13114a94399 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e4e83976-f9fa-411b-92ec-a13114a94399');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-90c03a30-2a2a-4a29-8b56-d1c8a62e259b\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-90c03a30-2a2a-4a29-8b56-d1c8a62e259b')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-90c03a30-2a2a-4a29-8b56-d1c8a62e259b button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"metadata","summary":"{\n  \"name\": \"metadata\",\n  \"rows\": 28,\n  \"fields\": [\n    {\n      \"column\": \"User ID\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 28,\n        \"samples\": [\n          \"test9\",\n          \"test25\",\n          \"test8\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3,\n        \"min\": 19,\n        \"max\": 31,\n        \"num_unique_values\": 11,\n        \"samples\": [\n          19,\n          27,\n          23\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Gender\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Female\",\n          \"Male\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Dominant Hand\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Left\",\n          \"Right\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Date / Time\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 28,\n        \"samples\": [\n          \"08/28/2019/2:00:00 PM\",\n          \"09/25/2019/3:35:00 PM\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Video ID 1\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3,\n        \"min\": 1,\n        \"max\": 15,\n        \"num_unique_values\": 13,\n        \"samples\": [\n          3,\n          10\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Video ID 2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5,\n        \"min\": 1,\n        \"max\": 18,\n        \"num_unique_values\": 14,\n        \"samples\": [\n          1,\n          18\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Date / Time\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 25,\n        \"samples\": [\n          \"09.25/2019/4:45:00 PM\",\n          \"09/17/2019/8:05:00 PM\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Video ID 3\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4.648655719667784,\n        \"min\": 1.0,\n        \"max\": 15.0,\n        \"num_unique_values\": 13,\n        \"samples\": [\n          4.0,\n          3.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Video ID 4\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5.882743124314256,\n        \"min\": 1.0,\n        \"max\": 19.0,\n        \"num_unique_values\": 15,\n        \"samples\": [\n          15.0,\n          17.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":78}],"source":["metadata=pd.read_excel(\"/content/drive/MyDrive/JHU/MLMA/MLMA Project/BS-HMS-Dataset/Emotiv-based-Data/Demographic Details of Participants.xlsx\")\n","metadata.columns=[\n","    \"User ID\", \"Age\", \"Gender\", \"Dominant Hand\", \"Date / Time\",\n","    \"Video ID 1\", \"Video ID 2\", \"Date / Time\", \"Video ID 3\", \"Video ID 4\"]\n","metadata.head()"]},{"cell_type":"code","source":["# metadata=pd.read_excel(\"/content/drive/MyDrive/Colab_Notebooks/MLMA Project/BS-HMS-Dataset/Emotiv-based-Data/Demographic Details of Participants.xlsx\")\n","# metadata.columns=[\n","#     \"User ID\", \"Age\", \"Gender\", \"Dominant Hand\", \"Date / Time\",\n","#     \"Video ID 1\", \"Video ID 2\", \"Date / Time\", \"Video ID 3\", \"Video ID 4\"]\n","# metadata.head()"],"metadata":{"id":"5AYLYAFuC0Mp","executionInfo":{"status":"ok","timestamp":1713901694330,"user_tz":240,"elapsed":6,"user":{"displayName":"Wang","userId":"06822780026042244845"}}},"execution_count":79,"outputs":[]},{"cell_type":"code","execution_count":80,"metadata":{"id":"yYFBOP20rO_M","colab":{"base_uri":"https://localhost:8080/","height":206},"executionInfo":{"status":"ok","timestamp":1713901694331,"user_tz":240,"elapsed":6,"user":{"displayName":"Wang","userId":"06822780026042244845"}},"outputId":"0b257c44-d710-4be0-db39-89ae94b36a69"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["  User ID  Video ID 1  Video ID 2  Video ID 3  Video ID 4\n","0   Test0          15           8         2.0        11.0\n","1   Test1           5           5         9.0         5.0\n","2   test2           8          11         5.0         2.0\n","3   test3          14           7        15.0         1.0\n","4   test4          12           6        15.0        19.0"],"text/html":["\n","  <div id=\"df-0c7f8f46-8316-4709-a438-aa2a09d5295c\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>User ID</th>\n","      <th>Video ID 1</th>\n","      <th>Video ID 2</th>\n","      <th>Video ID 3</th>\n","      <th>Video ID 4</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Test0</td>\n","      <td>15</td>\n","      <td>8</td>\n","      <td>2.0</td>\n","      <td>11.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Test1</td>\n","      <td>5</td>\n","      <td>5</td>\n","      <td>9.0</td>\n","      <td>5.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>test2</td>\n","      <td>8</td>\n","      <td>11</td>\n","      <td>5.0</td>\n","      <td>2.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>test3</td>\n","      <td>14</td>\n","      <td>7</td>\n","      <td>15.0</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>test4</td>\n","      <td>12</td>\n","      <td>6</td>\n","      <td>15.0</td>\n","      <td>19.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0c7f8f46-8316-4709-a438-aa2a09d5295c')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-0c7f8f46-8316-4709-a438-aa2a09d5295c button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-0c7f8f46-8316-4709-a438-aa2a09d5295c');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-4e447201-fce8-4d59-9a2e-add1ea335b84\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4e447201-fce8-4d59-9a2e-add1ea335b84')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-4e447201-fce8-4d59-9a2e-add1ea335b84 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"metadata_video_id","summary":"{\n  \"name\": \"metadata_video_id\",\n  \"rows\": 25,\n  \"fields\": [\n    {\n      \"column\": \"User ID\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 25,\n        \"samples\": [\n          \"test8\",\n          \"test16\",\n          \"Test0\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Video ID 1\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4,\n        \"min\": 1,\n        \"max\": 15,\n        \"num_unique_values\": 12,\n        \"samples\": [\n          13,\n          10,\n          15\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Video ID 2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5,\n        \"min\": 1,\n        \"max\": 18,\n        \"num_unique_values\": 14,\n        \"samples\": [\n          1,\n          18,\n          8\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Video ID 3\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4.648655719667784,\n        \"min\": 1.0,\n        \"max\": 15.0,\n        \"num_unique_values\": 13,\n        \"samples\": [\n          4.0,\n          3.0,\n          2.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Video ID 4\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5.882743124314256,\n        \"min\": 1.0,\n        \"max\": 19.0,\n        \"num_unique_values\": 15,\n        \"samples\": [\n          15.0,\n          17.0,\n          11.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":80}],"source":["metadata_video_id=metadata[[\"User ID\",\"Video ID 1\", \"Video ID 2\", \"Video ID 3\", \"Video ID 4\"]]\n","metadata_video_id=metadata_video_id.dropna()\n","metadata_video_id.head()"]},{"cell_type":"code","execution_count":81,"metadata":{"id":"V8FlGgG1txp-","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1713901694331,"user_tz":240,"elapsed":6,"user":{"displayName":"Wang","userId":"06822780026042244845"}},"outputId":"21c58cb8-0691-4b29-e028-4de201c7b609"},"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-81-00e5abdab353>:5: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  df_time_filtered[\"Emotion\"]=metadata_video_id_list\n"]}],"source":["# add Emotion column\n","metadata_video_id_list = metadata_video_id.drop('User ID', axis=1).values.flatten().tolist()\n","metadata_video_id_list = [int(item) for item in metadata_video_id_list for _ in range(2)] #to int and double the time\n","metadata_video_id_list = [1 if item in [1,2,5,6,13,14,15,16,17,18] else 0 for item in metadata_video_id_list] #map\n","df_time_filtered[\"Emotion\"]=metadata_video_id_list\n","# len(metadata_video_id_list)\n","# metadata_video_id_list"]},{"cell_type":"code","execution_count":82,"metadata":{"id":"I_O0ca9vvdgL","colab":{"base_uri":"https://localhost:8080/","height":443},"executionInfo":{"status":"ok","timestamp":1713901694331,"user_tz":240,"elapsed":5,"user":{"displayName":"Wang","userId":"06822780026042244845"}},"outputId":"fa4f89f0-49d6-48e9-f22f-5370d0afb0e4"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["        AF3_mean    AF3_std      AF3_var   AF3_median      AF3_min  \\\n","0    4233.422687  43.471805  1889.797801  4231.794922  3241.025635   \n","1    4231.008787  44.189663  1952.726344  4229.743652  3387.692139   \n","2    4235.494381  25.175706   633.816192  4233.846191  3968.205078   \n","3    4237.481215  86.477155  7478.298389  4236.922852  3529.743408   \n","4    4233.419821  34.626376  1198.985906  4230.769043  3809.230713   \n","..           ...        ...          ...          ...          ...   \n","211  4239.671983  97.882280  9580.940701  4237.948730   759.487183   \n","212  4229.912101  50.426474  2542.829266  4228.205078  3890.256348   \n","213  4234.076193  32.293637  1042.878960  4234.871582  4091.281982   \n","214  4236.514296  21.179939   448.589826  4236.410156  4070.769043   \n","215  4237.631749  19.933718   397.353096  4237.436035  4154.871582   \n","\n","         AF3_max  AF3_activity  AF3_mobility  AF3_complexity  AF3_ar_coeff_0  \\\n","0    4429.230469   1889.797801      0.212561        5.546035        1.886056   \n","1    5505.127930   1952.726344      0.269354        4.519996        1.854385   \n","2    4438.974121    633.816192      0.379098        3.379011        1.709990   \n","3    5739.486816   7478.298389      0.111843       11.086097        1.798939   \n","4    4543.589844   1198.985906      0.264964        4.459335        1.864686   \n","..           ...           ...           ...             ...             ...   \n","211  4835.384277   9580.940701      0.106721       10.789804        1.931506   \n","212  4543.076660   2542.829266      0.105597       11.185909        1.850163   \n","213  4401.025391   1042.878960      0.171739        7.219231        1.768337   \n","214  4437.435547    448.589826      0.276163        4.529806        1.562347   \n","215  4365.641113    397.353096      0.257500        4.828735        1.731316   \n","\n","     ...      AF4_max  AF4_activity  AF4_mobility  AF4_complexity  \\\n","0    ...  4798.461426   1955.207164      0.201175        5.853881   \n","1    ...  5405.641113   4047.042955      0.181730        6.655339   \n","2    ...  4456.922852    788.581256      0.362081        3.528739   \n","3    ...  7725.640625  30770.363380      0.065568       16.047249   \n","4    ...  5711.794922   9459.787110      0.097349       11.212047   \n","..   ...          ...           ...           ...             ...   \n","211  ...  4534.358887   1341.930166      0.288382        4.671318   \n","212  ...  4649.230469   2125.336360      0.194158        6.114867   \n","213  ...  5397.948730   4823.841089      0.127178        9.549253   \n","214  ...  4794.358887   1804.680486      0.212828        5.879350   \n","215  ...  4411.281738    778.759752      0.278193        4.402478   \n","\n","     AF4_ar_coeff_0  AF4_ar_coeff_1  AF4_ar_coeff_2  AF4_ar_coeff_3  \\\n","0          1.888919       -1.916397        1.774889       -1.162047   \n","1          1.869903       -1.917447        1.803922       -1.177878   \n","2          1.719312       -1.716449        1.651069       -1.060818   \n","3          2.014694       -1.962541        1.826205       -1.251982   \n","4          1.916121       -1.784461        1.639423       -1.070856   \n","..              ...             ...             ...             ...   \n","211        1.619370       -1.575834        1.591902       -1.013965   \n","212        1.799081       -1.684543        1.536058       -0.908229   \n","213        1.850852       -1.822298        1.738571       -1.141967   \n","214        1.683692       -1.604122        1.484709       -0.874587   \n","215        1.824404       -1.814688        1.714828       -1.095232   \n","\n","     AF4_ar_coeff_4  Emotion  \n","0          0.414635        1  \n","1          0.421499        1  \n","2          0.406884        0  \n","3          0.373620        0  \n","4          0.299771        1  \n","..              ...      ...  \n","211        0.378527        1  \n","212        0.257632        0  \n","213        0.374842        0  \n","214        0.310306        1  \n","215        0.370687        1  \n","\n","[200 rows x 197 columns]"],"text/html":["\n","  <div id=\"df-c909ac41-8a34-4da8-91e3-ae2d4d623ff5\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>AF3_mean</th>\n","      <th>AF3_std</th>\n","      <th>AF3_var</th>\n","      <th>AF3_median</th>\n","      <th>AF3_min</th>\n","      <th>AF3_max</th>\n","      <th>AF3_activity</th>\n","      <th>AF3_mobility</th>\n","      <th>AF3_complexity</th>\n","      <th>AF3_ar_coeff_0</th>\n","      <th>...</th>\n","      <th>AF4_max</th>\n","      <th>AF4_activity</th>\n","      <th>AF4_mobility</th>\n","      <th>AF4_complexity</th>\n","      <th>AF4_ar_coeff_0</th>\n","      <th>AF4_ar_coeff_1</th>\n","      <th>AF4_ar_coeff_2</th>\n","      <th>AF4_ar_coeff_3</th>\n","      <th>AF4_ar_coeff_4</th>\n","      <th>Emotion</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>4233.422687</td>\n","      <td>43.471805</td>\n","      <td>1889.797801</td>\n","      <td>4231.794922</td>\n","      <td>3241.025635</td>\n","      <td>4429.230469</td>\n","      <td>1889.797801</td>\n","      <td>0.212561</td>\n","      <td>5.546035</td>\n","      <td>1.886056</td>\n","      <td>...</td>\n","      <td>4798.461426</td>\n","      <td>1955.207164</td>\n","      <td>0.201175</td>\n","      <td>5.853881</td>\n","      <td>1.888919</td>\n","      <td>-1.916397</td>\n","      <td>1.774889</td>\n","      <td>-1.162047</td>\n","      <td>0.414635</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>4231.008787</td>\n","      <td>44.189663</td>\n","      <td>1952.726344</td>\n","      <td>4229.743652</td>\n","      <td>3387.692139</td>\n","      <td>5505.127930</td>\n","      <td>1952.726344</td>\n","      <td>0.269354</td>\n","      <td>4.519996</td>\n","      <td>1.854385</td>\n","      <td>...</td>\n","      <td>5405.641113</td>\n","      <td>4047.042955</td>\n","      <td>0.181730</td>\n","      <td>6.655339</td>\n","      <td>1.869903</td>\n","      <td>-1.917447</td>\n","      <td>1.803922</td>\n","      <td>-1.177878</td>\n","      <td>0.421499</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>4235.494381</td>\n","      <td>25.175706</td>\n","      <td>633.816192</td>\n","      <td>4233.846191</td>\n","      <td>3968.205078</td>\n","      <td>4438.974121</td>\n","      <td>633.816192</td>\n","      <td>0.379098</td>\n","      <td>3.379011</td>\n","      <td>1.709990</td>\n","      <td>...</td>\n","      <td>4456.922852</td>\n","      <td>788.581256</td>\n","      <td>0.362081</td>\n","      <td>3.528739</td>\n","      <td>1.719312</td>\n","      <td>-1.716449</td>\n","      <td>1.651069</td>\n","      <td>-1.060818</td>\n","      <td>0.406884</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4237.481215</td>\n","      <td>86.477155</td>\n","      <td>7478.298389</td>\n","      <td>4236.922852</td>\n","      <td>3529.743408</td>\n","      <td>5739.486816</td>\n","      <td>7478.298389</td>\n","      <td>0.111843</td>\n","      <td>11.086097</td>\n","      <td>1.798939</td>\n","      <td>...</td>\n","      <td>7725.640625</td>\n","      <td>30770.363380</td>\n","      <td>0.065568</td>\n","      <td>16.047249</td>\n","      <td>2.014694</td>\n","      <td>-1.962541</td>\n","      <td>1.826205</td>\n","      <td>-1.251982</td>\n","      <td>0.373620</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4233.419821</td>\n","      <td>34.626376</td>\n","      <td>1198.985906</td>\n","      <td>4230.769043</td>\n","      <td>3809.230713</td>\n","      <td>4543.589844</td>\n","      <td>1198.985906</td>\n","      <td>0.264964</td>\n","      <td>4.459335</td>\n","      <td>1.864686</td>\n","      <td>...</td>\n","      <td>5711.794922</td>\n","      <td>9459.787110</td>\n","      <td>0.097349</td>\n","      <td>11.212047</td>\n","      <td>1.916121</td>\n","      <td>-1.784461</td>\n","      <td>1.639423</td>\n","      <td>-1.070856</td>\n","      <td>0.299771</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>211</th>\n","      <td>4239.671983</td>\n","      <td>97.882280</td>\n","      <td>9580.940701</td>\n","      <td>4237.948730</td>\n","      <td>759.487183</td>\n","      <td>4835.384277</td>\n","      <td>9580.940701</td>\n","      <td>0.106721</td>\n","      <td>10.789804</td>\n","      <td>1.931506</td>\n","      <td>...</td>\n","      <td>4534.358887</td>\n","      <td>1341.930166</td>\n","      <td>0.288382</td>\n","      <td>4.671318</td>\n","      <td>1.619370</td>\n","      <td>-1.575834</td>\n","      <td>1.591902</td>\n","      <td>-1.013965</td>\n","      <td>0.378527</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>212</th>\n","      <td>4229.912101</td>\n","      <td>50.426474</td>\n","      <td>2542.829266</td>\n","      <td>4228.205078</td>\n","      <td>3890.256348</td>\n","      <td>4543.076660</td>\n","      <td>2542.829266</td>\n","      <td>0.105597</td>\n","      <td>11.185909</td>\n","      <td>1.850163</td>\n","      <td>...</td>\n","      <td>4649.230469</td>\n","      <td>2125.336360</td>\n","      <td>0.194158</td>\n","      <td>6.114867</td>\n","      <td>1.799081</td>\n","      <td>-1.684543</td>\n","      <td>1.536058</td>\n","      <td>-0.908229</td>\n","      <td>0.257632</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>213</th>\n","      <td>4234.076193</td>\n","      <td>32.293637</td>\n","      <td>1042.878960</td>\n","      <td>4234.871582</td>\n","      <td>4091.281982</td>\n","      <td>4401.025391</td>\n","      <td>1042.878960</td>\n","      <td>0.171739</td>\n","      <td>7.219231</td>\n","      <td>1.768337</td>\n","      <td>...</td>\n","      <td>5397.948730</td>\n","      <td>4823.841089</td>\n","      <td>0.127178</td>\n","      <td>9.549253</td>\n","      <td>1.850852</td>\n","      <td>-1.822298</td>\n","      <td>1.738571</td>\n","      <td>-1.141967</td>\n","      <td>0.374842</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>214</th>\n","      <td>4236.514296</td>\n","      <td>21.179939</td>\n","      <td>448.589826</td>\n","      <td>4236.410156</td>\n","      <td>4070.769043</td>\n","      <td>4437.435547</td>\n","      <td>448.589826</td>\n","      <td>0.276163</td>\n","      <td>4.529806</td>\n","      <td>1.562347</td>\n","      <td>...</td>\n","      <td>4794.358887</td>\n","      <td>1804.680486</td>\n","      <td>0.212828</td>\n","      <td>5.879350</td>\n","      <td>1.683692</td>\n","      <td>-1.604122</td>\n","      <td>1.484709</td>\n","      <td>-0.874587</td>\n","      <td>0.310306</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>215</th>\n","      <td>4237.631749</td>\n","      <td>19.933718</td>\n","      <td>397.353096</td>\n","      <td>4237.436035</td>\n","      <td>4154.871582</td>\n","      <td>4365.641113</td>\n","      <td>397.353096</td>\n","      <td>0.257500</td>\n","      <td>4.828735</td>\n","      <td>1.731316</td>\n","      <td>...</td>\n","      <td>4411.281738</td>\n","      <td>778.759752</td>\n","      <td>0.278193</td>\n","      <td>4.402478</td>\n","      <td>1.824404</td>\n","      <td>-1.814688</td>\n","      <td>1.714828</td>\n","      <td>-1.095232</td>\n","      <td>0.370687</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>200 rows Ã— 197 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c909ac41-8a34-4da8-91e3-ae2d4d623ff5')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-c909ac41-8a34-4da8-91e3-ae2d4d623ff5 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-c909ac41-8a34-4da8-91e3-ae2d4d623ff5');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-3327e301-3fdb-4569-af54-db7e56439211\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-3327e301-3fdb-4569-af54-db7e56439211')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-3327e301-3fdb-4569-af54-db7e56439211 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_8268ddea-46e6-4eeb-94a6-bd5282377228\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df_time_filtered')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_8268ddea-46e6-4eeb-94a6-bd5282377228 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df_time_filtered');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_time_filtered"}},"metadata":{},"execution_count":82}],"source":["# Drop \"Unnamed: 0\",\"Test\" columns\n","df_time_filtered=df_time_filtered.drop(columns=[\"Unnamed: 0\",\"Test\"])\n","df_time_filtered"]},{"cell_type":"markdown","metadata":{"id":"KhNaOZ0ox9TQ"},"source":["## Train Test Split Method"]},{"cell_type":"code","execution_count":83,"metadata":{"id":"StPVCDaMw_uX","colab":{"base_uri":"https://localhost:8080/","height":443},"executionInfo":{"status":"ok","timestamp":1713901694594,"user_tz":240,"elapsed":267,"user":{"displayName":"Wang","userId":"06822780026042244845"}},"outputId":"a8e1eee4-e8a2-490c-a643-70b10c84ffd7"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["        AF3_mean    AF3_std      AF3_var   AF3_median      AF3_min  \\\n","0    4233.422687  43.471805  1889.797801  4231.794922  3241.025635   \n","1    4231.008787  44.189663  1952.726344  4229.743652  3387.692139   \n","2    4235.494381  25.175706   633.816192  4233.846191  3968.205078   \n","3    4237.481215  86.477155  7478.298389  4236.922852  3529.743408   \n","4    4233.419821  34.626376  1198.985906  4230.769043  3809.230713   \n","..           ...        ...          ...          ...          ...   \n","211  4239.671983  97.882280  9580.940701  4237.948730   759.487183   \n","212  4229.912101  50.426474  2542.829266  4228.205078  3890.256348   \n","213  4234.076193  32.293637  1042.878960  4234.871582  4091.281982   \n","214  4236.514296  21.179939   448.589826  4236.410156  4070.769043   \n","215  4237.631749  19.933718   397.353096  4237.436035  4154.871582   \n","\n","         AF3_max  AF3_activity  AF3_mobility  AF3_complexity  AF3_ar_coeff_0  \\\n","0    4429.230469   1889.797801      0.212561        5.546035        1.886056   \n","1    5505.127930   1952.726344      0.269354        4.519996        1.854385   \n","2    4438.974121    633.816192      0.379098        3.379011        1.709990   \n","3    5739.486816   7478.298389      0.111843       11.086097        1.798939   \n","4    4543.589844   1198.985906      0.264964        4.459335        1.864686   \n","..           ...           ...           ...             ...             ...   \n","211  4835.384277   9580.940701      0.106721       10.789804        1.931506   \n","212  4543.076660   2542.829266      0.105597       11.185909        1.850163   \n","213  4401.025391   1042.878960      0.171739        7.219231        1.768337   \n","214  4437.435547    448.589826      0.276163        4.529806        1.562347   \n","215  4365.641113    397.353096      0.257500        4.828735        1.731316   \n","\n","     ...  AF4_activity  AF4_mobility  AF4_complexity  AF4_ar_coeff_0  \\\n","0    ...   1955.207164      0.201175        5.853881        1.888919   \n","1    ...   4047.042955      0.181730        6.655339        1.869903   \n","2    ...    788.581256      0.362081        3.528739        1.719312   \n","3    ...  30770.363380      0.065568       16.047249        2.014694   \n","4    ...   9459.787110      0.097349       11.212047        1.916121   \n","..   ...           ...           ...             ...             ...   \n","211  ...   1341.930166      0.288382        4.671318        1.619370   \n","212  ...   2125.336360      0.194158        6.114867        1.799081   \n","213  ...   4823.841089      0.127178        9.549253        1.850852   \n","214  ...   1804.680486      0.212828        5.879350        1.683692   \n","215  ...    778.759752      0.278193        4.402478        1.824404   \n","\n","     AF4_ar_coeff_1  AF4_ar_coeff_2  AF4_ar_coeff_3  AF4_ar_coeff_4  Emotion  \\\n","0         -1.916397        1.774889       -1.162047        0.414635        1   \n","1         -1.917447        1.803922       -1.177878        0.421499        1   \n","2         -1.716449        1.651069       -1.060818        0.406884        0   \n","3         -1.962541        1.826205       -1.251982        0.373620        0   \n","4         -1.784461        1.639423       -1.070856        0.299771        1   \n","..              ...             ...             ...             ...      ...   \n","211       -1.575834        1.591902       -1.013965        0.378527        1   \n","212       -1.684543        1.536058       -0.908229        0.257632        0   \n","213       -1.822298        1.738571       -1.141967        0.374842        0   \n","214       -1.604122        1.484709       -0.874587        0.310306        1   \n","215       -1.814688        1.714828       -1.095232        0.370687        1   \n","\n","     Folder  \n","0         1  \n","1         1  \n","2         1  \n","3         1  \n","4         1  \n","..      ...  \n","211      25  \n","212      25  \n","213      25  \n","214      25  \n","215      25  \n","\n","[200 rows x 198 columns]"],"text/html":["\n","  <div id=\"df-5eb9060e-7a7d-42f7-a28d-698ed6261029\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>AF3_mean</th>\n","      <th>AF3_std</th>\n","      <th>AF3_var</th>\n","      <th>AF3_median</th>\n","      <th>AF3_min</th>\n","      <th>AF3_max</th>\n","      <th>AF3_activity</th>\n","      <th>AF3_mobility</th>\n","      <th>AF3_complexity</th>\n","      <th>AF3_ar_coeff_0</th>\n","      <th>...</th>\n","      <th>AF4_activity</th>\n","      <th>AF4_mobility</th>\n","      <th>AF4_complexity</th>\n","      <th>AF4_ar_coeff_0</th>\n","      <th>AF4_ar_coeff_1</th>\n","      <th>AF4_ar_coeff_2</th>\n","      <th>AF4_ar_coeff_3</th>\n","      <th>AF4_ar_coeff_4</th>\n","      <th>Emotion</th>\n","      <th>Folder</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>4233.422687</td>\n","      <td>43.471805</td>\n","      <td>1889.797801</td>\n","      <td>4231.794922</td>\n","      <td>3241.025635</td>\n","      <td>4429.230469</td>\n","      <td>1889.797801</td>\n","      <td>0.212561</td>\n","      <td>5.546035</td>\n","      <td>1.886056</td>\n","      <td>...</td>\n","      <td>1955.207164</td>\n","      <td>0.201175</td>\n","      <td>5.853881</td>\n","      <td>1.888919</td>\n","      <td>-1.916397</td>\n","      <td>1.774889</td>\n","      <td>-1.162047</td>\n","      <td>0.414635</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>4231.008787</td>\n","      <td>44.189663</td>\n","      <td>1952.726344</td>\n","      <td>4229.743652</td>\n","      <td>3387.692139</td>\n","      <td>5505.127930</td>\n","      <td>1952.726344</td>\n","      <td>0.269354</td>\n","      <td>4.519996</td>\n","      <td>1.854385</td>\n","      <td>...</td>\n","      <td>4047.042955</td>\n","      <td>0.181730</td>\n","      <td>6.655339</td>\n","      <td>1.869903</td>\n","      <td>-1.917447</td>\n","      <td>1.803922</td>\n","      <td>-1.177878</td>\n","      <td>0.421499</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>4235.494381</td>\n","      <td>25.175706</td>\n","      <td>633.816192</td>\n","      <td>4233.846191</td>\n","      <td>3968.205078</td>\n","      <td>4438.974121</td>\n","      <td>633.816192</td>\n","      <td>0.379098</td>\n","      <td>3.379011</td>\n","      <td>1.709990</td>\n","      <td>...</td>\n","      <td>788.581256</td>\n","      <td>0.362081</td>\n","      <td>3.528739</td>\n","      <td>1.719312</td>\n","      <td>-1.716449</td>\n","      <td>1.651069</td>\n","      <td>-1.060818</td>\n","      <td>0.406884</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4237.481215</td>\n","      <td>86.477155</td>\n","      <td>7478.298389</td>\n","      <td>4236.922852</td>\n","      <td>3529.743408</td>\n","      <td>5739.486816</td>\n","      <td>7478.298389</td>\n","      <td>0.111843</td>\n","      <td>11.086097</td>\n","      <td>1.798939</td>\n","      <td>...</td>\n","      <td>30770.363380</td>\n","      <td>0.065568</td>\n","      <td>16.047249</td>\n","      <td>2.014694</td>\n","      <td>-1.962541</td>\n","      <td>1.826205</td>\n","      <td>-1.251982</td>\n","      <td>0.373620</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4233.419821</td>\n","      <td>34.626376</td>\n","      <td>1198.985906</td>\n","      <td>4230.769043</td>\n","      <td>3809.230713</td>\n","      <td>4543.589844</td>\n","      <td>1198.985906</td>\n","      <td>0.264964</td>\n","      <td>4.459335</td>\n","      <td>1.864686</td>\n","      <td>...</td>\n","      <td>9459.787110</td>\n","      <td>0.097349</td>\n","      <td>11.212047</td>\n","      <td>1.916121</td>\n","      <td>-1.784461</td>\n","      <td>1.639423</td>\n","      <td>-1.070856</td>\n","      <td>0.299771</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>211</th>\n","      <td>4239.671983</td>\n","      <td>97.882280</td>\n","      <td>9580.940701</td>\n","      <td>4237.948730</td>\n","      <td>759.487183</td>\n","      <td>4835.384277</td>\n","      <td>9580.940701</td>\n","      <td>0.106721</td>\n","      <td>10.789804</td>\n","      <td>1.931506</td>\n","      <td>...</td>\n","      <td>1341.930166</td>\n","      <td>0.288382</td>\n","      <td>4.671318</td>\n","      <td>1.619370</td>\n","      <td>-1.575834</td>\n","      <td>1.591902</td>\n","      <td>-1.013965</td>\n","      <td>0.378527</td>\n","      <td>1</td>\n","      <td>25</td>\n","    </tr>\n","    <tr>\n","      <th>212</th>\n","      <td>4229.912101</td>\n","      <td>50.426474</td>\n","      <td>2542.829266</td>\n","      <td>4228.205078</td>\n","      <td>3890.256348</td>\n","      <td>4543.076660</td>\n","      <td>2542.829266</td>\n","      <td>0.105597</td>\n","      <td>11.185909</td>\n","      <td>1.850163</td>\n","      <td>...</td>\n","      <td>2125.336360</td>\n","      <td>0.194158</td>\n","      <td>6.114867</td>\n","      <td>1.799081</td>\n","      <td>-1.684543</td>\n","      <td>1.536058</td>\n","      <td>-0.908229</td>\n","      <td>0.257632</td>\n","      <td>0</td>\n","      <td>25</td>\n","    </tr>\n","    <tr>\n","      <th>213</th>\n","      <td>4234.076193</td>\n","      <td>32.293637</td>\n","      <td>1042.878960</td>\n","      <td>4234.871582</td>\n","      <td>4091.281982</td>\n","      <td>4401.025391</td>\n","      <td>1042.878960</td>\n","      <td>0.171739</td>\n","      <td>7.219231</td>\n","      <td>1.768337</td>\n","      <td>...</td>\n","      <td>4823.841089</td>\n","      <td>0.127178</td>\n","      <td>9.549253</td>\n","      <td>1.850852</td>\n","      <td>-1.822298</td>\n","      <td>1.738571</td>\n","      <td>-1.141967</td>\n","      <td>0.374842</td>\n","      <td>0</td>\n","      <td>25</td>\n","    </tr>\n","    <tr>\n","      <th>214</th>\n","      <td>4236.514296</td>\n","      <td>21.179939</td>\n","      <td>448.589826</td>\n","      <td>4236.410156</td>\n","      <td>4070.769043</td>\n","      <td>4437.435547</td>\n","      <td>448.589826</td>\n","      <td>0.276163</td>\n","      <td>4.529806</td>\n","      <td>1.562347</td>\n","      <td>...</td>\n","      <td>1804.680486</td>\n","      <td>0.212828</td>\n","      <td>5.879350</td>\n","      <td>1.683692</td>\n","      <td>-1.604122</td>\n","      <td>1.484709</td>\n","      <td>-0.874587</td>\n","      <td>0.310306</td>\n","      <td>1</td>\n","      <td>25</td>\n","    </tr>\n","    <tr>\n","      <th>215</th>\n","      <td>4237.631749</td>\n","      <td>19.933718</td>\n","      <td>397.353096</td>\n","      <td>4237.436035</td>\n","      <td>4154.871582</td>\n","      <td>4365.641113</td>\n","      <td>397.353096</td>\n","      <td>0.257500</td>\n","      <td>4.828735</td>\n","      <td>1.731316</td>\n","      <td>...</td>\n","      <td>778.759752</td>\n","      <td>0.278193</td>\n","      <td>4.402478</td>\n","      <td>1.824404</td>\n","      <td>-1.814688</td>\n","      <td>1.714828</td>\n","      <td>-1.095232</td>\n","      <td>0.370687</td>\n","      <td>1</td>\n","      <td>25</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>200 rows Ã— 198 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5eb9060e-7a7d-42f7-a28d-698ed6261029')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-5eb9060e-7a7d-42f7-a28d-698ed6261029 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-5eb9060e-7a7d-42f7-a28d-698ed6261029');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-f084d819-35c2-4f17-8569-1fda2952f224\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f084d819-35c2-4f17-8569-1fda2952f224')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-f084d819-35c2-4f17-8569-1fda2952f224 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_b502313e-0b1d-47da-8b85-f961f37e9cb0\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df_time_filtered')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_b502313e-0b1d-47da-8b85-f961f37e9cb0 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df_time_filtered');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_time_filtered"}},"metadata":{},"execution_count":83}],"source":["folder = [num for num in range(1, 26) for _ in range(8)]\n","df_time_filtered[\"Folder\"]=folder\n","df_time_filtered"]},{"cell_type":"code","execution_count":84,"metadata":{"id":"5mb1IS2BLSxs","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1713901694594,"user_tz":240,"elapsed":4,"user":{"displayName":"Wang","userId":"06822780026042244845"}},"outputId":"f9d1312a-79e4-4fd0-89b3-0e527f7899ef"},"outputs":[{"output_type":"stream","name":"stdout","text":["[11, 25, 6, 12, 14, 20, 4, 8, 21, 5, 2, 22, 1, 26, 23, 13, 24, 15, 18, 3]\n","[9, 19, 7, 10, 17, 16]\n"]}],"source":["# to make sure the same fold is use as train and test for different model\n","import random\n","folder_names = [i for i in range(1, 27)]\n","\n","# Shuffle the folder names to ensure random distribution\n","random.shuffle(folder_names)\n","\n","# Calculate the indices for the 80-20 split\n","train_split = int(0.8 * len(folder_names))  # 80% for training\n","\n","# Split the folders into training, validation, and testing sets\n","train_folders = folder_names[:train_split]\n","# valid_folders = folder_names[train_split:valid_split]\n","test_folders = folder_names[train_split:]\n","\n","print(train_folders)\n","print(test_folders)"]},{"cell_type":"code","execution_count":85,"metadata":{"id":"Mxc1Hz21zArD","executionInfo":{"status":"ok","timestamp":1713901694594,"user_tz":240,"elapsed":3,"user":{"displayName":"Wang","userId":"06822780026042244845"}}},"outputs":[],"source":["train_time = df_time_filtered[df_time_filtered['Folder'].isin(train_folders)]\n","X_train_time =train_time.iloc[:,:-2]\n","y_train_time=train_time.iloc[:,-2]\n","\n","test_time = df_time_filtered[df_time_filtered['Folder'].isin(test_folders)]\n","X_test_time =test_time.iloc[:,:-2]\n","y_test_time=test_time.iloc[:,-2]\n","\n","# val = df_time_filtered[df_time_filtered['Folder'].isin(valid_folders)]\n","# X_val =val.iloc[:,:-2]\n","# y_val=val.iloc[:,-2]"]},{"cell_type":"markdown","metadata":{"id":"eO5N8iqsydZu"},"source":["## SVM + Cross Validation"]},{"cell_type":"code","execution_count":86,"metadata":{"id":"HDUZQ9465vyp","executionInfo":{"status":"ok","timestamp":1713901694594,"user_tz":240,"elapsed":3,"user":{"displayName":"Wang","userId":"06822780026042244845"}}},"outputs":[],"source":["from sklearn.svm import SVC\n","from sklearn.pipeline import make_pipeline\n","from sklearn.preprocessing import StandardScaler\n","from sklearn.metrics import accuracy_score\n","from sklearn.model_selection import GridSearchCV\n","import numpy as np\n","\n","def create_grid_search_svm_model():\n","    svm_pipeline = make_pipeline(StandardScaler(), SVC(probability=True))\n","    param_grid = {\n","        'svc__C': [0.01, 0.1, 1, 10],\n","        'svc__kernel': ['linear', 'rbf'],\n","        'svc__gamma': ['scale', 'auto']\n","    }\n","    grid_search = GridSearchCV(svm_pipeline, param_grid, cv=3, scoring='accuracy', verbose=1)\n","    return grid_search"]},{"cell_type":"code","execution_count":87,"metadata":{"id":"yuYTv6L1ycN1","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1713901706436,"user_tz":240,"elapsed":11845,"user":{"displayName":"Wang","userId":"06822780026042244845"}},"outputId":"c48a6777-8be1-4e46-8046-33288f39e857"},"outputs":[{"output_type":"stream","name":"stdout","text":["Fitting 3 folds for each of 16 candidates, totalling 48 fits\n","Best parameters for fold 1: {'svc__C': 0.01, 'svc__gamma': 'scale', 'svc__kernel': 'linear'}\n","Fold 1 completed. Validation accuracy: 31.25%\n","Fitting 3 folds for each of 16 candidates, totalling 48 fits\n","Best parameters for fold 2: {'svc__C': 1, 'svc__gamma': 'scale', 'svc__kernel': 'rbf'}\n","Fold 2 completed. Validation accuracy: 56.25%\n","Fitting 3 folds for each of 16 candidates, totalling 48 fits\n","Best parameters for fold 3: {'svc__C': 0.1, 'svc__gamma': 'scale', 'svc__kernel': 'linear'}\n","Fold 3 completed. Validation accuracy: 62.50%\n","Fitting 3 folds for each of 16 candidates, totalling 48 fits\n","Best parameters for fold 4: {'svc__C': 1, 'svc__gamma': 'scale', 'svc__kernel': 'rbf'}\n","Fold 4 completed. Validation accuracy: 37.50%\n","Fitting 3 folds for each of 16 candidates, totalling 48 fits\n","Best parameters for fold 5: {'svc__C': 1, 'svc__gamma': 'scale', 'svc__kernel': 'rbf'}\n","Fold 5 completed. Validation accuracy: 87.50%\n","Fitting 3 folds for each of 16 candidates, totalling 48 fits\n","Best parameters for fold 6: {'svc__C': 1, 'svc__gamma': 'scale', 'svc__kernel': 'linear'}\n","Fold 6 completed. Validation accuracy: 56.25%\n","Fitting 3 folds for each of 16 candidates, totalling 48 fits\n","Best parameters for fold 7: {'svc__C': 10, 'svc__gamma': 'scale', 'svc__kernel': 'rbf'}\n","Fold 7 completed. Validation accuracy: 37.50%\n","Fitting 3 folds for each of 16 candidates, totalling 48 fits\n","Best parameters for fold 8: {'svc__C': 1, 'svc__gamma': 'scale', 'svc__kernel': 'rbf'}\n","Fold 8 completed. Validation accuracy: 87.50%\n","Fitting 3 folds for each of 16 candidates, totalling 48 fits\n","Best parameters for fold 9: {'svc__C': 10, 'svc__gamma': 'scale', 'svc__kernel': 'rbf'}\n","Fold 9 completed. Validation accuracy: 56.25%\n","Fitting 3 folds for each of 16 candidates, totalling 48 fits\n","Best parameters for fold 10: {'svc__C': 1, 'svc__gamma': 'scale', 'svc__kernel': 'rbf'}\n","Fold 10 completed. Validation accuracy: 43.75%\n","Best validation accuracy: 87.50%\n"]}],"source":["# Initialize variables\n","fold = 10\n","cv_scores = []\n","best_model_time = None\n","best_accuracy_time = 0  # Initialize best accuracy to zero\n","\n","for i in range(fold):\n","    # Shuffle the folder names to ensure random distribution\n","    random.shuffle(train_folders)\n","\n","    # Calculate the indices for the 90-10 split\n","    train_split_cv = int(0.9 * len(train_folders))  # 90% for training\n","\n","    # Split the folders into training and validation\n","    train_folders_cv = train_folders[:train_split_cv]\n","    val_folders_cv = train_folders[train_split_cv:]\n","\n","    # Filter data based on the folder names\n","    train_cv = train_time[train_time['Folder'].isin(train_folders_cv)]\n","    X_train_cv = train_cv.iloc[:, :-2]\n","    y_train_cv = train_cv.iloc[:, -2]\n","\n","    val_cv = train_time[train_time['Folder'].isin(val_folders_cv)]\n","    X_val_cv = val_cv.iloc[:, :-2]\n","    y_val_cv = val_cv.iloc[:, -2]\n","\n","    # Create and configure the grid search wrapped SVM model\n","    grid_search_model = create_grid_search_svm_model()\n","\n","    # Fit the grid search model on training data\n","    grid_search_model.fit(X_train_cv, y_train_cv)\n","\n","    # Print the best parameters found by the grid search\n","    print(f\"Best parameters for fold {i+1}: {grid_search_model.best_params_}\")\n","\n","    # Best estimator found by grid search\n","    best_model = grid_search_model.best_estimator_\n","\n","    # Evaluate the best model on the validation set\n","    val_predictions = best_model.predict(X_val_cv)\n","    val_accuracy = accuracy_score(y_val_cv, val_predictions)\n","    cv_scores.append(val_accuracy)\n","    print(f\"Fold {i+1} completed. Validation accuracy: {val_accuracy * 100:.2f}%\")\n","\n","    # Check if the current model has the best accuracy\n","    if val_accuracy > best_accuracy_time:\n","        best_accuracy_time = val_accuracy\n","        best_model_time = best_model\n","\n","# Report the best accuracy found\n","print(f\"Best validation accuracy: {best_accuracy_time * 100:.2f}%\")"]},{"cell_type":"code","execution_count":88,"metadata":{"id":"TUloIrue5fqP","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1713901706436,"user_tz":240,"elapsed":23,"user":{"displayName":"Wang","userId":"06822780026042244845"}},"outputId":"c24f6c7e-890b-4500-ebb5-626271859e60"},"outputs":[{"output_type":"stream","name":"stdout","text":["[18, 3, 4, 12, 14, 25, 23, 26, 13, 11, 8, 21, 5, 6, 1, 15, 2, 20]\n","[22, 24]\n"]}],"source":["print(train_folders_cv)\n","print(val_folders_cv)"]},{"cell_type":"code","source":["from sklearn.inspection import permutation_importance\n","import matplotlib.pyplot as plt\n","\n","# Evaluate permutation importance on the validation set\n","perm_importance = permutation_importance(best_model_time, X_val_cv, y_val_cv, n_repeats=10, random_state=42)\n","\n","# Get importances and standard deviations\n","importances = perm_importance.importances_mean\n","stds = perm_importance.importances_std\n","indices = np.argsort(importances)[::-1]\n","\n","# Limit to top 10 features\n","top_n = 10\n","top_indices = indices[:top_n]\n","\n","# Plotting feature importances for top 10 features only\n","plt.figure(figsize=(10, 6))\n","plt.title(\"Top 10 Permutation-based Feature Importances\")\n","plt.bar(range(top_n), importances[top_indices], yerr=stds[top_indices], align='center', )\n","plt.xticks(range(top_n), X_val_cv.columns[top_indices], rotation=90)\n","plt.ylabel('Importance')\n","plt.show()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":631},"id":"RO95L2YmULql","executionInfo":{"status":"ok","timestamp":1713901716856,"user_tz":240,"elapsed":10440,"user":{"displayName":"Wang","userId":"06822780026042244845"}},"outputId":"9f9bb736-dcea-4759-fd90-6cc240430a0f"},"execution_count":89,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 1 Axes>"],"image/png":"iVBORw0KGgoAAAANSUhEUgAAA2IAAAJmCAYAAAA+STMwAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/bCgiHAAAACXBIWXMAAA9hAAAPYQGoP6dpAABp1UlEQVR4nO3deVhUdf//8deALIKC+5q75K4o7lluFN1uaZpamohU2q1panarlYZW3HXnkpmZd7lVpmllttyampW5prhkpblvBWoqKObGnN8f/ZxvI3DEEc8ZnOfjuuYqPvOZmfd5MyCvOed8jsMwDEMAAAAAAMv42V0AAAAAAPgaghgAAAAAWIwgBgAAAAAWI4gBAAAAgMUIYgAAAABgMYIYAAAAAFiMIAYAAAAAFiOIAQAAAIDFCGIAAAAAYDGCGADgpnn++eflcDhsfe0TJ07Y8vqeqlixovr27Wt3GQCAm4wgBsBjDocjR7dvvvnmptfy5ptv6oEHHlD58uXlcDhM/5A9ffq0HnvsMRUvXlyhoaFq3bq1kpKScvQ6rVq1ctu2IkWKqFGjRpo5c6acTmcubY215s2bp8mTJ3v8+HPnzun555+35PuM/5Pdz1upUqVuyut5+/fZ4XBo0KBBdpfhsbVr1+r555/X6dOn7S4FgEXy2V0AgLzr3Xffdft67ty5Wr58eabxGjVq3PRaXn75ZZ05c0aNGzfW77//nu08p9Op9u3ba9u2bRoxYoSKFSumadOmqVWrVtq8ebMiIiKu+Vq33XabEhMTJUnHjx/X3LlzFR8fr19//VX//ve/c22brDJv3jzt2LFDTz75pEePP3funBISEiT9FVT/7tlnn9XIkSNvsEJk5+6771afPn3cxvLnz39TXsvs+4wbt3btWiUkJKhv374qVKiQ3eUAsABBDIDHevfu7fb1+vXrtXz58kzjVvj2229de8MKFCiQ7bxFixZp7dq1Wrhwobp16yZJ6t69u26//XaNHTtW8+bNu+ZrhYeHu21j//79Va1aNU2dOlXjx49XQECAx9tx+fJlOZ1OBQYGevwc3iRfvnzKl49/am6W22+/3Zaft9x0q73nr1d6erpCQ0PtLgOADTg0EcBNlZ6eruHDh6tcuXIKCgpStWrV9Oqrr8owDLd5Vw4rev/991WtWjUFBwcrKipK3333XY5ep0KFCjk6F2nRokUqWbKk7r//ftdY8eLF1b17d3366ae6cOHC9W2gpJCQEDVt2lTp6ek6fvy4pL8Of3zyySdd2121alW9/PLLbocvHjhwQA6HQ6+++qomT56sKlWqKCgoSD///LPr/KZff/1VvXv3Vnh4uIoXL67nnntOhmHo8OHDuu+++xQWFqZSpUppwoQJbjXNnj1bDodDBw4ccBv/5ptv3A4XbdWqlb744gsdPHjQdWhbxYoVJUkXL17UmDFjFBUVpfDwcIWGhurOO+/UqlWr3LahePHikqSEhATXczz//POSsj5H7PLlyxo/frxreytWrKjRo0dn6n3FihXVoUMHff/992rcuLGCg4NVuXJlzZ0797q+PydOnFD37t0VFhamokWLasiQITp//rzbnFmzZqlNmzYqUaKEgoKCVLNmTb355puZnmvTpk2KiYlRsWLFlD9/flWqVEn9+vVzm+N0OjV58mTVqlVLwcHBKlmypPr3769Tp065zTMMQy+88IJuu+02hYSEqHXr1vrpp5+ua9uu5ejRo+rXr59KliypoKAg1apVSzNnznSbkxvf51atWmW5l6xv376u99OV58nuPS9JO3fuVLdu3VSkSBEFBwerYcOGWrJkiUfbfuW9/uGHHyohIUFly5ZVwYIF1a1bN6WmpurChQt68sknVaJECRUoUEBxcXGZ3oPX83tpy5Yt+sc//qGwsDAVKFBAbdu21fr1693mXPm5/Pbbb/XPf/5TJUqU0G233abnn39eI0aMkCRVqlTJ1d8rP785fX9ez8/M6dOnNXToUFWsWFFBQUG67bbb1KdPH7dzKi9cuKCxY8eqatWqCgoKUrly5fT0009n6tPy5cvVokULFSpUSAUKFFC1atU0evTonH2jAB/Gx5QAbhrDMNSpUyetWrVK8fHxioyM1LJlyzRixAgdPXpUkyZNcpv/7bffasGCBRo8eLCCgoI0bdo03Xvvvdq4caNq166dKzVt2bJFDRo0kJ+f++dQjRs31owZM/Trr7+qTp061/28+/btk7+/vwoVKqRz586pZcuWOnr0qPr376/y5ctr7dq1GjVqlH7//fdM52PNmjVL58+f12OPPaagoCAVKVLEdV+PHj1Uo0YN/fvf/9YXX3yhF154QUWKFNFbb72lNm3a6OWXX9b777+vp556So0aNdJdd911XXU/88wzSk1N1ZEjR1zfjyt7FNPS0vT222/rwQcf1KOPPqozZ87onXfeUUxMjDZu3KjIyEgVL15cb775ph5//HF16dLFFXDr1q2b7Ws+8sgjmjNnjrp166bhw4drw4YNSkxM1C+//KJPPvnEbe6ePXvUrVs3xcfHKzY2VjNnzlTfvn0VFRWlWrVq5Wgbu3fvrooVKyoxMVHr16/XlClTdOrUKbc/Tt98803VqlVLnTp1Ur58+fTZZ5/pn//8p5xOpwYOHChJOnbsmO655x4VL15cI0eOVKFChXTgwAF9/PHHbq/Xv39/zZ49W3FxcRo8eLD279+vqVOnasuWLVqzZo1rj+mYMWP0wgsvqF27dmrXrp2SkpJ0zz336OLFiznaLkk6f/58psVIChYsqKCgIKWkpKhp06auMFG8eHH973//U3x8vNLS0lyHot6s77OZrN7zP/30k+644w6VLVtWI0eOVGhoqD788EN17txZH330kbp06eLRayUmJip//vwaOXKk9uzZo9dff10BAQHy8/PTqVOn9Pzzz2v9+vWaPXu2KlWqpDFjxrg9Pie/l3766SfdeeedCgsL09NPP62AgAC99dZbatWqlb799ls1adLE7Tn/+c9/qnjx4hozZozS09P1j3/8Q7/++qs++OADTZo0ScWKFZMkV/jNyfvzipz8zJw9e1Z33nmnfvnlF/Xr108NGjTQiRMntGTJEh05ckTFihWT0+lUp06d9P333+uxxx5TjRo19OOPP2rSpEn69ddftXjxYte2d+jQQXXr1tW4ceMUFBSkPXv2aM2aNR59vwCfYgBALhk4cKDx918rixcvNiQZL7zwgtu8bt26GQ6Hw9izZ49rTJIhydi0aZNr7ODBg0ZwcLDRpUuX66ojNDTUiI2Nzfa+fv36ZRr/4osvDEnG0qVLTZ+7ZcuWRvXq1Y3jx48bx48fN3755Rdj8ODBhiSjY8eOhmEYxvjx443Q0FDj119/dXvsyJEjDX9/f+PQoUOGYRjG/v37DUlGWFiYcezYMbe5Y8eONSQZjz32mGvs8uXLxm233WY4HA7j3//+t2v81KlTRv78+d22edasWYYkY//+/W7Pu2rVKkOSsWrVKtdY+/btjQoVKmTa1suXLxsXLlxwGzt16pRRsmRJtx4eP37ckGSMHTs203Nc2Y4rtm7dakgyHnnkEbd5Tz31lCHJ+Prrr11jFSpUMCQZ3333nWvs2LFjRlBQkDF8+PBMr5Xda3fq1Mlt/J///Kchydi2bZtr7Ny5c5keHxMTY1SuXNn19SeffGJIMn744YdsX3P16tWGJOP99993G1+6dKnb+LFjx4zAwECjffv2htPpdM0bPXq0ISnb9+/fXfmZufo2a9YswzAMIz4+3ihdurRx4sQJt8f17NnTCA8Pd21zbnyfW7ZsabRs2TLTeGxsrNt7y+w937ZtW6NOnTrG+fPnXWNOp9No3ry5ERERkaN+DBw40PX1lfd67dq1jYsXL7rGH3zwQcPhcBj/+Mc/3B7frFmzTD8HOf291LlzZyMwMNDYu3eva+y3334zChYsaNx1112usSs/ly1atDAuX77s9lr/+c9/svyZNYycvT8NI+c/M2PGjDEkGR9//HGm573yfnz33XcNPz8/Y/Xq1W73T58+3ZBkrFmzxjAMw5g0aZIhyTh+/Him5wJgjkMTAdw0X375pfz9/TV48GC38eHDh8swDP3vf/9zG2/WrJmioqJcX5cvX1733Xefli1bpoyMjFyp6c8//1RQUFCm8eDgYNf917Jz504VL15cxYsXV40aNfT666+rffv2rkO+Fi5cqDvvvFOFCxfWiRMnXLfo6GhlZGRkOqypa9eurk++r/bII4+4/t/f318NGzaUYRiKj493jRcqVEjVqlXTvn37rt2A6+Dv7+86b8fpdOrkyZO6fPmyGjZsmONVJq/25ZdfSpKGDRvmNj58+HBJ0hdffOE2XrNmTd15552ur4sXL37d23r1HoMnnnjCrRbJfYGL1NRUnThxQi1bttS+ffuUmpoqSa4FFD7//HNdunQpy9dauHChwsPDdffdd7t976OiolSgQAHX4X4rVqzQxYsX9cQTT7gdunm9C6bcd999Wr58udstJiZGhmHoo48+UseOHWUYhlstMTExSk1NdX0Pb8b3+Vqufs+fPHlSX3/9tbp3764zZ864av3jjz8UExOj3bt36+jRox69Vp8+fdzO22zSpIkMw8h0SGmTJk10+PBhXb582W38Wr+XMjIy9NVXX6lz586qXLmya17p0qX10EMP6fvvv1daWprbcz766KPy9/fP8Tbk5P15RU5+Zj766CPVq1cvy72MV96PCxcuVI0aNVS9enW390+bNm0kyfVevvJz8emnn+bZlWMBu3BoIoCb5uDBgypTpowKFizoNn5lFcWDBw+6jWe1YuHtt9+uc+fO6fjx47myLHf+/PmzPA/syjlDOVlxrmLFivrvf/8rh8Oh4OBgRUREqESJEq77d+/ere3bt2cbro4dO+b2daVKlbJ9rfLly7t9HR4eruDgYNehS38f/+OPP65Z+/WaM2eOJkyYoJ07d7qFD7OazRw8eFB+fn6qWrWq23ipUqVUqFChTO+Jq7dfkgoXLuw63yojI8N1Xt4VRYoUcVv44er3VZUqVeTn5+d2/tyaNWs0duxYrVu3TufOnXObn5qaqvDwcLVs2VJdu3ZVQkKCJk2apFatWqlz58566KGHXOF+9+7dSk1NdXs//N2V7/2V7by6tuLFi6tw4cJZPjYrt912m6Kjo7N8ndOnT2vGjBmaMWOGaS1S7n+fr+Xq592zZ48Mw9Bzzz2n5557Ltt6y5Yte92vldXPkCSVK1cu07jT6VRqaqqKFi3qGr/W7yXprxUlq1WrlmlejRo15HQ6dfjwYbdDaa+3rzl5f15xrZ8ZSdq7d6+6du1q+pq7d+/WL7/8cs3fYz169NDbb7+tRx55RCNHjlTbtm11//33q1u3bpkOAQfgjiAGwKeULl06y+Xtr4yVKVPmms8RGhqa5R+/VzidTt199916+umns7z/9ttvd/vaLPxl9al5dp+kG39bACW7hUuuZ8/ie++9p759+6pz584aMWKESpQoIX9/fyUmJmrv3r05fp6s5PQiz9fa1sOHD2f6o3bVqlWmy6tf/dp79+5V27ZtVb16dU2cOFHlypVTYGCgvvzyS02aNMn1Kb/D4dCiRYu0fv16ffbZZ1q2bJn69eunCRMmaP369SpQoICcTqdKlCih999/P8vXzu6P2tx2pebevXsrNjY2yzlXzu/Kje+zw+HItACPlP377er3/JV6n3rqKcXExGT5mKvDe05l9x7Kyc/RzXI9lxjI6fvzitzaLqfTqTp16mjixIlZ3n8lyObPn1/fffedVq1apS+++EJLly7VggUL1KZNG3311VfXtecP8DUEMQA3TYUKFbRixQqdOXPGba/Yzp07Xff/3e7duzM9x6+//qqQkJBc+wM2MjJSq1evltPpdPu0dsOGDQoJCckUkjxRpUoVnT171jSs3WxX9qpcfXHYq/c4SdmHokWLFqly5cr6+OOP3eaMHTs2R4/PSoUKFeR0OrV7926368ulpKTo9OnTmd4T11KqVCktX77cbaxevXpuX+/evdstrO3Zs0dOp9O1mt9nn32mCxcuaMmSJW57E/6+auDfNW3aVE2bNtWLL76oefPmqVevXpo/f74eeeQRValSRStWrNAdd9xh+sf2le3cvXu32+Fsx48fz7S6oieKFy+uggULKiMj45rvw9z4PhcuXDjLw0Wzer9l5UoPAgICbP25yUpOfi+FhIRo165dmebt3LlTfn5+mfa+ZSW7/l7v+zMnqlSpoh07dlxzzrZt29S2bdtr/oz7+fmpbdu2atu2rSZOnKiXXnpJzzzzjFatWuV130/Am7DPGMBN065dO2VkZGjq1Klu45MmTZLD4dA//vEPt/F169a5nZNy+PBhffrpp7rnnnty7VPVbt26KSUlxW2luxMnTmjhwoXq2LFjluePXa/u3btr3bp1WrZsWab7Tp8+nekclJuhSpUqkuR2PlpGRkaWh6mFhoZmOs9E+r9P1v/+SfqGDRu0bt06t3khISGSMoe+rLRr106SMq0ceeVT9/bt21/zOf4uODhY0dHRbrerD+1744033L5+/fXXJcn1/stqO1NTUzVr1iy3x506dSrTXoXIyEhJch3u2r17d2VkZGj8+PGZar18+bKrR9HR0QoICNDrr7/u9pxX98VT/v7+6tq1qz766KMs/+D+++GcufF9rlKlinbu3On2vNu2bcvxynklSpRQq1at9NZbb2W5x/rqw0+tdK3fS/7+/rrnnnv06aefuh3umpKSonnz5qlFixYKCwu75utcuZbY1f3N6fvzenTt2lXbtm3LtErp31+ne/fuOnr0qP773/9mmvPnn38qPT1d0l/n913t6p8LAFljjxiAm6Zjx45q3bq1nnnmGR04cED16tXTV199pU8//VRPPvmkKyxcUbt2bcXExLgtEy39dd2ia/nss8+0bds2SdKlS5e0fft2vfDCC5KkTp06uQ7D6tatm5o2baq4uDj9/PPPKlasmKZNm6aMjIwcvU5OjBgxQkuWLFGHDh1cy0anp6frxx9/1KJFi3TgwIFM53jltlq1aqlp06YaNWqUTp48qSJFimj+/PlZhsCoqCgtWLBAw4YNU6NGjVSgQAF17NhRHTp00Mcff6wuXbqoffv22r9/v6ZPn66aNWvq7Nmzrsfnz59fNWvW1IIFC3T77berSJEiql27dpaXHKhXr55iY2M1Y8YMnT59Wi1bttTGjRs1Z84cde7cWa1bt871Xuzfv1+dOnXSvffeq3Xr1um9997TQw895Npzds899ygwMFAdO3ZU//79dfbsWf33v/9ViRIl3ELBnDlzNG3aNHXp0kVVqlTRmTNn9N///ldhYWGugNmyZUv1799fiYmJ2rp1q+655x4FBARo9+7dWrhwoV577TV169ZNxYsX11NPPaXExER16NBB7dq105YtW/S///0v194b//73v7Vq1So1adJEjz76qGrWrKmTJ08qKSlJK1ascP0BnRvf5379+mnixImKiYlRfHy8jh07punTp6tWrVqZFqrIzhtvvKEWLVqoTp06evTRR1W5cmWlpKRo3bp1OnLkiOvn22o5+b30wgsvuK6l9c9//lP58uXTW2+9pQsXLuiVV17J0etcWRDkmWeeUc+ePRUQEKCOHTvm+P15PUaMGKFFixbpgQceUL9+/RQVFaWTJ09qyZIlmj59uurVq6eHH35YH374oQYMGKBVq1bpjjvuUEZGhnbu3KkPP/xQy5YtU8OGDTVu3Dh99913at++vSpUqKBjx45p2rRpuu2229SiRQuP6gN8htXLNAK4dV29fL1hGMaZM2eMoUOHGmXKlDECAgKMiIgI4z//+Y/bkt2G8X9LT7/33ntGRESEERQUZNSvX99tmXUzsbGx11zO+4qTJ08a8fHxRtGiRY2QkBCjZcuWpkuS/13Lli2NWrVqXXPemTNnjFGjRhlVq1Y1AgMDjWLFihnNmzc3Xn31VddS2leW8v7Pf/6T6fFXll6/ekno2NhYIzQ0NEd17d2714iOjjaCgoKMkiVLGqNHjzaWL1+eafn6s2fPGg899JBRqFAhQ5JrCW+n02m89NJLRoUKFVzfj88//zzTkuSGYRhr1641oqKijMDAQLclzq9evt4wDOPSpUtGQkKCUalSJSMgIMAoV66cMWrUKLdlyw3jr6W427dvn+W2ZrVU+tWuvPbPP/9sdOvWzShYsKBRuHBhY9CgQcaff/7pNnfJkiVG3bp1jeDgYKNixYrGyy+/bMycOdNtOfGkpCTjwQcfNMqXL28EBQUZJUqUMDp06OC2tPkVM2bMMKKiooz8+fMbBQsWNOrUqWM8/fTTxm+//eaak5GRYSQkJBilS5c28ufPb7Rq1crYsWOHUaFChRwvX//35dqzkpKSYgwcONAo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eiksLEyFChVSfHy8zp49a/qY8+fPa+DAgSpatKgKFCigrl27KiUlxW3O4MGDFRUVpaCgIEVGRt7ELQAAAACAv+SZINarVy/99NNPWr58uT7//HN99913euyxx0wfM3ToUH322WdauHChvv32W/3222+6//77M83r16+fevTocbNKBwAAAAA3+ewuICd++eUXLV26VD/88IMaNmwoSXr99dfVrl07vfrqqypTpkymx6Smpuqdd97RvHnz1KZNG0nSrFmzVKNGDa1fv15NmzaVJE2ZMkWSdPz4cW3fvt2iLQIAAADgy/LEHrF169apUKFCrhAmSdHR0fLz89OGDRuyfMzmzZt16dIlRUdHu8aqV6+u8uXLa926dTdUz4ULF5SWluZ2AwAAAICcyhNBLDk5WSVKlHAby5cvn4oUKaLk5ORsHxMYGKhChQq5jZcsWTLbx+RUYmKiwsPDXbdy5crd0PMBAAAA8C22BrGRI0fK4XCY3nbu3GlniVkaNWqUUlNTXbfDhw/bXRIAAACAPMTWc8SGDx+uvn37ms6pXLmySpUqpWPHjrmNX758WSdPnlSpUqWyfFypUqV08eJFnT592m2vWEpKSraPyamgoCAFBQXd0HMAAAAA8F22BrHixYurePHi15zXrFkznT59Wps3b1ZUVJQk6euvv5bT6VSTJk2yfExUVJQCAgK0cuVKde3aVZK0a9cuHTp0SM2aNcu9jQAAAACA65QnzhGrUaOG7r33Xj366KPauHGj1qxZo0GDBqlnz56uFROPHj2q6tWra+PGjZKk8PBwxcfHa9iwYVq1apU2b96suLg4NWvWzLVioiTt2bNHW7duVXJysv78809t3bpVW7du1cWLF23ZVgAAAAC3vjyxfL0kvf/++xo0aJDatm0rPz8/de3a1bX0vCRdunRJu3bt0rlz51xjkyZNcs29cOGCYmJiNG3aNLfnfeSRR/Ttt9+6vq5fv74kaf/+/apYseLN3SgAAAAAPslhGIZhdxF5XVpamsLDw5WamqqwsDC7y7FUenq6ChQoIEk6e/asQkNDba7Iu9AfAAAA35LTbJAnDk0EAAAAgFsJQQwAAAAALEYQAwAAAACLEcQAAAAAwGIEMQAAAACwGEEMAAAAACxGEAMAAAAAixHEAAAAAMBiBDEAAAAAsBhBDAAAAAAsRhADAAAAAIsRxAAAAADA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\n"},"metadata":{}}]},{"cell_type":"code","source":["from sklearn.inspection import permutation_importance\n","import matplotlib.pyplot as plt\n","\n","# Evaluate permutation importance on the validation set\n","perm_importance = permutation_importance(best_model_time, X_train_time, y_train_time, n_repeats=10, random_state=42)\n","\n","# Get importances and standard deviations\n","importances = perm_importance.importances_mean\n","stds = perm_importance.importances_std\n","indices = np.argsort(importances)[::-1]\n","\n","# Limit to top 10 features\n","top_n = 10\n","top_indices = indices[:top_n]\n","\n","# Plotting feature importances for top 10 features only\n","plt.figure(figsize=(10, 6))\n","plt.title(\"Top 10 Permutation-based Feature Importances\")\n","plt.bar(range(top_n), importances[top_indices], yerr=stds[top_indices], align='center')\n","plt.xticks(range(top_n), X_val_cv.columns[top_indices], rotation=90)\n","plt.ylabel('Importance')\n","plt.show()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":626},"id":"tOj2c3WjXgey","executionInfo":{"status":"ok","timestamp":1713901736222,"user_tz":240,"elapsed":19369,"user":{"displayName":"Wang","userId":"06822780026042244845"}},"outputId":"0ab5f169-66f7-420c-ecf8-24b08a7f333f"},"execution_count":90,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","metadata":{"id":"AITEbGtc9LeP"},"source":["# Frequency Domain Data"]},{"cell_type":"markdown","metadata":{"id":"sCvlTL6N9QO_"},"source":["## Load Data"]},{"cell_type":"code","execution_count":91,"metadata":{"id":"bYk5wPAn9OTg","executionInfo":{"status":"ok","timestamp":1713901736223,"user_tz":240,"elapsed":11,"user":{"displayName":"Wang","userId":"06822780026042244845"}}},"outputs":[],"source":["df_frequency=pd.read_csv(\"/content/drive/MyDrive/JHU/MLMA/MLMA Project/BS-HMS-Dataset/frequency_domain_features\")"]},{"cell_type":"code","execution_count":92,"metadata":{"id":"YL_L4NyK9U6B","colab":{"base_uri":"https://localhost:8080/","height":272},"executionInfo":{"status":"ok","timestamp":1713901736223,"user_tz":240,"elapsed":10,"user":{"displayName":"Wang","userId":"06822780026042244845"}},"outputId":"f5dfbded-4b16-40cc-b85e-32f77d80db0c"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Unnamed: 0  AF3_Delta_power  AF3_Theta_power  AF3_Alpha_power  \\\n","0           0       742.183654        91.890818        29.103071   \n","1           1       814.217772       115.616427        33.692698   \n","2           2       333.443681        56.892036        17.542342   \n","3           3       972.444483        96.292971        21.770639   \n","4           4       679.511986       114.487260        25.583073   \n","\n","   AF3_Beta_power  AF3_Gamma_power  AF3_spectral_entropy  F7_Delta_power  \\\n","0       39.086906        14.159668              3.392576    19380.110107   \n","1       52.126272        22.004420              3.517422     2473.146474   \n","2       37.008188        18.740256              4.115038     1400.052844   \n","3       34.067561        19.333383              2.063286    15797.879384   \n","4       32.942404        14.063132              3.881328      292.466213   \n","\n","   F7_Theta_power  F7_Alpha_power  ...  F8_Beta_power  F8_Gamma_power  \\\n","0     1675.854975      993.004181  ...    1827.793507      372.815243   \n","1      137.999940       28.948250  ...      50.502736       18.238877   \n","2      297.329986      160.979736  ...     246.406774       58.009400   \n","3     1250.494293      492.593757  ...     173.137554       37.285689   \n","4       38.358567       10.211787  ...      36.050785       14.784819   \n","\n","   F8_spectral_entropy  AF4_Delta_power  AF4_Theta_power  AF4_Alpha_power  \\\n","0             2.927640       722.066811        73.374318        26.934085   \n","1             3.321144       988.999364       104.930425        34.668521   \n","2             3.251759       439.611659        62.292803        21.426163   \n","3             2.788485      6092.273632       235.566933        47.641229   \n","4             3.466234      2339.739461       143.981679        26.881912   \n","\n","   AF4_Beta_power  AF4_Gamma_power  AF4_spectral_entropy         Test  \n","0       39.510158        12.868163              3.228577  EEG_Test0_1  \n","1       50.649449        20.801604              2.722334  EEG_Test0_2  \n","2       42.629270        21.327653              3.976593  EEG_Test0_3  \n","3       44.089441        18.788212              2.098816  EEG_Test0_4  \n","4       31.913806        12.180580              2.435904  EEG_Test0_5  \n","\n","[5 rows x 86 columns]"],"text/html":["\n","  <div id=\"df-c602116c-ca2c-4036-8a70-97eb4124e7ed\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>AF3_Delta_power</th>\n","      <th>AF3_Theta_power</th>\n","      <th>AF3_Alpha_power</th>\n","      <th>AF3_Beta_power</th>\n","      <th>AF3_Gamma_power</th>\n","      <th>AF3_spectral_entropy</th>\n","      <th>F7_Delta_power</th>\n","      <th>F7_Theta_power</th>\n","      <th>F7_Alpha_power</th>\n","      <th>...</th>\n","      <th>F8_Beta_power</th>\n","      <th>F8_Gamma_power</th>\n","      <th>F8_spectral_entropy</th>\n","      <th>AF4_Delta_power</th>\n","      <th>AF4_Theta_power</th>\n","      <th>AF4_Alpha_power</th>\n","      <th>AF4_Beta_power</th>\n","      <th>AF4_Gamma_power</th>\n","      <th>AF4_spectral_entropy</th>\n","      <th>Test</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>742.183654</td>\n","      <td>91.890818</td>\n","      <td>29.103071</td>\n","      <td>39.086906</td>\n","      <td>14.159668</td>\n","      <td>3.392576</td>\n","      <td>19380.110107</td>\n","      <td>1675.854975</td>\n","      <td>993.004181</td>\n","      <td>...</td>\n","      <td>1827.793507</td>\n","      <td>372.815243</td>\n","      <td>2.927640</td>\n","      <td>722.066811</td>\n","      <td>73.374318</td>\n","      <td>26.934085</td>\n","      <td>39.510158</td>\n","      <td>12.868163</td>\n","      <td>3.228577</td>\n","      <td>EEG_Test0_1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>814.217772</td>\n","      <td>115.616427</td>\n","      <td>33.692698</td>\n","      <td>52.126272</td>\n","      <td>22.004420</td>\n","      <td>3.517422</td>\n","      <td>2473.146474</td>\n","      <td>137.999940</td>\n","      <td>28.948250</td>\n","      <td>...</td>\n","      <td>50.502736</td>\n","      <td>18.238877</td>\n","      <td>3.321144</td>\n","      <td>988.999364</td>\n","      <td>104.930425</td>\n","      <td>34.668521</td>\n","      <td>50.649449</td>\n","      <td>20.801604</td>\n","      <td>2.722334</td>\n","      <td>EEG_Test0_2</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>333.443681</td>\n","      <td>56.892036</td>\n","      <td>17.542342</td>\n","      <td>37.008188</td>\n","      <td>18.740256</td>\n","      <td>4.115038</td>\n","      <td>1400.052844</td>\n","      <td>297.329986</td>\n","      <td>160.979736</td>\n","      <td>...</td>\n","      <td>246.406774</td>\n","      <td>58.009400</td>\n","      <td>3.251759</td>\n","      <td>439.611659</td>\n","      <td>62.292803</td>\n","      <td>21.426163</td>\n","      <td>42.629270</td>\n","      <td>21.327653</td>\n","      <td>3.976593</td>\n","      <td>EEG_Test0_3</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>972.444483</td>\n","      <td>96.292971</td>\n","      <td>21.770639</td>\n","      <td>34.067561</td>\n","      <td>19.333383</td>\n","      <td>2.063286</td>\n","      <td>15797.879384</td>\n","      <td>1250.494293</td>\n","      <td>492.593757</td>\n","      <td>...</td>\n","      <td>173.137554</td>\n","      <td>37.285689</td>\n","      <td>2.788485</td>\n","      <td>6092.273632</td>\n","      <td>235.566933</td>\n","      <td>47.641229</td>\n","      <td>44.089441</td>\n","      <td>18.788212</td>\n","      <td>2.098816</td>\n","      <td>EEG_Test0_4</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>679.511986</td>\n","      <td>114.487260</td>\n","      <td>25.583073</td>\n","      <td>32.942404</td>\n","      <td>14.063132</td>\n","      <td>3.881328</td>\n","      <td>292.466213</td>\n","      <td>38.358567</td>\n","      <td>10.211787</td>\n","      <td>...</td>\n","      <td>36.050785</td>\n","      <td>14.784819</td>\n","      <td>3.466234</td>\n","      <td>2339.739461</td>\n","      <td>143.981679</td>\n","      <td>26.881912</td>\n","      <td>31.913806</td>\n","      <td>12.180580</td>\n","      <td>2.435904</td>\n","      <td>EEG_Test0_5</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows Ã— 86 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c602116c-ca2c-4036-8a70-97eb4124e7ed')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-c602116c-ca2c-4036-8a70-97eb4124e7ed button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-c602116c-ca2c-4036-8a70-97eb4124e7ed');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-1748ac41-a440-4385-9c23-b201052f95b1\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-1748ac41-a440-4385-9c23-b201052f95b1')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-1748ac41-a440-4385-9c23-b201052f95b1 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_frequency_filtered"}},"metadata":{},"execution_count":92}],"source":["rows_to_drop = ['Test20', 'Test21', 'Test27']\n","df_frequency_filtered = df_frequency[~df_frequency['Test'].str.contains('|'.join(rows_to_drop))]\n","df_frequency_filtered.head()"]},{"cell_type":"code","execution_count":93,"metadata":{"id":"seLQLjhK-My_","colab":{"base_uri":"https://localhost:8080/","height":547},"executionInfo":{"status":"ok","timestamp":1713901736223,"user_tz":240,"elapsed":9,"user":{"displayName":"Wang","userId":"06822780026042244845"}},"outputId":"3341c417-a50e-49a3-d9d9-d3043b2134a3"},"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-93-dfb13a3777e7>:2: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  df_frequency_filtered[\"Emotion\"]=metadata_video_id_list\n"]},{"output_type":"execute_result","data":{"text/plain":["     AF3_Delta_power  AF3_Theta_power  AF3_Alpha_power  AF3_Beta_power  \\\n","0         742.183654        91.890818        29.103071       39.086906   \n","1         814.217772       115.616427        33.692698       52.126272   \n","2         333.443681        56.892036        17.542342       37.008188   \n","3         972.444483        96.292971        21.770639       34.067561   \n","4         679.511986       114.487260        25.583073       32.942404   \n","..               ...              ...              ...             ...   \n","211      3988.090799        66.729897        26.714639       52.603418   \n","212       328.027554        24.065557        12.305281       11.390863   \n","213       196.552634        22.197301        10.330547       11.698973   \n","214       125.616279        14.811609        14.844813       13.978226   \n","215       178.529334        19.035797         8.773452       10.335400   \n","\n","     AF3_Gamma_power  AF3_spectral_entropy  F7_Delta_power  F7_Theta_power  \\\n","0          14.159668              3.392576    19380.110107     1675.854975   \n","1          22.004420              3.517422     2473.146474      137.999940   \n","2          18.740256              4.115038     1400.052844      297.329986   \n","3          19.333383              2.063286    15797.879384     1250.494293   \n","4          14.063132              3.881328      292.466213       38.358567   \n","..               ...                   ...             ...             ...   \n","211        17.757124              2.581967     1128.316705      100.116058   \n","212         4.855920              2.003684     1214.553582       67.621555   \n","213         5.910977              2.469211     2412.923177       94.241990   \n","214         6.082713              3.141940     1198.985129       74.641414   \n","215         5.122136              3.436121      859.856118       52.064562   \n","\n","     F7_Alpha_power  F7_Beta_power  ...  F8_Beta_power  F8_Gamma_power  \\\n","0        993.004181    1200.003919  ...    1827.793507      372.815243   \n","1         28.948250      35.874422  ...      50.502736       18.238877   \n","2        160.979736     296.967472  ...     246.406774       58.009400   \n","3        492.593757     492.119875  ...     173.137554       37.285689   \n","4         10.211787      19.628216  ...      36.050785       14.784819   \n","..              ...            ...  ...            ...             ...   \n","211       25.147104      78.176664  ...     101.401419       55.028680   \n","212       24.157729      25.644321  ...      23.522324       10.241707   \n","213       34.393498      61.537160  ...      33.520476       14.401712   \n","214       33.214891      36.852710  ...      22.146428       11.727418   \n","215       17.522062      24.804552  ...      17.242093        9.168454   \n","\n","     F8_spectral_entropy  AF4_Delta_power  AF4_Theta_power  AF4_Alpha_power  \\\n","0               2.927640       722.066811        73.374318        26.934085   \n","1               3.321144       988.999364       104.930425        34.668521   \n","2               3.251759       439.611659        62.292803        21.426163   \n","3               2.788485      6092.273632       235.566933        47.641229   \n","4               3.466234      2339.739461       143.981679        26.881912   \n","..                   ...              ...              ...              ...   \n","211             2.829569       549.013560        50.597313        19.869369   \n","212             3.310003       806.514682        67.316092        34.419324   \n","213             2.614483       929.661063        66.896045        27.174102   \n","214             2.334435       346.849914        31.735962        34.137930   \n","215             3.958936       429.863409        47.130917        20.924372   \n","\n","     AF4_Beta_power  AF4_Gamma_power  AF4_spectral_entropy  Emotion  \n","0         39.510158        12.868163              3.228577        1  \n","1         50.649449        20.801604              2.722334        1  \n","2         42.629270        21.327653              3.976593        0  \n","3         44.089441        18.788212              2.098816        0  \n","4         31.913806        12.180580              2.435904        1  \n","..              ...              ...                   ...      ...  \n","211       32.719328        26.388016              3.308674        1  \n","212       31.208080        14.308119              3.121754        0  \n","213       28.494446        13.939820              2.230978        0  \n","214       32.800019        15.050338              2.446117        1  \n","215       23.692223        11.364165              3.710480        1  \n","\n","[200 rows x 85 columns]"],"text/html":["\n","  <div id=\"df-484782d2-8491-449d-87bc-41868e8e3ea8\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>AF3_Delta_power</th>\n","      <th>AF3_Theta_power</th>\n","      <th>AF3_Alpha_power</th>\n","      <th>AF3_Beta_power</th>\n","      <th>AF3_Gamma_power</th>\n","      <th>AF3_spectral_entropy</th>\n","      <th>F7_Delta_power</th>\n","      <th>F7_Theta_power</th>\n","      <th>F7_Alpha_power</th>\n","      <th>F7_Beta_power</th>\n","      <th>...</th>\n","      <th>F8_Beta_power</th>\n","      <th>F8_Gamma_power</th>\n","      <th>F8_spectral_entropy</th>\n","      <th>AF4_Delta_power</th>\n","      <th>AF4_Theta_power</th>\n","      <th>AF4_Alpha_power</th>\n","      <th>AF4_Beta_power</th>\n","      <th>AF4_Gamma_power</th>\n","      <th>AF4_spectral_entropy</th>\n","      <th>Emotion</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>742.183654</td>\n","      <td>91.890818</td>\n","      <td>29.103071</td>\n","      <td>39.086906</td>\n","      <td>14.159668</td>\n","      <td>3.392576</td>\n","      <td>19380.110107</td>\n","      <td>1675.854975</td>\n","      <td>993.004181</td>\n","      <td>1200.003919</td>\n","      <td>...</td>\n","      <td>1827.793507</td>\n","      <td>372.815243</td>\n","      <td>2.927640</td>\n","      <td>722.066811</td>\n","      <td>73.374318</td>\n","      <td>26.934085</td>\n","      <td>39.510158</td>\n","      <td>12.868163</td>\n","      <td>3.228577</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>814.217772</td>\n","      <td>115.616427</td>\n","      <td>33.692698</td>\n","      <td>52.126272</td>\n","      <td>22.004420</td>\n","      <td>3.517422</td>\n","      <td>2473.146474</td>\n","      <td>137.999940</td>\n","      <td>28.948250</td>\n","      <td>35.874422</td>\n","      <td>...</td>\n","      <td>50.502736</td>\n","      <td>18.238877</td>\n","      <td>3.321144</td>\n","      <td>988.999364</td>\n","      <td>104.930425</td>\n","      <td>34.668521</td>\n","      <td>50.649449</td>\n","      <td>20.801604</td>\n","      <td>2.722334</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>333.443681</td>\n","      <td>56.892036</td>\n","      <td>17.542342</td>\n","      <td>37.008188</td>\n","      <td>18.740256</td>\n","      <td>4.115038</td>\n","      <td>1400.052844</td>\n","      <td>297.329986</td>\n","      <td>160.979736</td>\n","      <td>296.967472</td>\n","      <td>...</td>\n","      <td>246.406774</td>\n","      <td>58.009400</td>\n","      <td>3.251759</td>\n","      <td>439.611659</td>\n","      <td>62.292803</td>\n","      <td>21.426163</td>\n","      <td>42.629270</td>\n","      <td>21.327653</td>\n","      <td>3.976593</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>972.444483</td>\n","      <td>96.292971</td>\n","      <td>21.770639</td>\n","      <td>34.067561</td>\n","      <td>19.333383</td>\n","      <td>2.063286</td>\n","      <td>15797.879384</td>\n","      <td>1250.494293</td>\n","      <td>492.593757</td>\n","      <td>492.119875</td>\n","      <td>...</td>\n","      <td>173.137554</td>\n","      <td>37.285689</td>\n","      <td>2.788485</td>\n","      <td>6092.273632</td>\n","      <td>235.566933</td>\n","      <td>47.641229</td>\n","      <td>44.089441</td>\n","      <td>18.788212</td>\n","      <td>2.098816</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>679.511986</td>\n","      <td>114.487260</td>\n","      <td>25.583073</td>\n","      <td>32.942404</td>\n","      <td>14.063132</td>\n","      <td>3.881328</td>\n","      <td>292.466213</td>\n","      <td>38.358567</td>\n","      <td>10.211787</td>\n","      <td>19.628216</td>\n","      <td>...</td>\n","      <td>36.050785</td>\n","      <td>14.784819</td>\n","      <td>3.466234</td>\n","      <td>2339.739461</td>\n","      <td>143.981679</td>\n","      <td>26.881912</td>\n","      <td>31.913806</td>\n","      <td>12.180580</td>\n","      <td>2.435904</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>211</th>\n","      <td>3988.090799</td>\n","      <td>66.729897</td>\n","      <td>26.714639</td>\n","      <td>52.603418</td>\n","      <td>17.757124</td>\n","      <td>2.581967</td>\n","      <td>1128.316705</td>\n","      <td>100.116058</td>\n","      <td>25.147104</td>\n","      <td>78.176664</td>\n","      <td>...</td>\n","      <td>101.401419</td>\n","      <td>55.028680</td>\n","      <td>2.829569</td>\n","      <td>549.013560</td>\n","      <td>50.597313</td>\n","      <td>19.869369</td>\n","      <td>32.719328</td>\n","      <td>26.388016</td>\n","      <td>3.308674</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>212</th>\n","      <td>328.027554</td>\n","      <td>24.065557</td>\n","      <td>12.305281</td>\n","      <td>11.390863</td>\n","      <td>4.855920</td>\n","      <td>2.003684</td>\n","      <td>1214.553582</td>\n","      <td>67.621555</td>\n","      <td>24.157729</td>\n","      <td>25.644321</td>\n","      <td>...</td>\n","      <td>23.522324</td>\n","      <td>10.241707</td>\n","      <td>3.310003</td>\n","      <td>806.514682</td>\n","      <td>67.316092</td>\n","      <td>34.419324</td>\n","      <td>31.208080</td>\n","      <td>14.308119</td>\n","      <td>3.121754</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>213</th>\n","      <td>196.552634</td>\n","      <td>22.197301</td>\n","      <td>10.330547</td>\n","      <td>11.698973</td>\n","      <td>5.910977</td>\n","      <td>2.469211</td>\n","      <td>2412.923177</td>\n","      <td>94.241990</td>\n","      <td>34.393498</td>\n","      <td>61.537160</td>\n","      <td>...</td>\n","      <td>33.520476</td>\n","      <td>14.401712</td>\n","      <td>2.614483</td>\n","      <td>929.661063</td>\n","      <td>66.896045</td>\n","      <td>27.174102</td>\n","      <td>28.494446</td>\n","      <td>13.939820</td>\n","      <td>2.230978</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>214</th>\n","      <td>125.616279</td>\n","      <td>14.811609</td>\n","      <td>14.844813</td>\n","      <td>13.978226</td>\n","      <td>6.082713</td>\n","      <td>3.141940</td>\n","      <td>1198.985129</td>\n","      <td>74.641414</td>\n","      <td>33.214891</td>\n","      <td>36.852710</td>\n","      <td>...</td>\n","      <td>22.146428</td>\n","      <td>11.727418</td>\n","      <td>2.334435</td>\n","      <td>346.849914</td>\n","      <td>31.735962</td>\n","      <td>34.137930</td>\n","      <td>32.800019</td>\n","      <td>15.050338</td>\n","      <td>2.446117</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>215</th>\n","      <td>178.529334</td>\n","      <td>19.035797</td>\n","      <td>8.773452</td>\n","      <td>10.335400</td>\n","      <td>5.122136</td>\n","      <td>3.436121</td>\n","      <td>859.856118</td>\n","      <td>52.064562</td>\n","      <td>17.522062</td>\n","      <td>24.804552</td>\n","      <td>...</td>\n","      <td>17.242093</td>\n","      <td>9.168454</td>\n","      <td>3.958936</td>\n","      <td>429.863409</td>\n","      <td>47.130917</td>\n","      <td>20.924372</td>\n","      <td>23.692223</td>\n","      <td>11.364165</td>\n","      <td>3.710480</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>200 rows Ã— 85 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-484782d2-8491-449d-87bc-41868e8e3ea8')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-484782d2-8491-449d-87bc-41868e8e3ea8 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-484782d2-8491-449d-87bc-41868e8e3ea8');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-2dfa5a39-30e0-4d3a-9437-93ea8c90ddc8\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-2dfa5a39-30e0-4d3a-9437-93ea8c90ddc8')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-2dfa5a39-30e0-4d3a-9437-93ea8c90ddc8 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_9065535b-9217-4ae4-93f7-32b4eee9fca5\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df_frequency_filtered')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_9065535b-9217-4ae4-93f7-32b4eee9fca5 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df_frequency_filtered');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_frequency_filtered"}},"metadata":{},"execution_count":93}],"source":["# add Emotion column\n","df_frequency_filtered[\"Emotion\"]=metadata_video_id_list\n","# Drop \"Unnamed: 0\",\"Test\" columns\n","df_frequency_filtered=df_frequency_filtered.drop(columns=[\"Unnamed: 0\",\"Test\"])\n","df_frequency_filtered"]},{"cell_type":"markdown","metadata":{"id":"eH5eSZ58-nMC"},"source":["## Train Test Split"]},{"cell_type":"code","execution_count":94,"metadata":{"id":"1_VzOgLz-pdF","colab":{"base_uri":"https://localhost:8080/","height":255},"executionInfo":{"status":"ok","timestamp":1713901736223,"user_tz":240,"elapsed":6,"user":{"displayName":"Wang","userId":"06822780026042244845"}},"outputId":"3cbb4f09-a675-4902-cec9-99969d3341d9"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["   AF3_Delta_power  AF3_Theta_power  AF3_Alpha_power  AF3_Beta_power  \\\n","0       742.183654        91.890818        29.103071       39.086906   \n","1       814.217772       115.616427        33.692698       52.126272   \n","2       333.443681        56.892036        17.542342       37.008188   \n","3       972.444483        96.292971        21.770639       34.067561   \n","4       679.511986       114.487260        25.583073       32.942404   \n","\n","   AF3_Gamma_power  AF3_spectral_entropy  F7_Delta_power  F7_Theta_power  \\\n","0        14.159668              3.392576    19380.110107     1675.854975   \n","1        22.004420              3.517422     2473.146474      137.999940   \n","2        18.740256              4.115038     1400.052844      297.329986   \n","3        19.333383              2.063286    15797.879384     1250.494293   \n","4        14.063132              3.881328      292.466213       38.358567   \n","\n","   F7_Alpha_power  F7_Beta_power  ...  F8_Gamma_power  F8_spectral_entropy  \\\n","0      993.004181    1200.003919  ...      372.815243             2.927640   \n","1       28.948250      35.874422  ...       18.238877             3.321144   \n","2      160.979736     296.967472  ...       58.009400             3.251759   \n","3      492.593757     492.119875  ...       37.285689             2.788485   \n","4       10.211787      19.628216  ...       14.784819             3.466234   \n","\n","   AF4_Delta_power  AF4_Theta_power  AF4_Alpha_power  AF4_Beta_power  \\\n","0       722.066811        73.374318        26.934085       39.510158   \n","1       988.999364       104.930425        34.668521       50.649449   \n","2       439.611659        62.292803        21.426163       42.629270   \n","3      6092.273632       235.566933        47.641229       44.089441   \n","4      2339.739461       143.981679        26.881912       31.913806   \n","\n","   AF4_Gamma_power  AF4_spectral_entropy  Emotion  Folder  \n","0        12.868163              3.228577        1       1  \n","1        20.801604              2.722334        1       1  \n","2        21.327653              3.976593        0       1  \n","3        18.788212              2.098816        0       1  \n","4        12.180580              2.435904        1       1  \n","\n","[5 rows x 86 columns]"],"text/html":["\n","  <div id=\"df-f04132cb-e203-478a-b132-c0ec36e677fd\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>AF3_Delta_power</th>\n","      <th>AF3_Theta_power</th>\n","      <th>AF3_Alpha_power</th>\n","      <th>AF3_Beta_power</th>\n","      <th>AF3_Gamma_power</th>\n","      <th>AF3_spectral_entropy</th>\n","      <th>F7_Delta_power</th>\n","      <th>F7_Theta_power</th>\n","      <th>F7_Alpha_power</th>\n","      <th>F7_Beta_power</th>\n","      <th>...</th>\n","      <th>F8_Gamma_power</th>\n","      <th>F8_spectral_entropy</th>\n","      <th>AF4_Delta_power</th>\n","      <th>AF4_Theta_power</th>\n","      <th>AF4_Alpha_power</th>\n","      <th>AF4_Beta_power</th>\n","      <th>AF4_Gamma_power</th>\n","      <th>AF4_spectral_entropy</th>\n","      <th>Emotion</th>\n","      <th>Folder</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>742.183654</td>\n","      <td>91.890818</td>\n","      <td>29.103071</td>\n","      <td>39.086906</td>\n","      <td>14.159668</td>\n","      <td>3.392576</td>\n","      <td>19380.110107</td>\n","      <td>1675.854975</td>\n","      <td>993.004181</td>\n","      <td>1200.003919</td>\n","      <td>...</td>\n","      <td>372.815243</td>\n","      <td>2.927640</td>\n","      <td>722.066811</td>\n","      <td>73.374318</td>\n","      <td>26.934085</td>\n","      <td>39.510158</td>\n","      <td>12.868163</td>\n","      <td>3.228577</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>814.217772</td>\n","      <td>115.616427</td>\n","      <td>33.692698</td>\n","      <td>52.126272</td>\n","      <td>22.004420</td>\n","      <td>3.517422</td>\n","      <td>2473.146474</td>\n","      <td>137.999940</td>\n","      <td>28.948250</td>\n","      <td>35.874422</td>\n","      <td>...</td>\n","      <td>18.238877</td>\n","      <td>3.321144</td>\n","      <td>988.999364</td>\n","      <td>104.930425</td>\n","      <td>34.668521</td>\n","      <td>50.649449</td>\n","      <td>20.801604</td>\n","      <td>2.722334</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>333.443681</td>\n","      <td>56.892036</td>\n","      <td>17.542342</td>\n","      <td>37.008188</td>\n","      <td>18.740256</td>\n","      <td>4.115038</td>\n","      <td>1400.052844</td>\n","      <td>297.329986</td>\n","      <td>160.979736</td>\n","      <td>296.967472</td>\n","      <td>...</td>\n","      <td>58.009400</td>\n","      <td>3.251759</td>\n","      <td>439.611659</td>\n","      <td>62.292803</td>\n","      <td>21.426163</td>\n","      <td>42.629270</td>\n","      <td>21.327653</td>\n","      <td>3.976593</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>972.444483</td>\n","      <td>96.292971</td>\n","      <td>21.770639</td>\n","      <td>34.067561</td>\n","      <td>19.333383</td>\n","      <td>2.063286</td>\n","      <td>15797.879384</td>\n","      <td>1250.494293</td>\n","      <td>492.593757</td>\n","      <td>492.119875</td>\n","      <td>...</td>\n","      <td>37.285689</td>\n","      <td>2.788485</td>\n","      <td>6092.273632</td>\n","      <td>235.566933</td>\n","      <td>47.641229</td>\n","      <td>44.089441</td>\n","      <td>18.788212</td>\n","      <td>2.098816</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>679.511986</td>\n","      <td>114.487260</td>\n","      <td>25.583073</td>\n","      <td>32.942404</td>\n","      <td>14.063132</td>\n","      <td>3.881328</td>\n","      <td>292.466213</td>\n","      <td>38.358567</td>\n","      <td>10.211787</td>\n","      <td>19.628216</td>\n","      <td>...</td>\n","      <td>14.784819</td>\n","      <td>3.466234</td>\n","      <td>2339.739461</td>\n","      <td>143.981679</td>\n","      <td>26.881912</td>\n","      <td>31.913806</td>\n","      <td>12.180580</td>\n","      <td>2.435904</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows Ã— 86 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f04132cb-e203-478a-b132-c0ec36e677fd')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-f04132cb-e203-478a-b132-c0ec36e677fd button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-f04132cb-e203-478a-b132-c0ec36e677fd');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-1d2fa70d-c684-4dd0-ba02-0633b6860416\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-1d2fa70d-c684-4dd0-ba02-0633b6860416')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-1d2fa70d-c684-4dd0-ba02-0633b6860416 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_frequency_filtered"}},"metadata":{},"execution_count":94}],"source":["# Assign Folder\n","df_frequency_filtered[\"Folder\"]=folder\n","df_frequency_filtered.head()"]},{"cell_type":"code","execution_count":108,"metadata":{"id":"WYqquE1U-6mN","executionInfo":{"status":"ok","timestamp":1713901983151,"user_tz":240,"elapsed":501,"user":{"displayName":"Wang","userId":"06822780026042244845"}}},"outputs":[],"source":["train_frequency = df_frequency_filtered[df_frequency_filtered['Folder'].isin(train_folders)]\n","X_train_frequency =train_frequency.iloc[:,:-2]\n","y_train_frequency=train_frequency.iloc[:,-2]\n","\n","test_frequency = df_frequency_filtered[df_frequency_filtered['Folder'].isin(test_folders)]\n","X_test_frequency =test_frequency.iloc[:,:-2]\n","y_test_frequency=test_frequency.iloc[:,-2]\n","# X_test_frequency"]},{"cell_type":"markdown","metadata":{"id":"L2J6YWXp_JFS"},"source":["## SVM model + Cross Validation"]},{"cell_type":"code","execution_count":109,"metadata":{"id":"E08HRLZYOPDj","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1713901991870,"user_tz":240,"elapsed":7654,"user":{"displayName":"Wang","userId":"06822780026042244845"}},"outputId":"4ba91582-44c9-4d8f-80b3-1bc1fa3b4cc1"},"outputs":[{"output_type":"stream","name":"stdout","text":["Fitting 3 folds for each of 16 candidates, totalling 48 fits\n","Best parameters for fold 1: {'svc__C': 1, 'svc__gamma': 'scale', 'svc__kernel': 'rbf'}\n","Fold 1 completed. Validation accuracy: 50.00%\n","Fitting 3 folds for each of 16 candidates, totalling 48 fits\n","Best parameters for fold 2: {'svc__C': 0.01, 'svc__gamma': 'scale', 'svc__kernel': 'linear'}\n","Fold 2 completed. Validation accuracy: 62.50%\n","Fitting 3 folds for each of 16 candidates, totalling 48 fits\n","Best parameters for fold 3: {'svc__C': 0.01, 'svc__gamma': 'scale', 'svc__kernel': 'linear'}\n","Fold 3 completed. Validation accuracy: 62.50%\n","Fitting 3 folds for each of 16 candidates, totalling 48 fits\n","Best parameters for fold 4: {'svc__C': 0.1, 'svc__gamma': 'scale', 'svc__kernel': 'linear'}\n","Fold 4 completed. Validation accuracy: 81.25%\n","Fitting 3 folds for each of 16 candidates, totalling 48 fits\n","Best parameters for fold 5: {'svc__C': 0.1, 'svc__gamma': 'scale', 'svc__kernel': 'linear'}\n","Fold 5 completed. Validation accuracy: 81.25%\n","Fitting 3 folds for each of 16 candidates, totalling 48 fits\n","Best parameters for fold 6: {'svc__C': 0.01, 'svc__gamma': 'scale', 'svc__kernel': 'linear'}\n","Fold 6 completed. Validation accuracy: 50.00%\n","Fitting 3 folds for each of 16 candidates, totalling 48 fits\n","Best parameters for fold 7: {'svc__C': 0.01, 'svc__gamma': 'scale', 'svc__kernel': 'linear'}\n","Fold 7 completed. Validation accuracy: 50.00%\n","Fitting 3 folds for each of 16 candidates, totalling 48 fits\n","Best parameters for fold 8: {'svc__C': 0.1, 'svc__gamma': 'scale', 'svc__kernel': 'linear'}\n","Fold 8 completed. Validation accuracy: 75.00%\n","Fitting 3 folds for each of 16 candidates, totalling 48 fits\n","Best parameters for fold 9: {'svc__C': 1, 'svc__gamma': 'scale', 'svc__kernel': 'rbf'}\n","Fold 9 completed. Validation accuracy: 25.00%\n","Fitting 3 folds for each of 16 candidates, totalling 48 fits\n","Best parameters for fold 10: {'svc__C': 0.1, 'svc__gamma': 'scale', 'svc__kernel': 'linear'}\n","Fold 10 completed. Validation accuracy: 25.00%\n","Best validation accuracy: 81.25%\n"]}],"source":["\n","cv_scores = []\n","best_model_frequency = None\n","best_accuracy_frequency = 0  # Initialize best accuracy to zero\n","\n","for i in range(fold):\n","    # Shuffle the folder names to ensure random distribution\n","    random.shuffle(train_folders)\n","\n","    # Calculate the indices for the 90-10 split\n","    train_split_cv = int(0.9 * len(train_folders))  # 90% for training\n","\n","    # Split the folders into training and validation\n","    train_folders_cv = train_folders[:train_split_cv]\n","    val_folders_cv = train_folders[train_split_cv:]\n","\n","    # Filter data based on the folder names\n","    train_cv = train_frequency[train_frequency['Folder'].isin(train_folders_cv)]\n","    X_train_cv = train_cv.iloc[:, :-2]\n","    y_train_cv = train_cv.iloc[:, -2]\n","\n","    val_cv = train_frequency[train_frequency['Folder'].isin(val_folders_cv)]\n","    X_val_cv = val_cv.iloc[:, :-2]\n","    y_val_cv = val_cv.iloc[:, -2]\n","\n","    # Create and configure the grid search wrapped SVM model\n","    grid_search_model = create_grid_search_svm_model()\n","\n","    # Fit the grid search model on training data\n","    grid_search_model.fit(X_train_cv, y_train_cv)\n","\n","    # Print the best parameters found by the grid search\n","    print(f\"Best parameters for fold {i+1}: {grid_search_model.best_params_}\")\n","\n","    # Best estimator found by grid search\n","    best_model = grid_search_model.best_estimator_\n","\n","    # Evaluate the best model on the validation set\n","    val_predictions = best_model.predict(X_val_cv)\n","    val_accuracy = accuracy_score(y_val_cv, val_predictions)\n","    cv_scores.append(val_accuracy)\n","    print(f\"Fold {i+1} completed. Validation accuracy: {val_accuracy * 100:.2f}%\")\n","\n","    # Check if the current model has the best accuracy\n","    if val_accuracy > best_accuracy_frequency:\n","        best_accuracy_frequency = val_accuracy\n","        best_model_frequency = best_model\n","\n","# Report the best accuracy found\n","print(f\"Best validation accuracy: {best_accuracy_frequency * 100:.2f}%\")\n"]},{"cell_type":"code","source":["# Evaluate permutation importance on the validation set\n","perm_importance = permutation_importance(best_model_frequency, X_val_cv, y_val_cv, n_repeats=10, random_state=42)\n","\n","# Get importances and standard deviations\n","importances = perm_importance.importances_mean\n","stds = perm_importance.importances_std\n","indices = np.argsort(importances)[::-1]\n","\n","# Limit to top 10 features\n","top_n = 10\n","top_indices = indices[:top_n]\n","\n","# Plotting feature importances for top 10 features only\n","plt.figure(figsize=(10, 5))\n","plt.title(\"Top 10 Permutation-based Feature Importances\")\n","plt.bar(range(top_n), importances[top_indices], yerr=stds[top_indices], align='center')\n","plt.xticks(range(top_n), X_val_cv.columns[top_indices], rotation=45)\n","plt.ylabel('Importance')\n","plt.show()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":563},"id":"eAE9Bm71WZ_7","executionInfo":{"status":"ok","timestamp":1713902098525,"user_tz":240,"elapsed":4422,"user":{"displayName":"Wang","userId":"06822780026042244845"}},"outputId":"0680ba2e-26c8-4ed6-9f90-1b9777c2bf7e"},"execution_count":116,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x500 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# Evaluate permutation importance on the validation set\n","perm_importance = permutation_importance(best_model_frequency, X_train_frequency, y_train_frequency, n_repeats=10, random_state=42)\n","\n","# Get importances and standard deviations\n","importances = perm_importance.importances_mean\n","stds = perm_importance.importances_std\n","indices = np.argsort(importances)[::-1]\n","\n","# Limit to top 10 features\n","top_n = 10\n","top_indices = indices[:top_n]\n","\n","# Plotting feature importances for top 10 features only\n","plt.figure(figsize=(15, 5))\n","plt.title(\"Top 10 Permutation-based Feature Importances\")\n","plt.bar(range(top_n), importances[top_indices], yerr=stds[top_indices], align='center')\n","plt.xticks(range(top_n), X_val_cv.columns[top_indices], rotation=90)\n","plt.ylabel('Importance')\n","plt.show()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":674},"id":"Pv5e9uwDYIb8","executionInfo":{"status":"ok","timestamp":1713901999416,"user_tz":240,"elapsed":4643,"user":{"displayName":"Wang","userId":"06822780026042244845"}},"outputId":"96d5fb0d-b775-4e72-f2e6-60e20c24acb6"},"execution_count":111,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","metadata":{"id":"yNwkLR--TjAY"},"source":["# Time Frequency Together"]},{"cell_type":"markdown","metadata":{"id":"KZRYW7_6Y2X6"},"source":["## Concatenate Data"]},{"cell_type":"code","execution_count":99,"metadata":{"id":"6kZ6R5FKUKEA","colab":{"base_uri":"https://localhost:8080/","height":443},"executionInfo":{"status":"ok","timestamp":1713901751447,"user_tz":240,"elapsed":40,"user":{"displayName":"Wang","userId":"06822780026042244845"}},"outputId":"588f3f40-59c7-426b-901c-c503213b4477"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["        AF3_mean    AF3_std      AF3_var   AF3_median      AF3_min  \\\n","0    4233.422687  43.471805  1889.797801  4231.794922  3241.025635   \n","1    4231.008787  44.189663  1952.726344  4229.743652  3387.692139   \n","2    4235.494381  25.175706   633.816192  4233.846191  3968.205078   \n","3    4237.481215  86.477155  7478.298389  4236.922852  3529.743408   \n","4    4233.419821  34.626376  1198.985906  4230.769043  3809.230713   \n","..           ...        ...          ...          ...          ...   \n","211  4239.671983  97.882280  9580.940701  4237.948730   759.487183   \n","212  4229.912101  50.426474  2542.829266  4228.205078  3890.256348   \n","213  4234.076193  32.293637  1042.878960  4234.871582  4091.281982   \n","214  4236.514296  21.179939   448.589826  4236.410156  4070.769043   \n","215  4237.631749  19.933718   397.353096  4237.436035  4154.871582   \n","\n","         AF3_max  AF3_activity  AF3_mobility  AF3_complexity  AF3_ar_coeff_0  \\\n","0    4429.230469   1889.797801      0.212561        5.546035        1.886056   \n","1    5505.127930   1952.726344      0.269354        4.519996        1.854385   \n","2    4438.974121    633.816192      0.379098        3.379011        1.709990   \n","3    5739.486816   7478.298389      0.111843       11.086097        1.798939   \n","4    4543.589844   1198.985906      0.264964        4.459335        1.864686   \n","..           ...           ...           ...             ...             ...   \n","211  4835.384277   9580.940701      0.106721       10.789804        1.931506   \n","212  4543.076660   2542.829266      0.105597       11.185909        1.850163   \n","213  4401.025391   1042.878960      0.171739        7.219231        1.768337   \n","214  4437.435547    448.589826      0.276163        4.529806        1.562347   \n","215  4365.641113    397.353096      0.257500        4.828735        1.731316   \n","\n","     ...  F8_Gamma_power  F8_spectral_entropy  AF4_Delta_power  \\\n","0    ...      372.815243             2.927640       722.066811   \n","1    ...       18.238877             3.321144       988.999364   \n","2    ...       58.009400             3.251759       439.611659   \n","3    ...       37.285689             2.788485      6092.273632   \n","4    ...       14.784819             3.466234      2339.739461   \n","..   ...             ...                  ...              ...   \n","211  ...       55.028680             2.829569       549.013560   \n","212  ...       10.241707             3.310003       806.514682   \n","213  ...       14.401712             2.614483       929.661063   \n","214  ...       11.727418             2.334435       346.849914   \n","215  ...        9.168454             3.958936       429.863409   \n","\n","     AF4_Theta_power  AF4_Alpha_power  AF4_Beta_power  AF4_Gamma_power  \\\n","0          73.374318        26.934085       39.510158        12.868163   \n","1         104.930425        34.668521       50.649449        20.801604   \n","2          62.292803        21.426163       42.629270        21.327653   \n","3         235.566933        47.641229       44.089441        18.788212   \n","4         143.981679        26.881912       31.913806        12.180580   \n","..               ...              ...             ...              ...   \n","211        50.597313        19.869369       32.719328        26.388016   \n","212        67.316092        34.419324       31.208080        14.308119   \n","213        66.896045        27.174102       28.494446        13.939820   \n","214        31.735962        34.137930       32.800019        15.050338   \n","215        47.130917        20.924372       23.692223        11.364165   \n","\n","     AF4_spectral_entropy  Emotion  Folder  \n","0                3.228577        1       1  \n","1                2.722334        1       1  \n","2                3.976593        0       1  \n","3                2.098816        0       1  \n","4                2.435904        1       1  \n","..                    ...      ...     ...  \n","211              3.308674        1      25  \n","212              3.121754        0      25  \n","213              2.230978        0      25  \n","214              2.446117        1      25  \n","215              3.710480        1      25  \n","\n","[200 rows x 282 columns]"],"text/html":["\n","  <div id=\"df-7d10fea5-8200-4bc2-813e-404c68bd4d32\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>AF3_mean</th>\n","      <th>AF3_std</th>\n","      <th>AF3_var</th>\n","      <th>AF3_median</th>\n","      <th>AF3_min</th>\n","      <th>AF3_max</th>\n","      <th>AF3_activity</th>\n","      <th>AF3_mobility</th>\n","      <th>AF3_complexity</th>\n","      <th>AF3_ar_coeff_0</th>\n","      <th>...</th>\n","      <th>F8_Gamma_power</th>\n","      <th>F8_spectral_entropy</th>\n","      <th>AF4_Delta_power</th>\n","      <th>AF4_Theta_power</th>\n","      <th>AF4_Alpha_power</th>\n","      <th>AF4_Beta_power</th>\n","      <th>AF4_Gamma_power</th>\n","      <th>AF4_spectral_entropy</th>\n","      <th>Emotion</th>\n","      <th>Folder</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>4233.422687</td>\n","      <td>43.471805</td>\n","      <td>1889.797801</td>\n","      <td>4231.794922</td>\n","      <td>3241.025635</td>\n","      <td>4429.230469</td>\n","      <td>1889.797801</td>\n","      <td>0.212561</td>\n","      <td>5.546035</td>\n","      <td>1.886056</td>\n","      <td>...</td>\n","      <td>372.815243</td>\n","      <td>2.927640</td>\n","      <td>722.066811</td>\n","      <td>73.374318</td>\n","      <td>26.934085</td>\n","      <td>39.510158</td>\n","      <td>12.868163</td>\n","      <td>3.228577</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>4231.008787</td>\n","      <td>44.189663</td>\n","      <td>1952.726344</td>\n","      <td>4229.743652</td>\n","      <td>3387.692139</td>\n","      <td>5505.127930</td>\n","      <td>1952.726344</td>\n","      <td>0.269354</td>\n","      <td>4.519996</td>\n","      <td>1.854385</td>\n","      <td>...</td>\n","      <td>18.238877</td>\n","      <td>3.321144</td>\n","      <td>988.999364</td>\n","      <td>104.930425</td>\n","      <td>34.668521</td>\n","      <td>50.649449</td>\n","      <td>20.801604</td>\n","      <td>2.722334</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>4235.494381</td>\n","      <td>25.175706</td>\n","      <td>633.816192</td>\n","      <td>4233.846191</td>\n","      <td>3968.205078</td>\n","      <td>4438.974121</td>\n","      <td>633.816192</td>\n","      <td>0.379098</td>\n","      <td>3.379011</td>\n","      <td>1.709990</td>\n","      <td>...</td>\n","      <td>58.009400</td>\n","      <td>3.251759</td>\n","      <td>439.611659</td>\n","      <td>62.292803</td>\n","      <td>21.426163</td>\n","      <td>42.629270</td>\n","      <td>21.327653</td>\n","      <td>3.976593</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4237.481215</td>\n","      <td>86.477155</td>\n","      <td>7478.298389</td>\n","      <td>4236.922852</td>\n","      <td>3529.743408</td>\n","      <td>5739.486816</td>\n","      <td>7478.298389</td>\n","      <td>0.111843</td>\n","      <td>11.086097</td>\n","      <td>1.798939</td>\n","      <td>...</td>\n","      <td>37.285689</td>\n","      <td>2.788485</td>\n","      <td>6092.273632</td>\n","      <td>235.566933</td>\n","      <td>47.641229</td>\n","      <td>44.089441</td>\n","      <td>18.788212</td>\n","      <td>2.098816</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4233.419821</td>\n","      <td>34.626376</td>\n","      <td>1198.985906</td>\n","      <td>4230.769043</td>\n","      <td>3809.230713</td>\n","      <td>4543.589844</td>\n","      <td>1198.985906</td>\n","      <td>0.264964</td>\n","      <td>4.459335</td>\n","      <td>1.864686</td>\n","      <td>...</td>\n","      <td>14.784819</td>\n","      <td>3.466234</td>\n","      <td>2339.739461</td>\n","      <td>143.981679</td>\n","      <td>26.881912</td>\n","      <td>31.913806</td>\n","      <td>12.180580</td>\n","      <td>2.435904</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>211</th>\n","      <td>4239.671983</td>\n","      <td>97.882280</td>\n","      <td>9580.940701</td>\n","      <td>4237.948730</td>\n","      <td>759.487183</td>\n","      <td>4835.384277</td>\n","      <td>9580.940701</td>\n","      <td>0.106721</td>\n","      <td>10.789804</td>\n","      <td>1.931506</td>\n","      <td>...</td>\n","      <td>55.028680</td>\n","      <td>2.829569</td>\n","      <td>549.013560</td>\n","      <td>50.597313</td>\n","      <td>19.869369</td>\n","      <td>32.719328</td>\n","      <td>26.388016</td>\n","      <td>3.308674</td>\n","      <td>1</td>\n","      <td>25</td>\n","    </tr>\n","    <tr>\n","      <th>212</th>\n","      <td>4229.912101</td>\n","      <td>50.426474</td>\n","      <td>2542.829266</td>\n","      <td>4228.205078</td>\n","      <td>3890.256348</td>\n","      <td>4543.076660</td>\n","      <td>2542.829266</td>\n","      <td>0.105597</td>\n","      <td>11.185909</td>\n","      <td>1.850163</td>\n","      <td>...</td>\n","      <td>10.241707</td>\n","      <td>3.310003</td>\n","      <td>806.514682</td>\n","      <td>67.316092</td>\n","      <td>34.419324</td>\n","      <td>31.208080</td>\n","      <td>14.308119</td>\n","      <td>3.121754</td>\n","      <td>0</td>\n","      <td>25</td>\n","    </tr>\n","    <tr>\n","      <th>213</th>\n","      <td>4234.076193</td>\n","      <td>32.293637</td>\n","      <td>1042.878960</td>\n","      <td>4234.871582</td>\n","      <td>4091.281982</td>\n","      <td>4401.025391</td>\n","      <td>1042.878960</td>\n","      <td>0.171739</td>\n","      <td>7.219231</td>\n","      <td>1.768337</td>\n","      <td>...</td>\n","      <td>14.401712</td>\n","      <td>2.614483</td>\n","      <td>929.661063</td>\n","      <td>66.896045</td>\n","      <td>27.174102</td>\n","      <td>28.494446</td>\n","      <td>13.939820</td>\n","      <td>2.230978</td>\n","      <td>0</td>\n","      <td>25</td>\n","    </tr>\n","    <tr>\n","      <th>214</th>\n","      <td>4236.514296</td>\n","      <td>21.179939</td>\n","      <td>448.589826</td>\n","      <td>4236.410156</td>\n","      <td>4070.769043</td>\n","      <td>4437.435547</td>\n","      <td>448.589826</td>\n","      <td>0.276163</td>\n","      <td>4.529806</td>\n","      <td>1.562347</td>\n","      <td>...</td>\n","      <td>11.727418</td>\n","      <td>2.334435</td>\n","      <td>346.849914</td>\n","      <td>31.735962</td>\n","      <td>34.137930</td>\n","      <td>32.800019</td>\n","      <td>15.050338</td>\n","      <td>2.446117</td>\n","      <td>1</td>\n","      <td>25</td>\n","    </tr>\n","    <tr>\n","      <th>215</th>\n","      <td>4237.631749</td>\n","      <td>19.933718</td>\n","      <td>397.353096</td>\n","      <td>4237.436035</td>\n","      <td>4154.871582</td>\n","      <td>4365.641113</td>\n","      <td>397.353096</td>\n","      <td>0.257500</td>\n","      <td>4.828735</td>\n","      <td>1.731316</td>\n","      <td>...</td>\n","      <td>9.168454</td>\n","      <td>3.958936</td>\n","      <td>429.863409</td>\n","      <td>47.130917</td>\n","      <td>20.924372</td>\n","      <td>23.692223</td>\n","      <td>11.364165</td>\n","      <td>3.710480</td>\n","      <td>1</td>\n","      <td>25</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>200 rows Ã— 282 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7d10fea5-8200-4bc2-813e-404c68bd4d32')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-7d10fea5-8200-4bc2-813e-404c68bd4d32 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-7d10fea5-8200-4bc2-813e-404c68bd4d32');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-4c190ee8-80b4-49e3-86b6-07f6ab2958a0\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4c190ee8-80b4-49e3-86b6-07f6ab2958a0')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-4c190ee8-80b4-49e3-86b6-07f6ab2958a0 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_c34f194e-6add-4487-aac8-72eb5cb00b8a\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df_time_frequency')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_c34f194e-6add-4487-aac8-72eb5cb00b8a button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df_time_frequency');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_time_frequency"}},"metadata":{},"execution_count":99}],"source":["df_time_filtered_incomplete=df_time_filtered.iloc[:,:-2]\n","df_time_frequency=pd.concat([df_time_filtered_incomplete, df_frequency_filtered], axis=1)\n","df_time_frequency"]},{"cell_type":"markdown","metadata":{"id":"B2qpOAqvUo2E"},"source":["## Train test split"]},{"cell_type":"code","execution_count":100,"metadata":{"id":"yFcbe_CmUoCe","executionInfo":{"status":"ok","timestamp":1713901751447,"user_tz":240,"elapsed":37,"user":{"displayName":"Wang","userId":"06822780026042244845"}}},"outputs":[],"source":["train_time_frequency = df_time_frequency[df_time_frequency['Folder'].isin(train_folders)]\n","X_train_time_frequency =train_time_frequency.iloc[:,:-2]\n","y_train_time_frequency=train_time_frequency.iloc[:,-2]\n","\n","test_time_frequency = df_time_frequency[df_time_frequency['Folder'].isin(test_folders)]\n","X_test_time_frequency =test_time_frequency.iloc[:,:-2]\n","y_test_time_frequency=test_time_frequency.iloc[:,-2]"]},{"cell_type":"markdown","metadata":{"id":"x0pXAbDtU_pA"},"source":["## SVM and CV"]},{"cell_type":"code","execution_count":101,"metadata":{"id":"MgnZbbiPVBfY","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1713901762956,"user_tz":240,"elapsed":11546,"user":{"displayName":"Wang","userId":"06822780026042244845"}},"outputId":"3fecc593-035a-4d42-c791-5362d81cb13a"},"outputs":[{"output_type":"stream","name":"stdout","text":["Fitting 3 folds for each of 16 candidates, totalling 48 fits\n","Best parameters for fold 1: {'svc__C': 0.01, 'svc__gamma': 'scale', 'svc__kernel': 'rbf'}\n","Fold 1 completed. Validation accuracy: 62.50%\n","Fitting 3 folds for each of 16 candidates, totalling 48 fits\n","Best parameters for fold 2: {'svc__C': 1, 'svc__gamma': 'scale', 'svc__kernel': 'rbf'}\n","Fold 2 completed. Validation accuracy: 43.75%\n","Fitting 3 folds for each of 16 candidates, totalling 48 fits\n","Best parameters for fold 3: {'svc__C': 0.1, 'svc__gamma': 'scale', 'svc__kernel': 'linear'}\n","Fold 3 completed. Validation accuracy: 12.50%\n","Fitting 3 folds for each of 16 candidates, totalling 48 fits\n","Best parameters for fold 4: {'svc__C': 0.01, 'svc__gamma': 'scale', 'svc__kernel': 'rbf'}\n","Fold 4 completed. Validation accuracy: 37.50%\n","Fitting 3 folds for each of 16 candidates, totalling 48 fits\n","Best parameters for fold 5: {'svc__C': 1, 'svc__gamma': 'scale', 'svc__kernel': 'rbf'}\n","Fold 5 completed. Validation accuracy: 50.00%\n","Fitting 3 folds for each of 16 candidates, totalling 48 fits\n","Best parameters for fold 6: {'svc__C': 0.1, 'svc__gamma': 'scale', 'svc__kernel': 'linear'}\n","Fold 6 completed. Validation accuracy: 56.25%\n","Fitting 3 folds for each of 16 candidates, totalling 48 fits\n","Best parameters for fold 7: {'svc__C': 0.01, 'svc__gamma': 'scale', 'svc__kernel': 'rbf'}\n","Fold 7 completed. Validation accuracy: 25.00%\n","Fitting 3 folds for each of 16 candidates, totalling 48 fits\n","Best parameters for fold 8: {'svc__C': 0.01, 'svc__gamma': 'scale', 'svc__kernel': 'linear'}\n","Fold 8 completed. Validation accuracy: 12.50%\n","Fitting 3 folds for each of 16 candidates, totalling 48 fits\n","Best parameters for fold 9: {'svc__C': 0.01, 'svc__gamma': 'scale', 'svc__kernel': 'rbf'}\n","Fold 9 completed. Validation accuracy: 50.00%\n","Fitting 3 folds for each of 16 candidates, totalling 48 fits\n","Best parameters for fold 10: {'svc__C': 0.1, 'svc__gamma': 'scale', 'svc__kernel': 'linear'}\n","Fold 10 completed. Validation accuracy: 43.75%\n","Best validation accuracy: 62.50%\n"]}],"source":["\n","cv_scores = []\n","best_model_time_frequency = None\n","best_accuracy_time_frequency = 0\n","\n","for i in range(fold):\n","    # Shuffle the folder names to ensure random distribution\n","    random.shuffle(train_folders)\n","\n","    # Calculate the indices for the 90-10 split\n","    train_split_cv = int(0.9 * len(train_folders))  # 90% for training\n","\n","    # Split the folders into training and validation\n","    train_folders_cv = train_folders[:train_split_cv]\n","    val_folders_cv = train_folders[train_split_cv:]\n","\n","    # Filter data based on the folder names\n","    train_cv = train_time_frequency[train_time_frequency['Folder'].isin(train_folders_cv)]\n","    X_train_cv = train_cv.iloc[:, :-2]\n","    y_train_cv = train_cv.iloc[:, -2]\n","\n","    val_cv = train_time_frequency[train_time_frequency['Folder'].isin(val_folders_cv)]\n","    X_val_cv = val_cv.iloc[:, :-2]\n","    y_val_cv = val_cv.iloc[:, -2]\n","\n","    # Create and configure the grid search wrapped SVM model\n","    grid_search_model = create_grid_search_svm_model()\n","\n","    # Fit the grid search model on training data\n","    grid_search_model.fit(X_train_cv, y_train_cv)\n","\n","    # Print the best parameters found by the grid search\n","    print(f\"Best parameters for fold {i+1}: {grid_search_model.best_params_}\")\n","\n","    # Best estimator found by grid search\n","    best_model = grid_search_model.best_estimator_\n","\n","    # Evaluate the best model on the validation set\n","    val_predictions = best_model.predict(X_val_cv)\n","    val_accuracy = accuracy_score(y_val_cv, val_predictions)\n","    cv_scores.append(val_accuracy)\n","    print(f\"Fold {i+1} completed. Validation accuracy: {val_accuracy * 100:.2f}%\")\n","\n","    # Check if the current model has the best accuracy\n","    if val_accuracy > best_accuracy_time_frequency:\n","        best_accuracy_time_frequency = val_accuracy\n","        best_model_time_frequency = best_model\n","\n","# Report the best accuracy found\n","print(f\"Best validation accuracy: {best_accuracy_time_frequency * 100:.2f}%\")  # Updated print statement\n"]},{"cell_type":"code","source":["\n","# Evaluate permutation importance on the validation set\n","perm_importance = permutation_importance(best_model_time_frequency, X_train_time_frequency, y_train_time_frequency, n_repeats=10, random_state=42)\n","\n","# Get importances and standard deviations\n","importances = perm_importance.importances_mean\n","stds = perm_importance.importances_std\n","indices = np.argsort(importances)[::-1]\n","\n","# Limit to top 10 features\n","top_n = 10\n","top_indices = indices[:top_n]\n","\n","# Plotting feature importances for top 10 features only\n","plt.figure(figsize=(10, 6))\n","plt.title(\"Top 10 Permutation-based Feature Importances\")\n","plt.bar(range(top_n), importances[top_indices], yerr=stds[top_indices], align='center', color='b')\n","plt.xticks(range(top_n), X_val_cv.columns[top_indices], rotation=90)\n","plt.ylabel('Importance')\n","plt.show()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":681},"id":"ZxnVlNOJXSKe","executionInfo":{"status":"ok","timestamp":1713901794396,"user_tz":240,"elapsed":31458,"user":{"displayName":"Wang","userId":"06822780026042244845"}},"outputId":"20aed077-86dc-4062-87a9-89f257e05f58"},"execution_count":102,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["\n","# Evaluate permutation importance on the validation set\n","perm_importance = permutation_importance(best_model_time_frequency, X_val_cv, y_val_cv, n_repeats=10, random_state=42)\n","\n","# Get importances and standard deviations\n","importances = perm_importance.importances_mean\n","stds = perm_importance.importances_std\n","indices = np.argsort(importances)[::-1]\n","\n","# Limit to top 10 features\n","top_n = 10\n","top_indices = indices[:top_n]\n","\n","# Plotting feature importances for top 10 features only\n","plt.figure(figsize=(10, 6))\n","plt.title(\"Top 10 Permutation-based Feature Importances\")\n","plt.bar(range(top_n), importances[top_indices], yerr=stds[top_indices], align='center', color='b')\n","plt.xticks(range(top_n), X_val_cv.columns[top_indices], rotation=90)\n","plt.ylabel('Importance')\n","plt.show()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":681},"id":"QM-pGulNX4Ha","executionInfo":{"status":"ok","timestamp":1713901811209,"user_tz":240,"elapsed":16817,"user":{"displayName":"Wang","userId":"06822780026042244845"}},"outputId":"23f58434-9a6d-4de1-d80b-fcc3b0f197e8"},"execution_count":103,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]}],"metadata":{"colab":{"collapsed_sections":["dPyQvA3d9Cqn","sCvlTL6N9QO_","eH5eSZ58-nMC","rWfzCo3i9osr"],"provenance":[]},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}